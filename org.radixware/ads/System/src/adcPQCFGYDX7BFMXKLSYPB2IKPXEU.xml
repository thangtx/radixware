<?xml version="1.0" encoding="UTF-8"?>
<AdsDefinition xmlns="http://schemas.radixware.org/adsdef.xsd" xmlns:xsc="http://schemas.radixware.org/xscml.xsd" FormatVersion="0">
  <AdsClassDefinition Id="adcPQCFGYDX7BFMXKLSYPB2IKPXEU" Name="AADCLocksDialogUtils" Type="3" Environment="server">
    <AccessRules IsPublished="false">
      <Transparence Extendable="false"/>
    </AccessRules>
    <Headers>
      <Src Name="HeaderadcPQCFGYDX7BFMXKLSYPB2IKPXEU">
        <xsc:Item>
          <xsc:Java>import org.radixware.kernel.server.instance.aadc.*;</xsc:Java>
        </xsc:Item>
      </Src>
    </Headers>
    <Bodies>
      <Src Name="BodyadcPQCFGYDX7BFMXKLSYPB2IKPXEU"/>
    </Bodies>
    <MethodGroup Id="cmgLY2VSUUMDJFOFCB3JLXI436224" Name="Root"/>
    <PropertyGroup Id="cpg7JTO6WMIWVD6BLGEBQJRA6JJRQ" Name="Root"/>
    <Properties/>
    <Methods>
      <Method Id="mth6RGGADCF6NFNPMP5N673B4EKBY" Name="getTestAADCLockCacheKeyList" Nature="0" IsOverride="false" isDescriptionInherited="false">
        <AccessRules IsPublished="false" IsStatic="true"/>
        <ReturnType TypeId="400" extStr="java.util.List">
          <xsc:GenericArguments>
            <xsc:Argument Alias="?">
              <xsc:Type TypeId="400" extStr="org.radixware.kernel.server.instance.aadc.LockCacheKey"/>
            </xsc:Argument>
          </xsc:GenericArguments>
        </ReturnType>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>java.util.List&lt;LockCacheKey> result = new java.util.ArrayList&lt;LockCacheKey>();

for (int i = 1; i &lt;= /*20000*/1000; i++) {
    </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="pdcPid_______________________">
                <xsc:Presentation>Types::Pid</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> pid = new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="pdcPid_______________________ mthF5KPUVPGFFE67BEUHOBOU7C7ZY" Invoke="true">
                <xsc:Presentation>Pid</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="pdcArte______________________">
                <xsc:Presentation>Arte::Arte</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="pdcArte______________________ mthX22GMFYBKNC6RGIHJSGRQQ7K2A" Invoke="true">
                <xsc:Presentation>getInstance</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(), </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="tblWZB7K4HLJPOBDCIUAALOMT5GDM">
                <xsc:Presentation>Scheduling::Task</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>, </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aecWZB7K4HLJPOBDCIUAALOMT5GDM colPU65PF7LJPOBDCIUAALOMT5GDM">
                <xsc:Presentation>Scheduling::Task:id</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>, i);
    byte lockType = (byte) (i % 10);
    
    LockCacheKey key = new LockCacheKey(pid, lockType);
    result.add(key);
}

for (int i = 1; i &lt;= /*8000*/1000; i++) {
    </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="pdcPid_______________________">
                <xsc:Presentation>Types::Pid</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> pid = new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="pdcPid_______________________ mthF5KPUVPGFFE67BEUHOBOU7C7ZY" Invoke="true">
                <xsc:Presentation>Pid</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="pdcArte______________________">
                <xsc:Presentation>Arte::Arte</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="pdcArte______________________ mthX22GMFYBKNC6RGIHJSGRQQ7K2A" Invoke="true">
                <xsc:Presentation>getInstance</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(), </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="tbl52CHFNO3EGWDBRCRAAIT4AGD7E">
                <xsc:Presentation>System::Instance</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>, </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aec52CHFNO3EGWDBRCRAAIT4AGD7E col3VINP666G5VDBFSUAAUMFADAIA">
                <xsc:Presentation>Instance:id</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>, i);
    byte lockType = (byte) (i % 10);
    
    LockCacheKey key = new LockCacheKey(pid, lockType);
    result.add(key);
}

for (int i = 1; i &lt;= 1000; i++) {
    </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="pdcPid_______________________">
                <xsc:Presentation>Types::Pid</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> pid = new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="pdcPid_______________________ mthF5KPUVPGFFE67BEUHOBOU7C7ZY" Invoke="true">
                <xsc:Presentation>Pid</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="pdcArte______________________">
                <xsc:Presentation>Arte::Arte</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="pdcArte______________________ mthX22GMFYBKNC6RGIHJSGRQQ7K2A" Invoke="true">
                <xsc:Presentation>getInstance</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(), </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="tbl5HP4XTP3EGWDBRCRAAIT4AGD7E">
                <xsc:Presentation>System::Unit</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>, </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aec5HP4XTP3EGWDBRCRAAIT4AGD7E colEVLUYADHR5VDBNSIAAUMFADAIA">
                <xsc:Presentation>Unit:id</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>, i);
    byte lockType = (byte) (i % 10);
    
    LockCacheKey key = new LockCacheKey(pid, lockType);
    result.add(key);
}

return result;</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthCSH466APQJCIPPCVYWEAFWXT4M" Name="getStaticsticsEntryByObject" Nature="0" IsOverride="false" isDescriptionInherited="false">
        <AccessRules IsPublished="false" IsStatic="true"/>
        <Parameters>
          <Parameter Name="statisticsEntries" Id="mprRP3STLNLDVBFBDHME35FWXQNT4">
            <Type TypeId="400" extStr="java.util.List">
              <xsc:GenericArguments>
                <xsc:Argument Alias="?">
                  <xsc:Type TypeId="451" Path="xsdZSI43OXUWJGKXFRIHW5YNC4YCQ" extStr="AADCLocksStatistics.Entry"/>
                </xsc:Argument>
              </xsc:GenericArguments>
            </Type>
          </Parameter>
          <Parameter Name="objType" Id="mprQX43EM3IB5BKFEBCT3KOBXW6DE">
            <Type TypeId="21"/>
          </Parameter>
          <Parameter Name="ownerMember" Id="mprOMLUCFILJJHMHESC6P437RVHJY">
            <Type TypeId="401" extStr="int"/>
          </Parameter>
        </Parameters>
        <ReturnType TypeId="451" Path="xsdZSI43OXUWJGKXFRIHW5YNC4YCQ" extStr="AADCLocksStatistics.Entry"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>for (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="451" Path="xsdZSI43OXUWJGKXFRIHW5YNC4YCQ" extStr="AADCLocksStatistics.Entry">
                <xsc:Presentation>AADCLocksListXsd:AADCLocksStatistics.Entry</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> entry : statisticsEntries) {
    if (objType.equals(entry.ObjectType) &amp;&amp; </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21">
                <xsc:Presentation>Str</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.valueOf(ownerMember).equals(entry.OwnerMember)) {
        return entry;
    }
}

return null;</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
    </Methods>
  </AdsClassDefinition>
</AdsDefinition>