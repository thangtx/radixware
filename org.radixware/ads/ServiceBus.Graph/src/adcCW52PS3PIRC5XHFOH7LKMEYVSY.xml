<?xml version="1.0" encoding="UTF-8"?>
<AdsDefinition xmlns="http://schemas.radixware.org/adsdef.xsd" xmlns:xsc="http://schemas.radixware.org/xscml.xsd" FormatVersion="0">
  <AdsClassDefinition Id="adcCW52PS3PIRC5XHFOH7LKMEYVSY" Name="GraphUtil" Type="3" Environment="explorer">
    <AccessRules IsPublished="false">
      <Transparence Extendable="false"/>
    </AccessRules>
    <Headers>
      <Src Name="HeaderadcTR26I22BERABNFYB5O5Q5EPNWI">
        <xsc:Item>
          <xsc:Java>import java.util.*;
import com.trolltech.qt.core.*;
import com.trolltech.qt.gui.*;
</xsc:Java>
        </xsc:Item>
      </Src>
    </Headers>
    <Bodies>
      <Src Name="BodyadcWSZHOXNU7ND5ZIVEWYJB5D244U">
        <xsc:Item>
          <xsc:Java>private static HashMap&lt;</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="411" Path="adcELH54EKVCJAATNTLFHHCSVHPZU"/>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>, QPixmap> IMAGE_HASH = new HashMap&lt;</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="411" Path="adcELH54EKVCJAATNTLFHHCSVHPZU"/>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>, QPixmap>();</xsc:Java>
        </xsc:Item>
      </Src>
    </Bodies>
    <MethodGroup Id="cmgNBL542TGSRD57NV5AGOS3A3YBY" Name="Root"/>
    <PropertyGroup Id="cpgSY6OFLHWS5CRVJGNLAFRTLHO4U" Name="Root"/>
    <Properties/>
    <Methods>
      <Method Id="mthPLRHYJ7GEJBPVDQIF3BNINM7MM" Name="drawIcon" Nature="0" IsOverride="false">
        <AccessRules IsStatic="true"/>
        <Parameters>
          <Parameter Name="userSession" Id="mprLGAYGJRY3BGTRHNEZTYTQDA4LU">
            <Type TypeId="400" extStr="org.radixware.kernel.common.client.IClientEnvironment"/>
          </Parameter>
          <Parameter Name="painter" Id="mpr24MO25EVXBDUFD4KOMD5CZRGRE">
            <Type TypeId="400" extStr="com.trolltech.qt.gui.QPainter"/>
          </Parameter>
          <Parameter Name="iconId" Id="mprXF65OZRA4FEIHE4MO4WJZJGKXI">
            <Type TypeId="411" Path="adcELH54EKVCJAATNTLFHHCSVHPZU"/>
          </Parameter>
          <Parameter Name="rect" Id="mprEIOAIFM62RGZBJI3PPVMOYRVXM">
            <Type TypeId="400" extStr="com.trolltech.qt.core.QRectF"/>
          </Parameter>
          <Parameter Name="size" Id="mprKBB24VUHRBBQHGOOWL4Q7HA6Z4">
            <Type TypeId="401" extStr="double"/>
          </Parameter>
          <Parameter Name="inversed" Id="mprLQNO6CQUYBDW7GWX27WJRMGZWE">
            <Type TypeId="401" extStr="boolean"/>
          </Parameter>
        </Parameters>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>if (iconId == null)
    return;

QPixmap pixmap = IMAGE_HASH.get(iconId);
if (pixmap == null) {
    final QIcon icon = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="adcCUZTMTWLPFABNGEX6P6X2PHQVA"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.getQIcon( userSession.getDefManager().getImage(iconId));
    if (icon != null) {
        pixmap = icon.pixmap((int)size);
        IMAGE_HASH.put(iconId, pixmap);
    }
}

if (pixmap != null) {
    if (inversed) {
        QPointF center = rect.center();
 
        QTransform returnOrigin = new QTransform();
        returnOrigin.translate(-center.x(), -center.y());
 
        QTransform mirror = new QTransform();
        mirror.scale(-1, +1);
 
        QTransform translateOrigin = new QTransform();
        translateOrigin.translate(center.x(), center.y());
 
        QTransform originalTransform = painter.transform();
        painter.setTransform(returnOrigin.multiply(mirror).multiply(translateOrigin).multiply(originalTransform));
    
        painter.drawPixmap(rect.center().subtract(new QPointF(size/2.0, size/2.0)), pixmap);
        painter.setTransform(originalTransform);
    } else {
        painter.drawPixmap(rect.center().subtract(new QPointF(size/2.0, size/2.0)), pixmap);
    }
}
</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthAFAV3K3QYVA2TLF47SUOAPNG4U" Name="roleFromPoint" Nature="0" IsOverride="false">
        <AccessRules Access="2" IsPublished="false" IsStatic="true"/>
        <Parameters>
          <Parameter Name="graph" Id="mprRD5Z7EGGT5GVHOJZWBWIZOESCE">
            <Type TypeId="411" Path="adcHMXIRC2KYZFDRHIIULJ2M6YRLM"/>
          </Parameter>
          <Parameter Name="point" Id="mpr5XTRD4S3DVHK3PCQYPU6NHJAAA">
            <Type TypeId="400" extStr="com.trolltech.qt.core.QPointF"/>
          </Parameter>
        </Parameters>
        <ReturnType TypeId="411" Path="adcNGQAWOQUY5DMHLIPS27TSPSNRU"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>final List&lt;QGraphicsItemInterface> items = graph.scene().items(point);
for (QGraphicsItemInterface item : items) {
    if (item instanceof </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="400" extStr="com.trolltech.qt.gui.QGraphicsLineItem"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> || item instanceof </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="adc2GIU2FYS25GHNJNFH37JDRZ37A"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>)
        continue;
    if (item instanceof </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="adcNGQAWOQUY5DMHLIPS27TSPSNRU"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>)
        return (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="adcNGQAWOQUY5DMHLIPS27TSPSNRU"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>)item;
    break;
}
return null;
</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthXIAGJTJ5PJHGBHVPP2774CJZCQ" Name="isInputRole" Nature="0" IsOverride="false">
        <AccessRules IsStatic="true"/>
        <Parameters>
          <Parameter Name="graph" Id="mprZBVMWWBPJZBPVGCA4X5RIRT5DY">
            <Type TypeId="411" Path="adcHMXIRC2KYZFDRHIIULJ2M6YRLM"/>
          </Parameter>
          <Parameter Name="point" Id="mprU2AR7S3CMBB2DCD4YHSRFVB2LQ">
            <Type TypeId="400" extStr="com.trolltech.qt.core.QPointF"/>
          </Parameter>
        </Parameters>
        <ReturnType TypeId="411" Path="adcNGQAWOQUY5DMHLIPS27TSPSNRU"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>final </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="adcNGQAWOQUY5DMHLIPS27TSPSNRU"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> role = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcCW52PS3PIRC5XHFOH7LKMEYVSY mthAFAV3K3QYVA2TLF47SUOAPNG4U" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(graph, point);
if (role==null)
    return null;
final </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="adcIY4RHST2WFHCPAIW6JAM2JB2UI"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> node = role.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcNGQAWOQUY5DMHLIPS27TSPSNRU mth5HK6S2XVFJCSJF5AN4B3N2XOII" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();

if (node.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcIY4RHST2WFHCPAIW6JAM2JB2UI mthKR4BMRIJSBHLRFZ3N3EY4FOW54" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(role))
    return role;

return null;</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthIWINWXWHBREA3CKNENRAVN4GIQ" Name="isOutputRole" Nature="0" IsOverride="false">
        <AccessRules IsStatic="true"/>
        <Parameters>
          <Parameter Name="graph" Id="mprGJE4SLCCHRG5PIBALWULAWQF5U">
            <Type TypeId="411" Path="adcHMXIRC2KYZFDRHIIULJ2M6YRLM"/>
          </Parameter>
          <Parameter Name="point" Id="mprJSUBWE3KAJCK5IPW2QXQAFG5BQ">
            <Type TypeId="400" extStr="com.trolltech.qt.core.QPointF"/>
          </Parameter>
        </Parameters>
        <ReturnType TypeId="411" Path="adcNGQAWOQUY5DMHLIPS27TSPSNRU"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>final </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="adcNGQAWOQUY5DMHLIPS27TSPSNRU"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> role = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcCW52PS3PIRC5XHFOH7LKMEYVSY mthAFAV3K3QYVA2TLF47SUOAPNG4U" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(graph, point);
if (role==null)
    return null;
final </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="adcIY4RHST2WFHCPAIW6JAM2JB2UI"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> node = role.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcNGQAWOQUY5DMHLIPS27TSPSNRU mth5HK6S2XVFJCSJF5AN4B3N2XOII" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();

if (node.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcIY4RHST2WFHCPAIW6JAM2JB2UI mthUERWQXMMCVCDBAUBZHYYE45GPI" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(role))
    return role;

return null;</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthCIIQ7Y5WKJDXLFVZSLSVMNHTTQ" Name="roleFromName" Nature="0" IsOverride="false">
        <AccessRules IsStatic="true"/>
        <Parameters>
          <Parameter Name="roles" Id="mprJBGANLUQNNF4HIHAMMPWJ7STWM">
            <Type TypeId="400" extStr="java.util.Vector">
              <xsc:GenericArguments>
                <xsc:Argument DerivationRule="extends" Alias="?">
                  <xsc:Type TypeId="411" Path="adcNGQAWOQUY5DMHLIPS27TSPSNRU"/>
                </xsc:Argument>
              </xsc:GenericArguments>
            </Type>
          </Parameter>
          <Parameter Name="name" Id="mprK2YONSOS5ZEEFGXNS6LH5TPXNE">
            <Type TypeId="21"/>
          </Parameter>
        </Parameters>
        <ReturnType TypeId="411" Path="adcNGQAWOQUY5DMHLIPS27TSPSNRU"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>for (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="adcNGQAWOQUY5DMHLIPS27TSPSNRU"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> role : roles) {
    if (name.equals(role.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcNGQAWOQUY5DMHLIPS27TSPSNRU mthEGZRUCFBVBFHTEYZBGBG5AJOWA" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>().Name))
        return role;
}
return null;</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthTMZJC4DISRDHVOQS2Z5V4OQY34" Name="swapRole" Nature="0" IsOverride="false">
        <AccessRules IsStatic="true"/>
        <Parameters>
          <Parameter Name="role" Id="mprQLY473VSKBBSDAH6FIAUHL4BEU">
            <Type TypeId="411" Path="adcNGQAWOQUY5DMHLIPS27TSPSNRU"/>
          </Parameter>
        </Parameters>
        <ReturnType TypeId="411" Path="adcNGQAWOQUY5DMHLIPS27TSPSNRU"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>final </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="adcNGQAWOQUY5DMHLIPS27TSPSNRU"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> r = (role instanceof </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="adcUZMJJEPNJNE35DNQ3C6GVQG4MA"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>) ? new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcSXZSUUPDBRHWRCOYSYXCX75IOY mthS4DITFYOJVAQBJAQJ4QY2LSDNY" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(role.userSession, role.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcNGQAWOQUY5DMHLIPS27TSPSNRU mthEGZRUCFBVBFHTEYZBGBG5AJOWA" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>()) : new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcUZMJJEPNJNE35DNQ3C6GVQG4MA mthWFR3PPJXK5FAJFOH23F5IVB5ZQ" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(role.userSession, role.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcNGQAWOQUY5DMHLIPS27TSPSNRU mthEGZRUCFBVBFHTEYZBGBG5AJOWA" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>());
final </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="adcIY4RHST2WFHCPAIW6JAM2JB2UI"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> node = role.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcNGQAWOQUY5DMHLIPS27TSPSNRU mth5HK6S2XVFJCSJF5AN4B3N2XOII" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();

final </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="adc2GIU2FYS25GHNJNFH37JDRZ37A"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>[] edges = new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="adc2GIU2FYS25GHNJNFH37JDRZ37A"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>[role.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcNGQAWOQUY5DMHLIPS27TSPSNRU mthQXLZY5VAORD5TFNFRPUTFGNLLY" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>().size()];
role.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcNGQAWOQUY5DMHLIPS27TSPSNRU mthQXLZY5VAORD5TFNFRPUTFGNLLY" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>().toArray(edges);

for (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="adc2GIU2FYS25GHNJNFH37JDRZ37A"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> e: edges) {
    if (e.source == role)
        e.source = r;
    if (e.dest == role)
        e.dest = r;
    r.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcNGQAWOQUY5DMHLIPS27TSPSNRU mthW7RV3BXRS5DSNJBNS3W5NOO3LM" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(e);
    role.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcNGQAWOQUY5DMHLIPS27TSPSNRU mthW3GS3RMLM5DBBOUXYNLKGPUPDU" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(e);
}

role.dispose(); // RADIX-5378
//node.scene().removeItem(role);
r.setParentItem(node);
return r;</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
    </Methods>
  </AdsClassDefinition>
</AdsDefinition>