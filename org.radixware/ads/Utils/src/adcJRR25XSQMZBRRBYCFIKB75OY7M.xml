<?xml version="1.0" encoding="UTF-8"?>
<AdsDefinition xmlns="http://schemas.radixware.org/adsdef.xsd" xmlns:xsc="http://schemas.radixware.org/xscml.xsd" FormatVersion="0">
  <AdsClassDefinition Id="adcJRR25XSQMZBRRBYCFIKB75OY7M" Name="XmlWrapper" Type="3" Environment="common">
    <AccessRules>
      <Transparence Extendable="false"/>
    </AccessRules>
    <Headers>
      <Src Name="HeaderadcJRR25XSQMZBRRBYCFIKB75OY7M"/>
    </Headers>
    <Bodies>
      <Src Name="BodyadcJRR25XSQMZBRRBYCFIKB75OY7M"/>
    </Bodies>
    <MethodGroup Id="cmg4XNKFYIQL5CXDIXFTHZNUTGETQ" Name="Root">
      <Group Id="cmgGNQGMW7KSNGERDB6JGBKIKQ7XI" Name="Private" Members="mthDE5P25WDWNFHZPTYTRULYSZL6M mthSFPJQZ3LYVDI3HPLNYNKAW4FRA mthVX4C2EWT4ZDBBANA76DP4CWN6E mthYPDJBFL755DOTBJVIH3PHQX4UQ mth4TGD7FKMNZBIFEQCIXEPF5BZ54 mth3ADOSDQCLZFBHAAQYJ3SPNNKXU mthLISFTJ7RAFB7FIVPCGTPXS53RI mthMLMZU6Q355HGPLJEPKOATAA52Q mthKKJ2ZDM4EJHTTA2Z3CRUBQMZ54"/>
      <Group Id="cmgHRC6UQVVUJEP7AXS4S5QHHPGXQ" Name="Constructors" Members="mthDDJRCWEYOZFKRAZLCNXJYCXDNU mth7BU6CUOFWZA2BMLJYUAHYI25NU mthKPXHT5YQZBGENIP7LFNDVIS3QE"/>
      <Group Id="cmgYB764W4IEZEXBEDIQ52AW63LGM" Name="API">
        <Group Id="cmgZEXHFQHRCJF2NMIPWPC4L6UG5Q" Name="Getters" Members="mthZNBA52UAWJE7RILNQJYHUW4N64 mthSCN4KJWFCFBZZKQCDPCDFFS5VI mthNVIMG3SM4VAIFJ5ISXGPCFBENE mth7S4HRHY2YRGBDBHR4ACA2J2UXM mthVYH3KWYG5RB3RFNJ4XZ3ICB2PU mth2NXFJB5J75HVNHDS2SLWX5LTLE mth2WBQL2LEVBBT7KGSRMMKEYYBW4"/>
        <Group Id="cmgK2RICJCNJBEGZIVLCX3IH3LGEY" Name="Setters" Members="mthB3AX3WZQUBGINKQQB275NGBIGQ mth7PM3DF5KM5FC3CZZVEHFK54VWM mthACYEZQVJ5VFODIEM7ZJ5HZNZ4E mthS7E3FACQ2RAYNPEZHGASOUF2VU mthRESWE4BNMBHMRCQ5MN4B4XB5KU mthADQB5YTMCVFF7IIYNERNZTJTS4 mth36DKY4KX3ZDW3HZVN3SNLONLYI mthDNPS3IP5JBGVFCOCRFT4TDZYXY"/>
        <Group Id="cmgRYHQMCBVSJCHLGNR6MTSND6CCY" Name="Utils" Members="mthCPYTVP3QNZASPIKANQL7TSOGUQ mthJ3JYCYZ2JZDUTKNZDWBHG3ODHM mthOUR2QKI4KBGVXIIIYLVS3JOO3Q mthODL52MMCSFGTTNMBYPCURGPALU mthNWVNB6GVAJGMJF37LCYDQFU4EE mthSWZB5WBAEZG27L7HLEEZ26YPXE mthSMFWX76QE5BNZCHF3J5K7HO2OM"/>
      </Group>
    </MethodGroup>
    <PropertyGroup Id="cpgJYYHUQXKJ5FX5MUBRWCSLBNW5U" Name="Root">
      <Group Id="cpgODZXJIEBJRBR7J4W2NFS4DOQDY" Name="Props" Members="prdTPMRH4LIVZARPALKFMVHX3E6KQ prdOC2TUF4DE5EMJAXAGUEDY7CSEY prdL5HISJMXH5GYXEXB4XCWT7ZI6E prd6GGQ6GNCTFDALGYFTWH7B4DZZY"/>
    </PropertyGroup>
    <Properties>
      <Property Id="prdTPMRH4LIVZARPALKFMVHX3E6KQ" Name="xml" DescriptionId="mlsXGHIXCQCDZDH7L5K6GVVZ2D5CU" Nature="2" IsConst="false" IsOverride="false" isDescriptionInherited="false" WriteAccess="2">
        <AccessRules/>
        <Type TypeId="451"/>
      </Property>
      <Property Id="prdOC2TUF4DE5EMJAXAGUEDY7CSEY" Name="defaultNamespaceUri" DescriptionId="mls7MSC3GJMXFBCNMQBYYQVJ4EMMU" Nature="2" IsConst="false" IsOverride="false" isDescriptionInherited="false">
        <AccessRules Access="2" IsPublished="false"/>
        <Type TypeId="21"/>
      </Property>
      <Property Id="prdL5HISJMXH5GYXEXB4XCWT7ZI6E" Name="nsMap" DescriptionId="mlsVXAALVGXXJDM5CG4H4HAWP4WUY" Nature="2" IsConst="false" IsOverride="false" isDescriptionInherited="false">
        <AccessRules Access="2" IsPublished="false"/>
        <Type TypeId="400" extStr="java.util.Map">
          <xsc:GenericArguments>
            <xsc:Argument Alias="?">
              <xsc:Type TypeId="21"/>
            </xsc:Argument>
            <xsc:Argument Alias="?">
              <xsc:Type TypeId="21"/>
            </xsc:Argument>
          </xsc:GenericArguments>
        </Type>
      </Property>
      <Property Id="prd6GGQ6GNCTFDALGYFTWH7B4DZZY" Name="xmlBkp" Nature="2" IsConst="false" IsOverride="false" isDescriptionInherited="false">
        <AccessRules Access="2" IsPublished="false"/>
        <Type TypeId="451"/>
      </Property>
    </Properties>
    <Methods>
      <Method Id="mthDE5P25WDWNFHZPTYTRULYSZL6M" Name="buildQuery" Nature="0" IsOverride="false">
        <AccessRules Access="2" IsPublished="false"/>
        <Parameters>
          <Parameter Name="path" Id="mprWRMNQLMLYBGWXHRGS3WBKMZSJI">
            <Type TypeId="21"/>
          </Parameter>
        </Parameters>
        <ReturnType TypeId="21"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21">
                <xsc:Presentation>Str</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> defNS = (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdOC2TUF4DE5EMJAXAGUEDY7CSEY" Invoke="true">
                <xsc:Presentation>defaultNamespaceUri</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> != null &amp;&amp; !path.startsWith("./@")) ? 
    "declare default element namespace '" + </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdOC2TUF4DE5EMJAXAGUEDY7CSEY" Invoke="true">
                <xsc:Presentation>defaultNamespaceUri</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> + "'; " : 
    ""; 
</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21">
                <xsc:Presentation>Str</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> extNS = "";
if (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdL5HISJMXH5GYXEXB4XCWT7ZI6E" Invoke="true">
                <xsc:Presentation>nsMap</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> != null) {
    for (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21">
                <xsc:Presentation>Str</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> prefix : </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdL5HISJMXH5GYXEXB4XCWT7ZI6E" Invoke="true">
                <xsc:Presentation>nsMap</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.keySet()) {
        extNS = extNS + "declare namespace " + prefix + " = \"" + </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdL5HISJMXH5GYXEXB4XCWT7ZI6E" Invoke="true">
                <xsc:Presentation>nsMap</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.get(prefix) + "\"; ";
    }
}
return defNS + extNS + path;</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthSFPJQZ3LYVDI3HPLNYNKAW4FRA" Name="changeElementValue" Nature="0" IsOverride="false">
        <AccessRules Access="4" IsPublished="false"/>
        <Parameters>
          <Parameter Name="val" Id="mprEVDEVVU6L5GXJLBDFMUDSCMXOM">
            <Type TypeId="400" extStr="java.lang.Object"/>
          </Parameter>
        </Parameters>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="aic7AFXSUJOVNAWZO7BL24MEDAAG4">
                <xsc:Presentation>Types::XmlCursor</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> dst = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdTPMRH4LIVZARPALKFMVHX3E6KQ" Invoke="true">
                <xsc:Presentation>xml</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.newCursor();
try {
    switch (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdTPMRH4LIVZARPALKFMVHX3E6KQ" Invoke="true">
                <xsc:Presentation>xml</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.DomNode.NodeType) {
        case org.w3c.dom.Node.ATTRIBUTE_NODE:
            if (val instanceof org.apache.xmlbeans.XmlObject) {
                throw new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axcTNXCEKEORVFRFDUEZO3MB5REHQ mthZMCVM47GJJDGBORSJDKFXASDVU" Invoke="true">
                <xsc:Presentation>AppError</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>("Cannot insert xml to attribute");
            }
            dst.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aic7AFXSUJOVNAWZO7BL24MEDAAG4 mthXYUB56SMBVAHRKZW776FS5PW7A" Invoke="true">
                <xsc:Presentation>toParent</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();
            if (val != null) {
                dst.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aic7AFXSUJOVNAWZO7BL24MEDAAG4 mthROB4BRWDERCEJCC7YNXMZ63ECM" Invoke="true">
                <xsc:Presentation>setAttributeText</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcZEGS4Z5DYFG2FO2DOFDBUSHC6M mthCFWVBKS6IFH2DEDTNFBWBVXBXQ" Invoke="true">
                <xsc:Presentation>XmlQName</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdTPMRH4LIVZARPALKFMVHX3E6KQ" Invoke="true">
                <xsc:Presentation>xml</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.DomNode.NodeName), </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M mthLISFTJ7RAFB7FIVPCGTPXS53RI" Invoke="true">
                <xsc:Presentation>getStringValue</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(val));
            } else {
                dst.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aic7AFXSUJOVNAWZO7BL24MEDAAG4 mthXIQEOUK7EJC6DKUCJJAEQB4DKA" Invoke="true">
                <xsc:Presentation>removeAttribute</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcZEGS4Z5DYFG2FO2DOFDBUSHC6M mthCFWVBKS6IFH2DEDTNFBWBVXBXQ" Invoke="true">
                <xsc:Presentation>XmlQName</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdTPMRH4LIVZARPALKFMVHX3E6KQ" Invoke="true">
                <xsc:Presentation>xml</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.DomNode.NodeName));
            }
            break;
            
        case org.w3c.dom.Node.ELEMENT_NODE:
            dst.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aic7AFXSUJOVNAWZO7BL24MEDAAG4 mth3PTLOSDIA5DX3E2M6MCL2FJMMQ" Invoke="true">
                <xsc:Presentation>removeXmlContents</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();
            dst.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aic7AFXSUJOVNAWZO7BL24MEDAAG4 mthC55UMN55IBEVVEXMY54QOZ62N4" Invoke="true">
                <xsc:Presentation>toEndToken</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();
            if (val != null) {
                // костыльно, но парсить без причины тоже накладно
                if (val instanceof String &amp;&amp; ((</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21">
                <xsc:Presentation>Str</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>) val).indexOf("&lt;") >= 0) {
                    String oldVal = (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21">
                <xsc:Presentation>Str</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>) val;
                    String newVal = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M mth3ADOSDQCLZFBHAAQYJ3SPNNKXU" Invoke="true">
                <xsc:Presentation>fixNameSpaces</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(oldVal);
                    try {                        
                        </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="451">
                <xsc:Presentation>Xml</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> parsedXml = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="451">
                <xsc:Presentation>Xml</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.Factory.parse(newVal);
                        val = parsedXml.selectPath("/wrapper_" + </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M">
                <xsc:Presentation>XmlUtils</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcELH54EKVCJAATNTLFHHCSVHPZU mthCX6FRHR4VNG37LJWH7N6THCMMA" Invoke="true">
                <xsc:Presentation>toString</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>())[0];
                    } catch (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="axcCOEVNNRGS5DITM72ZNKZFX6EIU">
                <xsc:Presentation>Exceptions::XmlException</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> e) {
                        org.radixware.kernel.common.trace.IRadixTrace.Lookup.findInstance(this.Class).put(
                            </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4 aci5WAUJTYZVPORDJHCAANE2UAFXA" Invoke="true">
                <xsc:Presentation>Arte::EventSeverity:Error</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>,
                            e.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axc6XYNZ22YSZEKDKWH2SWRGBTC6I mthAIARN4PFVBD6HJZSJNZIXYNYAY" Invoke="true">
                <xsc:Presentation>getMessage</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(),
                            org.radixware.kernel.common.enums.EEventSource.getForValue("App")
                        );
                    }
                }
                if (val instanceof org.apache.xmlbeans.XmlObject) {
                    </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="aic7AFXSUJOVNAWZO7BL24MEDAAG4">
                <xsc:Presentation>Types::XmlCursor</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> src = ((</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="451">
                <xsc:Presentation>Xml</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>) val).newCursor();
                    try {
                        src.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aic7AFXSUJOVNAWZO7BL24MEDAAG4 mthCP2KS3FOMBBZNH5QIAQKFPKWUU" Invoke="true">
                <xsc:Presentation>toFirstContentToken</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();
                        src.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aic7AFXSUJOVNAWZO7BL24MEDAAG4 mth3LKRR6HORZFJLAALZUW7LQMXPM" Invoke="true">
                <xsc:Presentation>copyXml</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(dst);
                        java.util.Map&lt;</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21">
                <xsc:Presentation>Str</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>, </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21">
                <xsc:Presentation>Str</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>> nsMap = new java.util.HashMap&lt;</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21">
                <xsc:Presentation>Str</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>, </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21">
                <xsc:Presentation>Str</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>>();
                        src.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aic7AFXSUJOVNAWZO7BL24MEDAAG4 mthBRWYV25DLRFSNJGMKZKCZIAXTY" Invoke="true">
                <xsc:Presentation>getAllNamespaces</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(nsMap);
                        for (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21">
                <xsc:Presentation>Str</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> prefix : nsMap.keySet()) {
                            if (!</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdL5HISJMXH5GYXEXB4XCWT7ZI6E" Invoke="true">
                <xsc:Presentation>nsMap</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.containsKey(prefix)) {
                                </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdL5HISJMXH5GYXEXB4XCWT7ZI6E" Invoke="true">
                <xsc:Presentation>nsMap</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.put(prefix, nsMap.get(prefix));
                            }
                        }
                    } finally {
                        src.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aic7AFXSUJOVNAWZO7BL24MEDAAG4 mthPO26DEWFPREJFCXVPQBU4MBSCA" Invoke="true">
                <xsc:Presentation>dispose</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();
                    }
                } else {
                    dst.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aic7AFXSUJOVNAWZO7BL24MEDAAG4 mthWKD36DEASVGAZDSAYBMLEUD3VM" Invoke="true">
                <xsc:Presentation>insertChars</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M mthLISFTJ7RAFB7FIVPCGTPXS53RI" Invoke="true">
                <xsc:Presentation>getStringValue</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(val));
                }
            }
            break;
            
        default:
            throw new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axcTNXCEKEORVFRFDUEZO3MB5REHQ mthZMCVM47GJJDGBORSJDKFXASDVU" Invoke="true">
                <xsc:Presentation>AppError</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>("Unsupported node type of '"+</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdTPMRH4LIVZARPALKFMVHX3E6KQ" Invoke="true">
                <xsc:Presentation>xml</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.DomNode.NodeName+"'");
    }
} finally {
    dst.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aic7AFXSUJOVNAWZO7BL24MEDAAG4 mthPO26DEWFPREJFCXVPQBU4MBSCA" Invoke="true">
                <xsc:Presentation>dispose</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();
}</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthVX4C2EWT4ZDBBANA76DP4CWN6E" Name="createAttribute" Nature="0" IsOverride="false">
        <AccessRules Access="2" IsPublished="false"/>
        <Parameters>
          <Parameter Name="name" Id="mpr3XNALTW5XZBP7PUYCAKZVLTNHI">
            <Type TypeId="21"/>
          </Parameter>
        </Parameters>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="aic7AFXSUJOVNAWZO7BL24MEDAAG4">
                <xsc:Presentation>Types::XmlCursor</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> cursor = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdTPMRH4LIVZARPALKFMVHX3E6KQ" Invoke="true">
                <xsc:Presentation>xml</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.newCursor();
try {
    cursor.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aic7AFXSUJOVNAWZO7BL24MEDAAG4 mthD5TKORSWJZDZZP525MKMSDLEAU" Invoke="true">
                <xsc:Presentation>toNextToken</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();
    </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="adcZEGS4Z5DYFG2FO2DOFDBUSHC6M">
                <xsc:Presentation>Types::XmlQName</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> qname = new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcZEGS4Z5DYFG2FO2DOFDBUSHC6M mth266DIVQS3RFINCTCBQ3DQ3LN4M" Invoke="true">
                <xsc:Presentation>XmlQName</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(name.substring(1));
    cursor.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aic7AFXSUJOVNAWZO7BL24MEDAAG4 mthQCISFRRXU5FDDK4D4HULWDBX3A" Invoke="true">
                <xsc:Presentation>insertAttribute</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(qname);
} finally {
    cursor.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aic7AFXSUJOVNAWZO7BL24MEDAAG4 mthPO26DEWFPREJFCXVPQBU4MBSCA" Invoke="true">
                <xsc:Presentation>dispose</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();
}</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthYPDJBFL755DOTBJVIH3PHQX4UQ" Name="createElement" Nature="0" IsOverride="false">
        <AccessRules Access="2" IsPublished="false"/>
        <Parameters>
          <Parameter Name="name" Id="mprDWBKVIEHWFCO5OLMKKCXASMK4A">
            <Type TypeId="21"/>
          </Parameter>
        </Parameters>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>final </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21">
                <xsc:Presentation>Str</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>[] nameParts = name.split(":");
</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="adcZEGS4Z5DYFG2FO2DOFDBUSHC6M">
                <xsc:Presentation>Types::XmlQName</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> qname = null;
if (nameParts.length == 1 &amp;&amp; </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdOC2TUF4DE5EMJAXAGUEDY7CSEY" Invoke="true">
                <xsc:Presentation>defaultNamespaceUri</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> != null) {
    qname = new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcZEGS4Z5DYFG2FO2DOFDBUSHC6M mth266DIVQS3RFINCTCBQ3DQ3LN4M" Invoke="true">
                <xsc:Presentation>XmlQName</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdOC2TUF4DE5EMJAXAGUEDY7CSEY" Invoke="true">
                <xsc:Presentation>defaultNamespaceUri</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>, nameParts[0]);
} else if (nameParts.length == 1) {
    qname = new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcZEGS4Z5DYFG2FO2DOFDBUSHC6M mth266DIVQS3RFINCTCBQ3DQ3LN4M" Invoke="true">
                <xsc:Presentation>XmlQName</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(nameParts[0]);
} else if (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdL5HISJMXH5GYXEXB4XCWT7ZI6E" Invoke="true">
                <xsc:Presentation>nsMap</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> == null) {
    qname = new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcZEGS4Z5DYFG2FO2DOFDBUSHC6M mthCFWVBKS6IFH2DEDTNFBWBVXBXQ" Invoke="true">
                <xsc:Presentation>XmlQName</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(nameParts[1]);
} else {
    qname = new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcZEGS4Z5DYFG2FO2DOFDBUSHC6M mthQ66EGB3R6NCE7NTLJHD7KEPGGE" Invoke="true">
                <xsc:Presentation>XmlQName</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdL5HISJMXH5GYXEXB4XCWT7ZI6E" Invoke="true">
                <xsc:Presentation>nsMap</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.get(nameParts[0]), nameParts[1], nameParts[0]);
}

</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="aic7AFXSUJOVNAWZO7BL24MEDAAG4">
                <xsc:Presentation>Types::XmlCursor</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> cursor = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdTPMRH4LIVZARPALKFMVHX3E6KQ" Invoke="true">
                <xsc:Presentation>xml</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.newCursor();
try {
    cursor.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aic7AFXSUJOVNAWZO7BL24MEDAAG4 mthC55UMN55IBEVVEXMY54QOZ62N4" Invoke="true">
                <xsc:Presentation>toEndToken</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();
    cursor.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aic7AFXSUJOVNAWZO7BL24MEDAAG4 mthW7WPRBXBJ5CSLLBA62YSBWY6WE" Invoke="true">
                <xsc:Presentation>beginElement</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(qname);
} finally {
    cursor.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aic7AFXSUJOVNAWZO7BL24MEDAAG4 mthPO26DEWFPREJFCXVPQBU4MBSCA" Invoke="true">
                <xsc:Presentation>dispose</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();
}</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mth4TGD7FKMNZBIFEQCIXEPF5BZ54" Name="modifyTarget" Nature="0" IsOverride="false">
        <AccessRules Access="2" IsPublished="false"/>
        <Parameters>
          <Parameter Name="path" Id="mprGM4O4BTWZ5GBFOASVJU33U4MUI">
            <Type TypeId="21"/>
          </Parameter>
          <Parameter Name="val" Id="mpr2DI3KJPOMRBHDIKYIZZ65X3WB4">
            <Type TypeId="400" extStr="java.lang.Object"/>
          </Parameter>
          <Parameter Name="method" Id="mprFIZR7CU62NDXDDYS6ORFV4AJ3Y">
            <Type TypeId="400" extStr="java.lang.reflect.Method"/>
          </Parameter>
        </Parameters>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>if (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdTPMRH4LIVZARPALKFMVHX3E6KQ" Invoke="true">
                <xsc:Presentation>xml</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> == null) {
    return;
}
// Простой вариант, не учитывающий условия
//java.util.List&lt;</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21">
                <xsc:Presentation>Str</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>> pathList = new java.util.ArrayList&lt;</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21">
                <xsc:Presentation>Str</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>>(java.util.Arrays.asList(path.split("/")));
//pathList.removeAll(java.util.Arrays.asList("", null));

// Сложный вариант с условиями
java.util.List&lt;</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21">
                <xsc:Presentation>Str</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>> pathList = new java.util.ArrayList&lt;</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21">
                <xsc:Presentation>Str</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>>();

/**
You can check following expression at http://myregexp.com/
Expression: 
    V1: \w+:*\w+\[[\s\d\w:\/\(\)='"\>\&lt;@]+\]|@*[\w:]+(?![\w\(]+) 
    V2: [\/]{1,2}\w+:*\w+\[[\s\d\w:\/\(\)='"\>\&lt;@]+\]|[\/]{1,2}@{0,1}[\w#\.\-_!:]+(?![\w\(]+)
Text for check:
    /acq:Terminal/acq:CustomFields/acq:Item[acq:Name/text() = "UCAFCAVVSupport"]/acq:TextValue
    /acq:Terminal/acq:CustomFields/acq:Item[1]/acq:TextValue
    /acq:Terminal/acq:CustomFields/acq:Item[acq:Name/text() = "1"]/acq:TextValue
    /foo:singer/@id
    /actor[1]/text()
    /actor[last()]
    /actor[position() &lt; 3]
    /actor[@id]
    /actor[@id='3']
    /actor[@id&lt;=3]
*/
java.util.regex.Pattern partPattern = java.util.regex.Pattern.compile("[\\/]{1,2}\\w+:*\\w+\\[[\\s\\d\\w:\\/\\(\\)='\"\\>\\&lt;@]+\\]|[\\/]{1,2}@{0,1}[\\w#\\.\\-_!:]+(?![\\w\\(]+)");
java.util.regex.Matcher partMatcher = partPattern.matcher(path);
while (partMatcher.find()) {
    pathList.add(path.substring(partMatcher.start(), partMatcher.end()));    
}

try {
    if (pathList.size() > 0) {
        </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="451">
                <xsc:Presentation>Xml</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> child = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M mthNVIMG3SM4VAIFJ5ISXGPCFBENE" Invoke="true">
                <xsc:Presentation>getElement</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>("."+pathList.get(0), false);
        if (child != null) {
            pathList.remove(0);
            </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="451">
                <xsc:Presentation>Xml</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> prevXml = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdTPMRH4LIVZARPALKFMVHX3E6KQ" Invoke="true">
                <xsc:Presentation>xml</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>;
            </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21">
                <xsc:Presentation>Str</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> nextPath = org.apache.commons.lang.StringUtils.join(pathList, "");
            </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdTPMRH4LIVZARPALKFMVHX3E6KQ" Invoke="true">
                <xsc:Presentation>xml</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> = child;
            </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M mth4TGD7FKMNZBIFEQCIXEPF5BZ54" Invoke="true">
                <xsc:Presentation>modifyTarget</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(nextPath, val, method);
            </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdTPMRH4LIVZARPALKFMVHX3E6KQ" Invoke="true">
                <xsc:Presentation>xml</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> = prevXml;
        } else {
            // Try to create element (in case there is no condition)
            </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21">
                <xsc:Presentation>Str</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> name = pathList.get(0).replaceFirst("^\\/", "");
            if (name.indexOf("[") &lt; 0) {
                if (name.startsWith("@")) {
                    </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M mthVX4C2EWT4ZDBBANA76DP4CWN6E" Invoke="true">
                <xsc:Presentation>createAttribute</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(name);
                } else {
                    </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M mthYPDJBFL755DOTBJVIH3PHQX4UQ" Invoke="true">
                <xsc:Presentation>createElement</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(name);
                }
            } else {
                throw new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axcTNXCEKEORVFRFDUEZO3MB5REHQ mthZMCVM47GJJDGBORSJDKFXASDVU" Invoke="true">
                <xsc:Presentation>AppError</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>("Cannot create "+(pathList.get(0).startsWith("@") ? "attribute" : "element")+" '" + pathList.get(0) + "' using path with conditions");
            }
            </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M mth4TGD7FKMNZBIFEQCIXEPF5BZ54" Invoke="true">
                <xsc:Presentation>modifyTarget</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(path, val, method);
        }
    } else {
        // Modify target
        try {
            method.setAccessible(true);
            method.invoke(this, new java.lang.Object[]{val});
        } catch (java.lang.IllegalAccessException e) {
            org.radixware.kernel.common.trace.IRadixTrace.Lookup.findInstance(this.Class).put(
                </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4 aci5WAUJTYZVPORDJHCAANE2UAFXA" Invoke="true">
                <xsc:Presentation>Arte::EventSeverity:Error</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>,
                "IllegalAccessException: "+e.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axc6XYNZ22YSZEKDKWH2SWRGBTC6I mthAIARN4PFVBD6HJZSJNZIXYNYAY" Invoke="true">
                <xsc:Presentation>getMessage</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>()+"\n"+</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="adcYNRZI7YTNVBRBF5VJBIO6NWV4U">
                <xsc:Presentation>ExceptionTextFormatter</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.exceptionStackToString(e),
                org.radixware.kernel.common.enums.EEventSource.getForValue("App")
            );
        } catch (java.lang.reflect.InvocationTargetException e) {
            org.radixware.kernel.common.trace.IRadixTrace.Lookup.findInstance(this.Class).put(
                </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4 aci5WAUJTYZVPORDJHCAANE2UAFXA" Invoke="true">
                <xsc:Presentation>Arte::EventSeverity:Error</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>,
                "InvocationTargetException: "+e.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axc6XYNZ22YSZEKDKWH2SWRGBTC6I mthAIARN4PFVBD6HJZSJNZIXYNYAY" Invoke="true">
                <xsc:Presentation>getMessage</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>()+"\n"+</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="adcYNRZI7YTNVBRBF5VJBIO6NWV4U">
                <xsc:Presentation>ExceptionTextFormatter</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.exceptionStackToString(e),
                org.radixware.kernel.common.enums.EEventSource.getForValue("App")
            );
        }
    }
} catch (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="axcTNXCEKEORVFRFDUEZO3MB5REHQ">
                <xsc:Presentation>Exceptions::AppError</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> e) {
    if (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prd6GGQ6GNCTFDALGYFTWH7B4DZZY" Invoke="true">
                <xsc:Presentation>xmlBkp</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> != null) {
        </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdTPMRH4LIVZARPALKFMVHX3E6KQ" Invoke="true">
                <xsc:Presentation>xml</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prd6GGQ6GNCTFDALGYFTWH7B4DZZY" Invoke="true">
                <xsc:Presentation>xmlBkp</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.copy();
    }
    throw(e);
}</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mth3ADOSDQCLZFBHAAQYJ3SPNNKXU" Name="fixNameSpaces" Nature="0" IsOverride="false">
        <AccessRules Access="2" IsPublished="false"/>
        <Parameters>
          <Parameter Name="val" Id="mpr5BEWTHMWVBAY7PRWRPEGTWSW64">
            <Type TypeId="21"/>
          </Parameter>
        </Parameters>
        <ReturnType TypeId="21"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>Str newVal = "";
java.util.regex.Pattern prefixPattern = java.util.regex.Pattern.compile("&lt;(\\w+):");
java.util.regex.Matcher prefixMatcher = prefixPattern.matcher(val);

int lastTagEnd = 0;
int tagStart = 0;
int tagEnd = 0;
String inTag = "";
while (prefixMatcher.find()) {
    String ns = val.substring(prefixMatcher.start()+1, prefixMatcher.end()-1);
    if (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdL5HISJMXH5GYXEXB4XCWT7ZI6E" Invoke="true">
                <xsc:Presentation>nsMap</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.containsKey(ns)) {
        tagStart = val.lastIndexOf("&lt;", prefixMatcher.start()+1);
        tagEnd =  val.indexOf(">", prefixMatcher.end())+1;
        inTag = val.substring(tagStart, tagEnd);
        
        java.util.regex.Pattern nsDefPattern = java.util.regex.Pattern.compile("(\\w+:*"+ns+"[\\s=]+\"[^\\s\"]+\")");
        java.util.regex.Matcher nsDefMatcher = nsDefPattern.matcher(inTag);
        if (!nsDefMatcher.find()) {
            inTag = inTag.replaceFirst("(>)", " xmlns:"+ns+"=\""+</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdL5HISJMXH5GYXEXB4XCWT7ZI6E" Invoke="true">
                <xsc:Presentation>nsMap</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.get(ns)+"\"$1");
            newVal = newVal + val.substring(lastTagEnd, tagStart)+inTag;
            lastTagEnd = tagEnd;
        }
    }
}
newVal = newVal + val.substring(lastTagEnd, val.length());
org.radixware.kernel.common.trace.IRadixTrace.Lookup.findInstance(this.Class).put(
    </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4 aci5SAUJTYZVPORDJHCAANE2UAFXA" Invoke="true">
                <xsc:Presentation>Arte::EventSeverity:Debug</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>,
    "fixed string: \n"+newVal,
    org.radixware.kernel.common.enums.EEventSource.getForValue("App")
);
return newVal = "&lt;wrapper_" + </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M">
                <xsc:Presentation>XmlUtils</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcELH54EKVCJAATNTLFHHCSVHPZU mthCX6FRHR4VNG37LJWH7N6THCMMA" Invoke="true">
                <xsc:Presentation>toString</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>() + ">"+newVal+"&lt;/wrapper_" + </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M">
                <xsc:Presentation>XmlUtils</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcELH54EKVCJAATNTLFHHCSVHPZU mthCX6FRHR4VNG37LJWH7N6THCMMA" Invoke="true">
                <xsc:Presentation>toString</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>() + ">";</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthLISFTJ7RAFB7FIVPCGTPXS53RI" Name="getStringValue" Nature="0" IsOverride="false">
        <AccessRules Access="2" IsPublished="false"/>
        <Parameters>
          <Parameter Name="val" Id="mpr6ATWX47LYBB6PO5DLOPXMG5NPU">
            <Type TypeId="400" extStr="java.lang.Object"/>
          </Parameter>
        </Parameters>
        <ReturnType TypeId="21"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>if (val instanceof String) {
    return (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21">
                <xsc:Presentation>Str</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>) val;
} else if (val instanceof Long) {
    return ((Long) val).longValue()+"";
} else if (val instanceof java.math.BigDecimal) {
    return ((java.math.BigDecimal) val).doubleValue()+"";
} else if (val instanceof Boolean) {
    return ((</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="1">
                <xsc:Presentation>Bool</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>) val).booleanValue() ? "true" : "false";
} else {
    throw new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axcTNXCEKEORVFRFDUEZO3MB5REHQ mthZMCVM47GJJDGBORSJDKFXASDVU" Invoke="true">
                <xsc:Presentation>AppError</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>("Unsupported value type");
}</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthMLMZU6Q355HGPLJEPKOATAA52Q" Name="insertElement" Nature="0" IsOverride="false">
        <AccessRules Access="4" IsPublished="false"/>
        <Parameters>
          <Parameter Name="val" Id="mprRTUIZICAGNEFVBKGPEPLO3UUXI">
            <Type TypeId="400" extStr="java.lang.Object"/>
          </Parameter>
        </Parameters>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="aic7AFXSUJOVNAWZO7BL24MEDAAG4">
                <xsc:Presentation>Types::XmlCursor</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> dst = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdTPMRH4LIVZARPALKFMVHX3E6KQ" Invoke="true">
                <xsc:Presentation>xml</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.newCursor();

if (val instanceof String &amp;&amp; ((</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21">
                <xsc:Presentation>Str</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>) val).indexOf("&lt;") >= 0) {
    String oldVal = (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21">
                <xsc:Presentation>Str</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>) val;
    String newVal = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M mth3ADOSDQCLZFBHAAQYJ3SPNNKXU" Invoke="true">
                <xsc:Presentation>fixNameSpaces</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(oldVal);
    try {                        
        </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="451">
                <xsc:Presentation>Xml</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> parsedXml = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="451">
                <xsc:Presentation>Xml</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.Factory.parse(newVal);
        val = parsedXml.selectPath("/wrapper_" + </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M">
                <xsc:Presentation>XmlUtils</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcELH54EKVCJAATNTLFHHCSVHPZU mthCX6FRHR4VNG37LJWH7N6THCMMA" Invoke="true">
                <xsc:Presentation>toString</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>())[0];
    } catch (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="axcCOEVNNRGS5DITM72ZNKZFX6EIU">
                <xsc:Presentation>Exceptions::XmlException</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> e) {
        org.radixware.kernel.common.trace.IRadixTrace.Lookup.findInstance(this.Class).put(
            </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4 aci5WAUJTYZVPORDJHCAANE2UAFXA" Invoke="true">
                <xsc:Presentation>Arte::EventSeverity:Error</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>,
            e.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axc6XYNZ22YSZEKDKWH2SWRGBTC6I mthAIARN4PFVBD6HJZSJNZIXYNYAY" Invoke="true">
                <xsc:Presentation>getMessage</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(),
            org.radixware.kernel.common.enums.EEventSource.getForValue("App")
        );
    }
}

if (!(val instanceof org.apache.xmlbeans.XmlObject)) {
    return;
}
</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="aic7AFXSUJOVNAWZO7BL24MEDAAG4">
                <xsc:Presentation>Types::XmlCursor</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> src = ((</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="451">
                <xsc:Presentation>Xml</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>) val).newCursor();
try {
    src.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aic7AFXSUJOVNAWZO7BL24MEDAAG4 mthCP2KS3FOMBBZNH5QIAQKFPKWUU" Invoke="true">
                <xsc:Presentation>toFirstContentToken</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();
    dst.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aic7AFXSUJOVNAWZO7BL24MEDAAG4 mthC55UMN55IBEVVEXMY54QOZ62N4" Invoke="true">
                <xsc:Presentation>toEndToken</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();
    src.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aic7AFXSUJOVNAWZO7BL24MEDAAG4 mth3LKRR6HORZFJLAALZUW7LQMXPM" Invoke="true">
                <xsc:Presentation>copyXml</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(dst);
    while (src.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aic7AFXSUJOVNAWZO7BL24MEDAAG4 mth242SXZIEMZHP5NHTZ4TQ3NCN4U" Invoke="true">
                <xsc:Presentation>toNextSibling</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>()) {
        src.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aic7AFXSUJOVNAWZO7BL24MEDAAG4 mth3LKRR6HORZFJLAALZUW7LQMXPM" Invoke="true">
                <xsc:Presentation>copyXml</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(dst);
    }
    java.util.Map&lt;</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21">
                <xsc:Presentation>Str</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>, </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21">
                <xsc:Presentation>Str</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>> nsMap = new java.util.HashMap&lt;</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21">
                <xsc:Presentation>Str</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>, </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21">
                <xsc:Presentation>Str</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>>();
    src.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aic7AFXSUJOVNAWZO7BL24MEDAAG4 mthS4P3ATVUNBCXRADCFNEV3OJZWI" Invoke="true">
                <xsc:Presentation>toStartDoc</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();
    src.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aic7AFXSUJOVNAWZO7BL24MEDAAG4 mthCP2KS3FOMBBZNH5QIAQKFPKWUU" Invoke="true">
                <xsc:Presentation>toFirstContentToken</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();
    src.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aic7AFXSUJOVNAWZO7BL24MEDAAG4 mthBRWYV25DLRFSNJGMKZKCZIAXTY" Invoke="true">
                <xsc:Presentation>getAllNamespaces</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(nsMap);
    for (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21">
                <xsc:Presentation>Str</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> prefix : nsMap.keySet()) {
        if (!</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdL5HISJMXH5GYXEXB4XCWT7ZI6E" Invoke="true">
                <xsc:Presentation>nsMap</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.containsKey(prefix)) {
            </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdL5HISJMXH5GYXEXB4XCWT7ZI6E" Invoke="true">
                <xsc:Presentation>nsMap</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.put(prefix, nsMap.get(prefix));
        }
    }
} finally {
    src.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aic7AFXSUJOVNAWZO7BL24MEDAAG4 mthPO26DEWFPREJFCXVPQBU4MBSCA" Invoke="true">
                <xsc:Presentation>dispose</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();
    dst.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aic7AFXSUJOVNAWZO7BL24MEDAAG4 mthPO26DEWFPREJFCXVPQBU4MBSCA" Invoke="true">
                <xsc:Presentation>dispose</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();
}</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthKKJ2ZDM4EJHTTA2Z3CRUBQMZ54" Name="setValue" Nature="0" IsOverride="false">
        <AccessRules Access="2" IsPublished="false"/>
        <Parameters>
          <Parameter Name="path" Id="mprXIUBP3J5UNBM5N3MS3X64LRVHE">
            <Type TypeId="21"/>
          </Parameter>
          <Parameter Name="val" Id="mprHF6QR3TJZ5BX3PQVTNFANFTG7A">
            <Type TypeId="400" extStr="java.lang.Object"/>
          </Parameter>
        </Parameters>
        <ReturnType TypeId="411" Path="adcJRR25XSQMZBRRBYCFIKB75OY7M"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>if (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdTPMRH4LIVZARPALKFMVHX3E6KQ" Invoke="true">
                <xsc:Presentation>xml</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> == null) {
    return this;
}
</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prd6GGQ6GNCTFDALGYFTWH7B4DZZY" Invoke="true">
                <xsc:Presentation>xmlBkp</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdTPMRH4LIVZARPALKFMVHX3E6KQ" Invoke="true">
                <xsc:Presentation>xml</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.copy();
try {
    java.lang.reflect.Method method = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="adcJRR25XSQMZBRRBYCFIKB75OY7M">
                <xsc:Presentation>XmlWrapper</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.class.getMethod(</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M mthSFPJQZ3LYVDI3HPLNYNKAW4FRA">
                <xsc:Presentation>XmlWrapper:changeElementValue</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcELH54EKVCJAATNTLFHHCSVHPZU mthCX6FRHR4VNG37LJWH7N6THCMMA" Invoke="true">
                <xsc:Presentation>toString</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(), new Class[]{java.lang.Object.class});
    </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M mth4TGD7FKMNZBIFEQCIXEPF5BZ54" Invoke="true">
                <xsc:Presentation>modifyTarget</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(path, val, method);
} catch (java.lang.NoSuchMethodException e) {
    org.radixware.kernel.common.trace.IRadixTrace.Lookup.findInstance(this.Class).put(
        </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4 aci5WAUJTYZVPORDJHCAANE2UAFXA" Invoke="true">
                <xsc:Presentation>Arte::EventSeverity:Error</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>,
        "NoSuchMethodException: "+e.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axc6XYNZ22YSZEKDKWH2SWRGBTC6I mthAIARN4PFVBD6HJZSJNZIXYNYAY" Invoke="true">
                <xsc:Presentation>getMessage</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(),
        org.radixware.kernel.common.enums.EEventSource.getForValue("App")
    );
}
return this;</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthDDJRCWEYOZFKRAZLCNXJYCXDNU" Name="XmlWrapper" DescriptionId="mlsRXAIPGOCOBG23EXNIAG6CMFEBU" Nature="0" IsConstructor="true" IsOverride="false">
        <AccessRules/>
        <Parameters>
          <Parameter Name="xml" DescriptionId="mls2DGXEUOFURBI5O663TQQ4WZ4XI" Id="mprQJEM3AQ43REMLONYJYQADJYI4Y_0">
            <Type TypeId="451"/>
          </Parameter>
          <Parameter Name="defaultNamespaceUri" DescriptionId="mlsYTBGD6JGYZHPTO5O6VOQFHXIEY" Id="mprQJEM3AQ43REMLONYJYQADJYI4Y_1">
            <Type TypeId="21"/>
          </Parameter>
        </Parameters>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>this(xml, defaultNamespaceUri, null);</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mth7BU6CUOFWZA2BMLJYUAHYI25NU" Name="XmlWrapper" DescriptionId="mlsVF7QBUDKFRAMBMNMP5EHZYKH6Q" Nature="0" IsConstructor="true" IsOverride="false">
        <AccessRules/>
        <Parameters>
          <Parameter Name="xml" DescriptionId="mls26RFZ5NT65D2DJP2TIHZQW2QVE" Id="mprRWHHUV746BGCZLZ5IX5A3NLVEY_0">
            <Type TypeId="451"/>
          </Parameter>
          <Parameter Name="defaultNamespaceUri" DescriptionId="mls5TW5UUBKSFHHPG7S2P4NUAITAI" Id="mprRWHHUV746BGCZLZ5IX5A3NLVEY_1">
            <Type TypeId="21"/>
          </Parameter>
          <Parameter Name="nsMap" DescriptionId="mls3D3CZCQEHZBHXLNLEYBQKEIJRE" Id="mprRWHHUV746BGCZLZ5IX5A3NLVEY_2">
            <Type TypeId="400" extStr="java.util.Map">
              <xsc:GenericArguments>
                <xsc:Argument Alias="?">
                  <xsc:Type TypeId="21"/>
                </xsc:Argument>
                <xsc:Argument Alias="?">
                  <xsc:Type TypeId="21"/>
                </xsc:Argument>
              </xsc:GenericArguments>
            </Type>
          </Parameter>
        </Parameters>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>if (xml == null) {
    </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdTPMRH4LIVZARPALKFMVHX3E6KQ" Invoke="true">
                <xsc:Presentation>xml</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="451">
                <xsc:Presentation>Xml</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.Factory.newInstance();
    </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdL5HISJMXH5GYXEXB4XCWT7ZI6E" Invoke="true">
                <xsc:Presentation>nsMap</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> = new java.util.HashMap&lt;</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21">
                <xsc:Presentation>Str</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>, </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21">
                <xsc:Presentation>Str</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>>();
    </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdOC2TUF4DE5EMJAXAGUEDY7CSEY" Invoke="true">
                <xsc:Presentation>defaultNamespaceUri</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> = defaultNamespaceUri;
} else {
    </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdTPMRH4LIVZARPALKFMVHX3E6KQ" Invoke="true">
                <xsc:Presentation>xml</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> = xml;
    </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="aic7AFXSUJOVNAWZO7BL24MEDAAG4">
                <xsc:Presentation>Types::XmlCursor</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> cursor = null;
    try {
        cursor = xml.newCursor();
        cursor.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aic7AFXSUJOVNAWZO7BL24MEDAAG4 mthCP2KS3FOMBBZNH5QIAQKFPKWUU" Invoke="true">
                <xsc:Presentation>toFirstContentToken</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();
        if (nsMap == null) {
            java.util.Map&lt;</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21">
                <xsc:Presentation>Str</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>, </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21">
                <xsc:Presentation>Str</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>> knownNS = new java.util.HashMap&lt;</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21">
                <xsc:Presentation>Str</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>, </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21">
                <xsc:Presentation>Str</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>>();
            cursor.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aic7AFXSUJOVNAWZO7BL24MEDAAG4 mthBRWYV25DLRFSNJGMKZKCZIAXTY" Invoke="true">
                <xsc:Presentation>getAllNamespaces</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(knownNS);
            </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdL5HISJMXH5GYXEXB4XCWT7ZI6E" Invoke="true">
                <xsc:Presentation>nsMap</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> = knownNS;
        } else {
            </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdL5HISJMXH5GYXEXB4XCWT7ZI6E" Invoke="true">
                <xsc:Presentation>nsMap</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> = nsMap;
        }
        if (defaultNamespaceUri == null) {
            cursor.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aic7AFXSUJOVNAWZO7BL24MEDAAG4 mthS4P3ATVUNBCXRADCFNEV3OJZWI" Invoke="true">
                <xsc:Presentation>toStartDoc</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();
            if (cursor.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aic7AFXSUJOVNAWZO7BL24MEDAAG4 mthNI6Z5GKITBAJZAUXXF5MNGZB3M" Invoke="true">
                <xsc:Presentation>toFirstChild</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>()) {
                </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdOC2TUF4DE5EMJAXAGUEDY7CSEY" Invoke="true">
                <xsc:Presentation>defaultNamespaceUri</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> = cursor.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aic7AFXSUJOVNAWZO7BL24MEDAAG4 mthPCYDZ5PXFZDHVL4MZZHFFVU5Y4" Invoke="true">
                <xsc:Presentation>namespaceForPrefix</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>("");
            }
        } else {
            </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdOC2TUF4DE5EMJAXAGUEDY7CSEY" Invoke="true">
                <xsc:Presentation>defaultNamespaceUri</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> = defaultNamespaceUri;
        }
    } finally {
        if (cursor != null) {
            cursor.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aic7AFXSUJOVNAWZO7BL24MEDAAG4 mthPO26DEWFPREJFCXVPQBU4MBSCA" Invoke="true">
                <xsc:Presentation>dispose</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();
        }
    }
}</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthZNBA52UAWJE7RILNQJYHUW4N64" Name="getBool" DescriptionId="mlsIEGYGRVSCRASTKD7EWRQGM5TNI" Nature="0" IsOverride="false">
        <AccessRules/>
        <Parameters>
          <Parameter Name="path" DescriptionId="mlsVXE55A4NKBCFBGKNUDTPSENKKA" Id="mprERBFXGVMMNAJJICY2JFUBRTOEE_0">
            <Type TypeId="21"/>
          </Parameter>
          <Parameter Name="mandatory" DescriptionId="mlsW7XKAPD5JBDXVOGLF2GT7SG6YI" Id="mprERBFXGVMMNAJJICY2JFUBRTOEE_1">
            <Type TypeId="401" extStr="boolean"/>
          </Parameter>
        </Parameters>
        <ReturnType TypeId="1" DescriptionId="mlsCXL6FYRY6BEGLGN5TST4K2OXUI"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>Str value = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M mth2WBQL2LEVBBT7KGSRMMKEYYBW4" Invoke="true">
                <xsc:Presentation>getStr</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(path, mandatory);
if (value != null) {
    return value == "1" || value == "true";
} else {
    return null;
}</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthSCN4KJWFCFBZZKQCDPCDFFS5VI" Name="getDateTime" Nature="0" IsOverride="false">
        <AccessRules/>
        <Parameters>
          <Parameter Name="path" Id="mpr7RZBHHTD3ZHCLBHSHETSR6D2M4">
            <Type TypeId="21"/>
          </Parameter>
          <Parameter Name="mandatory" Id="mprEVNIMQHPJRAJBF44P2JI4RUJA4">
            <Type TypeId="401" extStr="boolean"/>
          </Parameter>
        </Parameters>
        <ReturnType TypeId="12"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21">
                <xsc:Presentation>Str</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> value = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M mth2WBQL2LEVBBT7KGSRMMKEYYBW4" Invoke="true">
                <xsc:Presentation>getStr</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(path, mandatory);
if (value != null) {
    </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="451" Path="xsd3CHHLDEWMTPBDJHBAAN7YHKUNI" extStr="DateTime">
                <xsc:Presentation>Arte::TypesXsd:DateTime</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> dateTime = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="451" Path="xsd3CHHLDEWMTPBDJHBAAN7YHKUNI" extStr="DateTime.Factory">
                <xsc:Presentation>Arte::TypesXsd:DateTime.Factory</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.newInstance();
    if (value.indexOf("T") &lt; 0) {
        org.apache.xmlbeans.XmlDate xmlDate = org.apache.xmlbeans.XmlDate.Factory.newInstance();
        xmlDate.setStringValue(value);
        dateTime.setDateValue(xmlDate.DateValue);
    } else {
        org.apache.xmlbeans.XmlDateTime xmlDateTime = org.apache.xmlbeans.XmlDateTime.Factory.newInstance();
        xmlDateTime.setStringValue(value);
        dateTime.setDateValue(xmlDateTime.DateValue);
    }
    return new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="12">
                <xsc:Presentation>DateTime</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(dateTime.CalendarValue.TimeInMillis);
} else {
    return null;
}</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthNVIMG3SM4VAIFJ5ISXGPCFBENE" Name="getElement" Nature="0" IsOverride="false">
        <AccessRules/>
        <Parameters>
          <Parameter Name="path" Id="mprNLEZ4EKJXRHL5ECTYI5QDXDM3I">
            <Type TypeId="21"/>
          </Parameter>
          <Parameter Name="mandatory" Id="mpr6KCH5XGDVZGQJHQ7KKFD5CIVTI">
            <Type TypeId="401" extStr="boolean"/>
          </Parameter>
        </Parameters>
        <ReturnType TypeId="451"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>if (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdTPMRH4LIVZARPALKFMVHX3E6KQ" Invoke="true">
                <xsc:Presentation>xml</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> == null) return null;
</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="451">
                <xsc:Presentation>Xml</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>[] res = null;
res = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdTPMRH4LIVZARPALKFMVHX3E6KQ" Invoke="true">
                <xsc:Presentation>xml</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.selectPath(</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M mthDE5P25WDWNFHZPTYTRULYSZL6M" Invoke="true">
                <xsc:Presentation>buildQuery</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(path));
if (res.length == 0 &amp;&amp; mandatory) {
    throw new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axcTNXCEKEORVFRFDUEZO3MB5REHQ mthZMCVM47GJJDGBORSJDKFXASDVU" Invoke="true">
                <xsc:Presentation>AppError</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>("XML element '" + path + "' not found");
} else if (res.length == 0) {
    return null;
} else if (res.length > 1) {
    throw new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axcTNXCEKEORVFRFDUEZO3MB5REHQ mthZMCVM47GJJDGBORSJDKFXASDVU" Invoke="true">
                <xsc:Presentation>AppError</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>("Path '" + path + "' returned several elements");
} else {
    return res[0];
}</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mth7S4HRHY2YRGBDBHR4ACA2J2UXM" Name="getElements" Nature="0" IsOverride="false">
        <AccessRules/>
        <Parameters>
          <Parameter Name="path" Id="mprRCSFJYXGWRGCBPM34NAL5U47CU">
            <Type TypeId="21"/>
          </Parameter>
          <Parameter Name="mandatory" Id="mprD46HE7UYQ5GJBOATFZDVIUXWYY">
            <Type TypeId="401" extStr="boolean"/>
          </Parameter>
        </Parameters>
        <ReturnType TypeId="451" Dimension="1"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>if (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdTPMRH4LIVZARPALKFMVHX3E6KQ" Invoke="true">
                <xsc:Presentation>xml</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> == null) return null;
</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="451">
                <xsc:Presentation>Xml</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>[] res = null;
res = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdTPMRH4LIVZARPALKFMVHX3E6KQ" Invoke="true">
                <xsc:Presentation>xml</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.selectPath(</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M mthDE5P25WDWNFHZPTYTRULYSZL6M" Invoke="true">
                <xsc:Presentation>buildQuery</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(path));
if (res.length == 0 &amp;&amp; mandatory) {
    throw new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axcTNXCEKEORVFRFDUEZO3MB5REHQ mthZMCVM47GJJDGBORSJDKFXASDVU" Invoke="true">
                <xsc:Presentation>AppError</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>("No elements found by path'" + path + "'");
} else if (res.length == 0) {
    return null;
} else {
    return res;
}</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthVYH3KWYG5RB3RFNJ4XZ3ICB2PU" Name="getInt" DescriptionId="mlsHRDLHCBOLNFPPDPDXFWI53SLX4" Nature="0" IsOverride="false">
        <AccessRules/>
        <Parameters>
          <Parameter Name="path" DescriptionId="mlsCHR4DMZP75BRZHZ5TFATVMCZXI" Id="mprEZ7ZZMQBOZEWVD5QC2MG2F4CEY_0">
            <Type TypeId="21"/>
          </Parameter>
          <Parameter Name="mandatory" DescriptionId="mlsWHWZA2F4ANE3TEYKYK56O3MZYE" Id="mprEZ7ZZMQBOZEWVD5QC2MG2F4CEY_1">
            <Type TypeId="401" extStr="boolean"/>
          </Parameter>
        </Parameters>
        <ReturnType TypeId="2" DescriptionId="mlsF2FSSF5WI5EUVOK2FLL4GMIXUE"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>Str value = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M mth2WBQL2LEVBBT7KGSRMMKEYYBW4" Invoke="true">
                <xsc:Presentation>getStr</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(path, mandatory);
if (value != null) {
    return </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="2">
                <xsc:Presentation>Int</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.valueOf(value);
}else {
    return null;
}</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mth2NXFJB5J75HVNHDS2SLWX5LTLE" Name="getNum" DescriptionId="mlsQZZ6USIZ7VHIHNXQRSLWMNADTE" Nature="0" IsOverride="false">
        <AccessRules/>
        <Parameters>
          <Parameter Name="path" DescriptionId="mlsKTNQL6RWVVB57D2BH3MACKS5DU" Id="mprQNQXPUZ42JGU7LFZDQOXSORSBE_0">
            <Type TypeId="21"/>
          </Parameter>
          <Parameter Name="mandatory" DescriptionId="mlsX4YG5Q2THBAFHH7GETTMUKFVEA" Id="mprQNQXPUZ42JGU7LFZDQOXSORSBE_1">
            <Type TypeId="401" extStr="boolean"/>
          </Parameter>
        </Parameters>
        <ReturnType TypeId="11" DescriptionId="mlsENFMO4CXWJHC5AO7YXASBIEP44"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>Str value = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M mth2WBQL2LEVBBT7KGSRMMKEYYBW4" Invoke="true">
                <xsc:Presentation>getStr</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(path, mandatory);
if (value != null) {
    return new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="11">
                <xsc:Presentation>Num</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(value);
} else {
    return null;
}</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mth2WBQL2LEVBBT7KGSRMMKEYYBW4" Name="getStr" Nature="0" IsOverride="false">
        <AccessRules/>
        <Parameters>
          <Parameter Name="path" Id="mprZXMLOU4KOZCKZMYABBEWXLDSVY">
            <Type TypeId="21"/>
          </Parameter>
          <Parameter Name="mandatory" Id="mprYCDSGAQR65GIPE5YTKSWCXTYCQ">
            <Type TypeId="401" extStr="boolean"/>
          </Parameter>
        </Parameters>
        <ReturnType TypeId="21"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="451">
                <xsc:Presentation>Xml</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> res = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M mthNVIMG3SM4VAIFJ5ISXGPCFBENE" Invoke="true">
                <xsc:Presentation>getElement</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(path, mandatory);
if (res == null) {
    return null;
}
</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="aic7AFXSUJOVNAWZO7BL24MEDAAG4">
                <xsc:Presentation>Types::XmlCursor</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> cursor = res.newCursor();
try {
    return cursor.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aic7AFXSUJOVNAWZO7BL24MEDAAG4 mthIVFLBVH6M5BZ3A66YST7AMNFSQ" Invoke="true">
                <xsc:Presentation>getTextValue</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();
} finally {
    cursor.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aic7AFXSUJOVNAWZO7BL24MEDAAG4 mthPO26DEWFPREJFCXVPQBU4MBSCA" Invoke="true">
                <xsc:Presentation>dispose</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();
}</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthB3AX3WZQUBGINKQQB275NGBIGQ" Name="setElement" DescriptionId="mlsAAM4ZLTBCRDB5FYDMDPG3YWLFU" Nature="0" IsOverride="false">
        <AccessRules/>
        <Parameters>
          <Parameter Name="path" DescriptionId="mlsP4JF2HGQHZCXRE7XE7XV5SEYUQ" Id="mprPPHF6273S5CHJDYWLD7JPF43JM_0">
            <Type TypeId="21"/>
          </Parameter>
          <Parameter Name="val" DescriptionId="mlsP5XBFSWYJZFOFO3PNPECTDUJOE" Id="mprPPHF6273S5CHJDYWLD7JPF43JM_1">
            <Type TypeId="451"/>
          </Parameter>
        </Parameters>
        <ReturnType TypeId="411" Path="adcJRR25XSQMZBRRBYCFIKB75OY7M" DescriptionId="mlsGYCO6LUMABBU5J4OFRFVUTPWV4"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>return </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M mthKKJ2ZDM4EJHTTA2Z3CRUBQMZ54" Invoke="true">
                <xsc:Presentation>setValue</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(path, val);</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mth7PM3DF5KM5FC3CZZVEHFK54VWM" Name="setElementFromStr" DescriptionId="mlsY6IYOTW4EVCAFNGXR2TV3DL6CY" Nature="0" IsOverride="false">
        <AccessRules/>
        <Parameters>
          <Parameter Name="path" DescriptionId="mlsUEZBM5SF7NEPNOV3IOKAFFNTBQ" Id="mprPPHF6273S5CHJDYWLD7JPF43JM_0">
            <Type TypeId="21"/>
          </Parameter>
          <Parameter Name="val" DescriptionId="mlsCZATBEURWVCO5DIZMRKIATJPRE" Id="mprPPHF6273S5CHJDYWLD7JPF43JM_1">
            <Type TypeId="21"/>
          </Parameter>
        </Parameters>
        <ReturnType TypeId="411" Path="adcJRR25XSQMZBRRBYCFIKB75OY7M" DescriptionId="mlsP2KA3I2VKJGMLJSJXRQ7TAS76I"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>return </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M mthKKJ2ZDM4EJHTTA2Z3CRUBQMZ54" Invoke="true">
                <xsc:Presentation>setValue</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(path, val);</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthACYEZQVJ5VFODIEM7ZJ5HZNZ4E" Name="setInt" DescriptionId="mlsSF7KC75OSBBLXABNJDYZDD7BMI" Nature="0" IsOverride="false">
        <AccessRules/>
        <Parameters>
          <Parameter Name="path" DescriptionId="mlsDHAWU6W5TFBOVHCMX5ZOPGGGVI" Id="mprIOTKVVNIIZBKXAWVTWRW3AQLCI_0">
            <Type TypeId="21"/>
          </Parameter>
          <Parameter Name="val" DescriptionId="mlsJDONEVUAKZDURJRRHH3DXBOXHA" Id="mprIOTKVVNIIZBKXAWVTWRW3AQLCI_1">
            <Type TypeId="2"/>
          </Parameter>
        </Parameters>
        <ReturnType TypeId="411" Path="adcJRR25XSQMZBRRBYCFIKB75OY7M" DescriptionId="mlsPQH32VBDCZFKXI24ECZOI57EJY"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>return </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M mthKKJ2ZDM4EJHTTA2Z3CRUBQMZ54" Invoke="true">
                <xsc:Presentation>setValue</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(path, val);</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthS7E3FACQ2RAYNPEZHGASOUF2VU" Name="setNum" DescriptionId="mlsJ35PVGVI7NDZHLVAKSKJVTEKNM" Nature="0" IsOverride="false">
        <AccessRules/>
        <Parameters>
          <Parameter Name="path" DescriptionId="mlsESTJ3SGU3FDEPLSMJQXF4N57AU" Id="mprD7JL6RLUBBAMDHKOYPJ6B66SBU_0">
            <Type TypeId="21"/>
          </Parameter>
          <Parameter Name="val" DescriptionId="mlsCZVC57XRSRCSNCX4UABW22TY7E" Id="mprD7JL6RLUBBAMDHKOYPJ6B66SBU_1">
            <Type TypeId="11"/>
          </Parameter>
        </Parameters>
        <ReturnType TypeId="411" Path="adcJRR25XSQMZBRRBYCFIKB75OY7M" DescriptionId="mlsOZYT3VAP6ZBQ5DSSVXU5FRFWJI"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>return </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M mthKKJ2ZDM4EJHTTA2Z3CRUBQMZ54" Invoke="true">
                <xsc:Presentation>setValue</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(path, val);</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthRESWE4BNMBHMRCQ5MN4B4XB5KU" Name="setStr" DescriptionId="mlsLLPGR5QTTBCBBJXAG7DATLRC6I" Nature="0" IsOverride="false">
        <AccessRules/>
        <Parameters>
          <Parameter Name="path" DescriptionId="mlsJI6WIJ7WFZAM5HSHSC3LAL42BM" Id="mprRIIUQZK6WZGPHKSPW5JIO43XP4_0">
            <Type TypeId="21"/>
          </Parameter>
          <Parameter Name="val" DescriptionId="mlsMVEK2G7SNRD4XJYHJ35E6ZRJNA" Id="mprRIIUQZK6WZGPHKSPW5JIO43XP4_1">
            <Type TypeId="21"/>
          </Parameter>
        </Parameters>
        <ReturnType TypeId="411" Path="adcJRR25XSQMZBRRBYCFIKB75OY7M" DescriptionId="mls4TP4BVDLJJEBJOPDL3KQK535SE"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>return </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M mthKKJ2ZDM4EJHTTA2Z3CRUBQMZ54" Invoke="true">
                <xsc:Presentation>setValue</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(path, val);</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthADQB5YTMCVFF7IIYNERNZTJTS4" Name="setBool" DescriptionId="mlsNBDDNQQQ35DDFFH4LT4LYFEEBA" Nature="0" IsOverride="false">
        <AccessRules/>
        <Parameters>
          <Parameter Name="path" DescriptionId="mls35GGGYE2SFCZNFXGN7AHPDMLM4" Id="mprJOBW35MKYVDX5NFSTPPEO3CIFE_0">
            <Type TypeId="21"/>
          </Parameter>
          <Parameter Name="val" DescriptionId="mlsW4UUBHNNHVFJDBDW7KYHSZTQXM" Id="mprJOBW35MKYVDX5NFSTPPEO3CIFE_1">
            <Type TypeId="1"/>
          </Parameter>
        </Parameters>
        <ReturnType TypeId="411" Path="adcJRR25XSQMZBRRBYCFIKB75OY7M" DescriptionId="mlsIVRXPNNT7JDRJLKH7AJKJBDKEY"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>return </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M mthKKJ2ZDM4EJHTTA2Z3CRUBQMZ54" Invoke="true">
                <xsc:Presentation>setValue</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(path, val);</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mth36DKY4KX3ZDW3HZVN3SNLONLYI" Name="setDate" DescriptionId="mlsXA555RWR4VBTVE4KKDPA6ZLXYI" Nature="0" IsOverride="false">
        <AccessRules/>
        <Parameters>
          <Parameter Name="path" DescriptionId="mlsYZ3B3JHDLFCMJMWSTH46XJ5UZU" Id="mpr6P6Q5BN5GFBWLBNJHRMBFLC2X4_0">
            <Type TypeId="21"/>
          </Parameter>
          <Parameter Name="val" DescriptionId="mls3D4APPTS7FH2HKHJ6ELPKSLEPI" Id="mpr6P6Q5BN5GFBWLBNJHRMBFLC2X4_1">
            <Type TypeId="12"/>
          </Parameter>
        </Parameters>
        <ReturnType TypeId="411" Path="adcJRR25XSQMZBRRBYCFIKB75OY7M" DescriptionId="mlsGHSJJNACWFFA5HTN25QCOSGE2I"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>org.apache.xmlbeans.XmlDate date = org.apache.xmlbeans.XmlDate.Factory.newInstance();
date.setDateValue(val);
return </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M mthKKJ2ZDM4EJHTTA2Z3CRUBQMZ54" Invoke="true">
                <xsc:Presentation>setValue</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(path, date.getStringValue());</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthDNPS3IP5JBGVFCOCRFT4TDZYXY" Name="setDateTime" DescriptionId="mlsWPJN6CTFRFEHBH5GUPL7I2ABV4" Nature="0" IsOverride="false">
        <AccessRules/>
        <Parameters>
          <Parameter Name="path" DescriptionId="mlsI42Y4QDBFBEYPMGVOQKKVACBHY" Id="mpr6VDKGHHZGBGALMT3FSLKOQKRVU_0">
            <Type TypeId="21"/>
          </Parameter>
          <Parameter Name="val" DescriptionId="mls2NPKDAZ5FNCCRCJAGILYRHHCGQ" Id="mpr6VDKGHHZGBGALMT3FSLKOQKRVU_1">
            <Type TypeId="12"/>
          </Parameter>
        </Parameters>
        <ReturnType TypeId="411" Path="adcJRR25XSQMZBRRBYCFIKB75OY7M" DescriptionId="mlsGY2DZX7D6NHUTHXRKHX6NOOHFA"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>org.apache.xmlbeans.XmlDateTime dateTime = org.apache.xmlbeans.XmlDateTime.Factory.newInstance();
dateTime.setDateValue(val);
return </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M mthKKJ2ZDM4EJHTTA2Z3CRUBQMZ54" Invoke="true">
                <xsc:Presentation>setValue</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(path, dateTime.getStringValue());</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthCPYTVP3QNZASPIKANQL7TSOGUQ" Name="addElement" Nature="0" IsOverride="false">
        <AccessRules/>
        <Parameters>
          <Parameter Name="path" Id="mprMHB75B6ND5FSBKQAMNT5DRSWBI">
            <Type TypeId="21"/>
          </Parameter>
          <Parameter Name="val" Id="mprIUPUKIIWNZEZFLDM7DGBY2BEQI">
            <Type TypeId="451"/>
          </Parameter>
        </Parameters>
        <ReturnType TypeId="411" Path="adcJRR25XSQMZBRRBYCFIKB75OY7M"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>if (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdTPMRH4LIVZARPALKFMVHX3E6KQ" Invoke="true">
                <xsc:Presentation>xml</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> == null) {
    return this;
}
</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prd6GGQ6GNCTFDALGYFTWH7B4DZZY" Invoke="true">
                <xsc:Presentation>xmlBkp</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdTPMRH4LIVZARPALKFMVHX3E6KQ" Invoke="true">
                <xsc:Presentation>xml</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.copy();
try {
    java.lang.reflect.Method method = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="adcJRR25XSQMZBRRBYCFIKB75OY7M">
                <xsc:Presentation>XmlUtils</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.class.getMethod(</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M mthMLMZU6Q355HGPLJEPKOATAA52Q">
                <xsc:Presentation>XmlUtils:insertElement</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcELH54EKVCJAATNTLFHHCSVHPZU mthCX6FRHR4VNG37LJWH7N6THCMMA" Invoke="true">
                <xsc:Presentation>toString</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(), new Class[]{java.lang.Object.class});
    </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M mth4TGD7FKMNZBIFEQCIXEPF5BZ54" Invoke="true">
                <xsc:Presentation>findTarget</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(path, val, method);
} catch (java.lang.NoSuchMethodException e) {
    org.radixware.kernel.common.trace.IRadixTrace.Lookup.findInstance(this.Class).put(
        </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4 aci5WAUJTYZVPORDJHCAANE2UAFXA" Invoke="true">
                <xsc:Presentation>Arte::EventSeverity:Error</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>,
        "NoSuchMethodException: "+e.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axc6XYNZ22YSZEKDKWH2SWRGBTC6I mthAIARN4PFVBD6HJZSJNZIXYNYAY" Invoke="true">
                <xsc:Presentation>getMessage</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(),
        org.radixware.kernel.common.enums.EEventSource.getForValue("App")
    );
}
return this;</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthJ3JYCYZ2JZDUTKNZDWBHG3ODHM" Name="addElementFromStr" Nature="0" IsOverride="false">
        <AccessRules/>
        <Parameters>
          <Parameter Name="path" Id="mprMHB75B6ND5FSBKQAMNT5DRSWBI">
            <Type TypeId="21"/>
          </Parameter>
          <Parameter Name="val" Id="mprIUPUKIIWNZEZFLDM7DGBY2BEQI">
            <Type TypeId="21"/>
          </Parameter>
        </Parameters>
        <ReturnType TypeId="411" Path="adcJRR25XSQMZBRRBYCFIKB75OY7M"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>if (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdTPMRH4LIVZARPALKFMVHX3E6KQ" Invoke="true">
                <xsc:Presentation>xml</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> == null) {
    return this;
}
</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prd6GGQ6GNCTFDALGYFTWH7B4DZZY" Invoke="true">
                <xsc:Presentation>xmlBkp</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdTPMRH4LIVZARPALKFMVHX3E6KQ" Invoke="true">
                <xsc:Presentation>xml</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.copy();
try {
    java.lang.reflect.Method method = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="adcJRR25XSQMZBRRBYCFIKB75OY7M">
                <xsc:Presentation>XmlUtils</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.class.getMethod(</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M mthMLMZU6Q355HGPLJEPKOATAA52Q">
                <xsc:Presentation>XmlUtils:insertElement</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcELH54EKVCJAATNTLFHHCSVHPZU mthCX6FRHR4VNG37LJWH7N6THCMMA" Invoke="true">
                <xsc:Presentation>toString</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(), new Class[]{java.lang.Object.class});
    </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M mth4TGD7FKMNZBIFEQCIXEPF5BZ54" Invoke="true">
                <xsc:Presentation>findTarget</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(path, val, method);
} catch (java.lang.NoSuchMethodException e) {
    org.radixware.kernel.common.trace.IRadixTrace.Lookup.findInstance(this.Class).put(
        </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4 aci5WAUJTYZVPORDJHCAANE2UAFXA" Invoke="true">
                <xsc:Presentation>Arte::EventSeverity:Error</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>,
        "NoSuchMethodException: "+e.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axc6XYNZ22YSZEKDKWH2SWRGBTC6I mthAIARN4PFVBD6HJZSJNZIXYNYAY" Invoke="true">
                <xsc:Presentation>getMessage</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(),
        org.radixware.kernel.common.enums.EEventSource.getForValue("App")
    );
}
return this;</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthOUR2QKI4KBGVXIIIYLVS3JOO3Q" Name="addElements" Nature="0" IsOverride="false">
        <AccessRules/>
        <Parameters>
          <Parameter Name="path" Id="mprMHB75B6ND5FSBKQAMNT5DRSWBI">
            <Type TypeId="21"/>
          </Parameter>
          <Parameter Name="vals" Variable="true" Id="mprIUPUKIIWNZEZFLDM7DGBY2BEQI">
            <Type TypeId="451" Dimension="1"/>
          </Parameter>
        </Parameters>
        <ReturnType TypeId="411" Path="adcJRR25XSQMZBRRBYCFIKB75OY7M"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>if (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdTPMRH4LIVZARPALKFMVHX3E6KQ" Invoke="true">
                <xsc:Presentation>xml</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> == null) {
    return this;
}
for (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="451">
                <xsc:Presentation>Xml</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> val : vals) {
    </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M mthCPYTVP3QNZASPIKANQL7TSOGUQ" Invoke="true">
                <xsc:Presentation>addElement</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(path, val);
}
return this;</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthODL52MMCSFGTTNMBYPCURGPALU" Name="addElementsFromStr" Nature="0" IsOverride="false">
        <AccessRules/>
        <Parameters>
          <Parameter Name="path" Id="mprMHB75B6ND5FSBKQAMNT5DRSWBI">
            <Type TypeId="21"/>
          </Parameter>
          <Parameter Name="vals" Variable="true" Id="mprIUPUKIIWNZEZFLDM7DGBY2BEQI">
            <Type TypeId="21" Dimension="1"/>
          </Parameter>
        </Parameters>
        <ReturnType TypeId="411" Path="adcJRR25XSQMZBRRBYCFIKB75OY7M"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>if (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdTPMRH4LIVZARPALKFMVHX3E6KQ" Invoke="true">
                <xsc:Presentation>xml</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> == null) {
    return this;
}
for (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21">
                <xsc:Presentation>Str</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> val : vals) {
    </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M mthJ3JYCYZ2JZDUTKNZDWBHG3ODHM" Invoke="true">
                <xsc:Presentation>addElementFromStr</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(path, val);
}
return this;</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthNWVNB6GVAJGMJF37LCYDQFU4EE" Name="parse" Nature="0" IsOverride="false">
        <AccessRules IsStatic="true"/>
        <Parameters>
          <Parameter Name="str" Id="mpr3XDMCAYJF5AEJNLXBCDBWEQ2PY">
            <Type TypeId="21"/>
          </Parameter>
          <Parameter Name="defaultNamespaceUri" Id="mprVNYWV5OCL5DLXE7ILC4JTLEFWY">
            <Type TypeId="21"/>
          </Parameter>
        </Parameters>
        <ReturnType TypeId="411" Path="adcJRR25XSQMZBRRBYCFIKB75OY7M"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>try {
    </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="451">
                <xsc:Presentation>Xml</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> xml = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="451">
                <xsc:Presentation>Xml</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.Factory.parse(str);
    return new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M mth7BU6CUOFWZA2BMLJYUAHYI25NU" Invoke="true">
                <xsc:Presentation>XmlUtils</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(xml, defaultNamespaceUri, null);
} catch (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="axcCOEVNNRGS5DITM72ZNKZFX6EIU">
                <xsc:Presentation>Exceptions::XmlException</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> e) {
    throw new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axcTNXCEKEORVFRFDUEZO3MB5REHQ mth5TTUPQZBRBFJPJTYFH3A54IZFY" Invoke="true">
                <xsc:Presentation>AppError</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>("Can't parse XML: " + e.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axc6XYNZ22YSZEKDKWH2SWRGBTC6I mthAIARN4PFVBD6HJZSJNZIXYNYAY" Invoke="true">
                <xsc:Presentation>getMessage</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(), e);
}</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthSWZB5WBAEZG27L7HLEEZ26YPXE" Name="xmlToStr" Nature="0" IsOverride="false">
        <AccessRules/>
        <Parameters>
          <Parameter Name="indent" Id="mprCA4MZDFEGZHXVEB6UQUD5NP5EA">
            <Type TypeId="2"/>
          </Parameter>
        </Parameters>
        <ReturnType TypeId="21"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>org.apache.xmlbeans.XmlOptions options = new org.apache.xmlbeans.XmlOptions();
if (indent != null) {
    options.setSavePrettyPrint();
    options.setSavePrettyPrintIndent(indent.intValue());
}
return </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdTPMRH4LIVZARPALKFMVHX3E6KQ" Invoke="true">
                <xsc:Presentation>xml</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> == null ? null : </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJRR25XSQMZBRRBYCFIKB75OY7M prdTPMRH4LIVZARPALKFMVHX3E6KQ" Invoke="true">
                <xsc:Presentation>xml</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.xmlText(options);</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthSMFWX76QE5BNZCHF3J5K7HO2OM" Name="xmlToStr" Nature="0" IsOverride="false">
        <AccessRules IsStatic="true"/>
        <Parameters>
          <Parameter Name="xml" Id="mprXOGJJQPHPRBZPBBBZUQHHSNVPY">
            <Type TypeId="451"/>
          </Parameter>
          <Parameter Name="indent" Id="mpr3MLQA6Q6GJEXXAMFB5GRXT4554">
            <Type TypeId="2"/>
          </Parameter>
        </Parameters>
        <ReturnType TypeId="21"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>org.apache.xmlbeans.XmlOptions options = new org.apache.xmlbeans.XmlOptions();
if (indent != null) {
    options.setSavePrettyPrint();
    options.setSavePrettyPrintIndent(indent.intValue());
}
return xml == null ? null : xml.xmlText(options);</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthKPXHT5YQZBGENIP7LFNDVIS3QE" Name="XmlWrapper" DescriptionId="mlsBOKK6X5E5FFEXKTK6SK4NHUCD4" Nature="0" IsConstructor="true" IsOverride="false">
        <AccessRules/>
        <Parameters>
          <Parameter Name="xml" DescriptionId="mlsMCSIVTITXNCGZGDB7EBNO5DICE" Id="mprQJEM3AQ43REMLONYJYQADJYI4Y_0">
            <Type TypeId="451"/>
          </Parameter>
        </Parameters>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>this(xml, null, null);</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
    </Methods>
  </AdsClassDefinition>
</AdsDefinition>