<?xml version="1.0" encoding="UTF-8"?>
<AdsDefinition xmlns="http://schemas.radixware.org/adsdef.xsd" xmlns:xsc="http://schemas.radixware.org/xscml.xsd" FormatVersion="6">
  <AdsClassDefinition Id="aclIZH7QKEE45AEHIKRRMEF22V264" Name="Task.SysMon.MetricControl" Type="2" ClientEnvironment="explorer">
    <AccessRules/>
    <Headers>
      <Src Name="HeaderadcCL7IPFK5INDMFJPJMQDOISU5PI"/>
    </Headers>
    <Bodies>
      <Src Name="BodyadcDPLYML3VLJGIXGUKYRT4R7SU3I">
        <xsc:Item>
          <xsc:Java>private static final long WAS_ABNORMAL_MASK = </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acs2EBGYIV32NFOVGWTTGKNZDPO6Y aciL3L2VF2Z35HV5MXBQPC5CNEVUY" Invoke="true">
            <xsc:Presentation>MetricControlAction:ReportError</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.longValue()
        | </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acs2EBGYIV32NFOVGWTTGKNZDPO6Y aciBRVMWOBBONFRRK2S63SZJDGVWY" Invoke="true">
            <xsc:Presentation>MetricControlAction:ReportWarning</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.longValue()
        | </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acs2EBGYIV32NFOVGWTTGKNZDPO6Y aciBBBO74WL2NEMZI47NQO5NWGDAI" Invoke="true">
            <xsc:Presentation>MetricControlAction:ReportWarningEscalation</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.longValue()
        | </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acs2EBGYIV32NFOVGWTTGKNZDPO6Y aciLGYY4V75AVB2BKPO5FTAZP5SY4" Invoke="true">
            <xsc:Presentation>MetricControlAction:ReportReturnToWarning</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.longValue();
private static final long ERROR_LEVEL_MASK = </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acs2EBGYIV32NFOVGWTTGKNZDPO6Y aciL3L2VF2Z35HV5MXBQPC5CNEVUY" Invoke="true">
            <xsc:Presentation>MetricControlAction:ReportError</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.longValue() | </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acs2EBGYIV32NFOVGWTTGKNZDPO6Y aciBBBO74WL2NEMZI47NQO5NWGDAI" Invoke="true">
            <xsc:Presentation>MetricControlAction:ReportWarningEscalation</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.longValue();
private static final long WARNING_LEVEL_MASK = </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acs2EBGYIV32NFOVGWTTGKNZDPO6Y aciBRVMWOBBONFRRK2S63SZJDGVWY" Invoke="true">
            <xsc:Presentation>MetricControlAction:ReportWarning</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.longValue() | </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acs2EBGYIV32NFOVGWTTGKNZDPO6Y aciLGYY4V75AVB2BKPO5FTAZP5SY4" Invoke="true">
            <xsc:Presentation>MetricControlAction:ReportReturnToWarning</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.longValue();
private </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="451" Path="xsdMKFYBAQ3WZFKFLNWZGRHCSPJOQ" extStr="NotifyRq">
            <xsc:Presentation>SnmpUnitServiceXsd:NotifyRq</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> notifyRq;

void doExecute(final </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="12">
            <xsc:Presentation>DateTime</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> prevExecTime, final </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="12">
            <xsc:Presentation>DateTime</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> curExecTime) {
    final </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="411" Path="acc6JUP2UESZVDYRGTXELO2Z4YL54">
            <xsc:Presentation>MetricHistForControlCursor</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> histCursor = </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="411" Path="acc6JUP2UESZVDYRGTXELO2Z4YL54">
            <xsc:Presentation>MetricHistForControlCursor</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acc6JUP2UESZVDYRGTXELO2Z4YL54 mth_stmt_execute_____________" Invoke="true">
            <xsc:Presentation>open</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>();
    final </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="411" Path="accKCS6CXGKPNCAFNU6NGE6CMGEHM">
            <xsc:Presentation>MetricStateCursor</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> stateCursor = </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="411" Path="accKCS6CXGKPNCAFNU6NGE6CMGEHM">
            <xsc:Presentation>MetricStateCursor</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="accKCS6CXGKPNCAFNU6NGE6CMGEHM mth_stmt_execute_____________" Invoke="true">
            <xsc:Presentation>open</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>();
    </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="411" Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y">
            <xsc:Presentation>MetricState</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> metricState = null;
    </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="2">
            <xsc:Presentation>Int</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> pendingHistStateId = null;
    boolean historyFound = false;

    </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="451" Path="xsdWAMASQMKG5C7NO7K67WYPVZHJM" extStr="NotifyDocument">
            <xsc:Presentation>SnmpUnitServiceWsdl:NotifyDocument</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> notifyDoc = </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="451" Path="xsdWAMASQMKG5C7NO7K67WYPVZHJM" extStr="NotifyDocument">
            <xsc:Presentation>SnmpUnitServiceWsdl:NotifyDocument</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.Factory.newInstance();
    notifyRq = notifyDoc.addNewNotify().addNewNotifyRq();

    ControlState state = new ControlState();
    try {
        while (stateCursor.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="pdcCursor____________________ mthBNNDZ4NDINDL3IT3X6TOSIN7TQ" Invoke="true">
            <xsc:Presentation>next</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>() || stateCursor.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="pdcCursor____________________ mthHV3DGAQHGNGNBHCIKFEPKYDHTM" Invoke="true">
            <xsc:Presentation>isAfterLast</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>()) {
            if (metricState != null) {
                updateMetricState(metricState, state);
                if (stateCursor.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="pdcCursor____________________ mthHV3DGAQHGNGNBHCIKFEPKYDHTM" Invoke="true">
            <xsc:Presentation>isAfterLast</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>()) {
                    break;
                }
            }

            metricState = </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="411" Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y">
            <xsc:Presentation>MetricState</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y mth_loadByPK_________________" Invoke="true">
            <xsc:Presentation>loadByPK</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>(stateCursor.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="accKCS6CXGKPNCAFNU6NGE6CMGEHM prfXH4BTCR4K5BGJLDS26DWMHCI3Y" Invoke="true">
            <xsc:Presentation>id</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>, true);
            if (metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y col5VYMKQSPWFH5NBXRBWAN2VFEN4" Invoke="true">
            <xsc:Presentation>metricType</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> == null) {
                continue;//metric was disabled
            }
//            System.out.println("Controlling metric #" + metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y col5VYMKQSPWFH5NBXRBWAN2VFEN4" Invoke="true">
            <xsc:Presentation>metricType</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec2H6SULJHXJGFVIS6UVHRWQS4AM colNS4TO66OSNH3DCZS64EDNL7VDU" Invoke="true">
            <xsc:Presentation>id</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> + " " + metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y col5VYMKQSPWFH5NBXRBWAN2VFEN4" Invoke="true">
            <xsc:Presentation>metricType</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec2H6SULJHXJGFVIS6UVHRWQS4AM col2JJNBDFWIVG47OCFOCMCXVBFXI" Invoke="true">
            <xsc:Presentation>kind</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>);
            historyFound = false;
            state.type = </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aclIZH7QKEE45AEHIKRRMEF22V264 mthDMRMHQSWFBAVVEURXAVJA7MAYY" Invoke="true">
            <xsc:Presentation>getMetricType</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>(metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y col5VYMKQSPWFH5NBXRBWAN2VFEN4" Invoke="true">
            <xsc:Presentation>metricType</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>);
            if (state.type == null) {
                </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="411" Path="pdcTrace_____________________">
            <xsc:Presentation>Arte::Trace</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="pdcTrace_____________________ mthUVXH2WARWLOBDLJLAAMPGXSZKU" Invoke="true">
            <xsc:Presentation>put</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>(</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:EventCode StringId="mls2LL3QTI3VNATLCNO5S4KH63OGY"/>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>, metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y col5VYMKQSPWFH5NBXRBWAN2VFEN4" Invoke="true">
            <xsc:Presentation>metricType</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec2H6SULJHXJGFVIS6UVHRWQS4AM mthSK64PGWTZNFZFAJVJ5NHXBAC6M" Invoke="true">
            <xsc:Presentation>getKind</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>().toString());
            }
            resetControlState(state, metricState);
            if (pendingHistStateId == null) {
                if (histCursor.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="pdcCursor____________________ mthBNNDZ4NDINDL3IT3X6TOSIN7TQ" Invoke="true">
            <xsc:Presentation>next</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>()) {
                    pendingHistStateId = histCursor.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acc6JUP2UESZVDYRGTXELO2Z4YL54 prfKJHFQ654ZNDOZOCG72BCFV3I5Q" Invoke="true">
            <xsc:Presentation>stateId</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>;
                } else {
                    pendingHistStateId = null;
                }

            }
            state.traceArgs = new TraceArguments();
            state.traceArgs.state = metricState;
            state.traceArgs.totalDelaySec = null;
            if (pendingHistStateId != metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y colAJKGMNFACVDP3NKSFE74FBBJWI" Invoke="true">
            <xsc:Presentation>id</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>) {
                if (state.type == </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="411" Path="adcA6UCGHAHARFOVLIO26LS4ULQPQ">
            <xsc:Presentation>MetricValueTypeEnum</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.STATISTIC) {
                    continue;
                }
                if (!historyFound &amp;&amp; metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y colZN2B3DUPUBFXVP2Y6YPM4RPSV4" Invoke="true">
            <xsc:Presentation>endTime</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.Time &lt;= curExecTime.Time) {
                    state.saResult = calcSeverity(state, metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y col5VYMKQSPWFH5NBXRBWAN2VFEN4" Invoke="true">
            <xsc:Presentation>metricType</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>);
                    state.curSeverity = state.saResult.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="adc7V2TPZWXYJB6FIMONPCW2S7FRA mthOYNBJKVL3VBQRK2J42ID3OVLGI" Invoke="true">
            <xsc:Presentation>getSeverity</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>();
                    state.controlTime = curExecTime.Time;
                    if (state.curSeverity == </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4 aci6CAUJTYZVPORDJHCAANE2UAFXA" Invoke="true">
            <xsc:Presentation>Arte::EventSeverity:Warning</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>) {
                        processWarning(metricState, state);
                    } else if (state.curSeverity == </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4 aci5WAUJTYZVPORDJHCAANE2UAFXA" Invoke="true">
            <xsc:Presentation>Arte::EventSeverity:Error</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>) {//error
                        processError(metricState, state);
                    }
                }
                if (state.newActionMask.get() > 0) {
                    state.lastActionMask = state.newActionMask;
                }
//                state.lastControlTime = curExecTime.Time;
                continue;
            }
            historyFound = true;
            while (pendingHistStateId == metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y colAJKGMNFACVDP3NKSFE74FBBJWI" Invoke="true">
            <xsc:Presentation>id</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>) {
                state.begVal = histCursor.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acc6JUP2UESZVDYRGTXELO2Z4YL54 prfDKCKFGMCSZFMXMKVUWY7PWKLLE" Invoke="true">
            <xsc:Presentation>begVal</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>;
                state.endVal = histCursor.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acc6JUP2UESZVDYRGTXELO2Z4YL54 prf74HMWBNPAJCEDKSJPMAGWCO3SE" Invoke="true">
            <xsc:Presentation>endVal</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>;
                state.minVal = histCursor.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acc6JUP2UESZVDYRGTXELO2Z4YL54 prfKT3X3HLE3JHSHKPIINPRDN4TEE" Invoke="true">
            <xsc:Presentation>minVal</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>;
                state.maxVal = histCursor.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acc6JUP2UESZVDYRGTXELO2Z4YL54 prfOFGCKXUDXZH5TNLFBAABBP4QCM" Invoke="true">
            <xsc:Presentation>maxVal</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>;
                state.avgVal = histCursor.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acc6JUP2UESZVDYRGTXELO2Z4YL54 prfGLUUIK3GIVEOJCAYVZUEILBOYQ" Invoke="true">
            <xsc:Presentation>avgVal</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>;
                state.saResult = calcSeverity(state, metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y col5VYMKQSPWFH5NBXRBWAN2VFEN4" Invoke="true">
            <xsc:Presentation>metricType</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>);
                state.curSeverity = state.saResult.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="adc7V2TPZWXYJB6FIMONPCW2S7FRA mthOYNBJKVL3VBQRK2J42ID3OVLGI" Invoke="true">
            <xsc:Presentation>getSeverity</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>();
                state.controlTime = histCursor.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acc6JUP2UESZVDYRGTXELO2Z4YL54 prfSB46OO4GF5FUDNVFEZJT3B4WWE" Invoke="true">
            <xsc:Presentation>endTime</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.Time;
//                if (metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y colAJKGMNFACVDP3NKSFE74FBBJWI" Invoke="true">
            <xsc:Presentation>id</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.longValue() == 85107) {
//                    System.out.println(System.currentTimeMillis()
//                            + " histCursor.begVal " + String.valueOf(histCursor.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acc6JUP2UESZVDYRGTXELO2Z4YL54 prfDKCKFGMCSZFMXMKVUWY7PWKLLE" Invoke="true">
            <xsc:Presentation>begVal</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>)
//                            + " begVal " + String.valueOf(state.begVal)
//                            + " endVal " + String.valueOf(state.endVal)
//                            + " minVal " + String.valueOf(state.minVal)
//                            + " maxVal " + String.valueOf(state.maxVal)
//                            + " avgVal " + String.valueOf(state.avgVal)
//                            + " curSeverity " + String.valueOf(state.curSeverity));
//                }
                if (state.type == </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="411" Path="adcA6UCGHAHARFOVLIO26LS4ULQPQ">
            <xsc:Presentation>MetricValueTypeEnum</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.STATISTIC) {
                    state.valueSetupTime = histCursor.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acc6JUP2UESZVDYRGTXELO2Z4YL54 prfDYBJWCYCXJC2LEKTTDUUAPDH4A" Invoke="true">
            <xsc:Presentation>begTime</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.Time;
                } else {
                    state.valueSetupTime = histCursor.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acc6JUP2UESZVDYRGTXELO2Z4YL54 prfSB46OO4GF5FUDNVFEZJT3B4WWE" Invoke="true">
            <xsc:Presentation>endTime</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.Time;
                }
                if (state.curSeverity == </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4 aci52AUJTYZVPORDJHCAANE2UAFXA" Invoke="true">
            <xsc:Presentation>Arte::EventSeverity:Event</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>) {
                    processEvent(metricState, state);
                } else if (state.curSeverity == </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4 aci6CAUJTYZVPORDJHCAANE2UAFXA" Invoke="true">
            <xsc:Presentation>Arte::EventSeverity:Warning</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>) {
                    processWarning(metricState, state);
                } else {//error
                    processError(metricState, state);
                }
                //end of current item processing
                state.lastControlTime = state.controlTime;
                state.lastProcessedHistId = histCursor.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acc6JUP2UESZVDYRGTXELO2Z4YL54 prfDVKZS7Z5ZRBLZGT5G7TO3YZAMM" Invoke="true">
            <xsc:Presentation>histId</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>;
                state.lastSeverity = state.curSeverity;
                if (state.newActionMask.get() > 0) {
                    state.lastActionMask.set(state.newActionMask.get());
                }
                state.newActionMask.clear();
                if (histCursor.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="pdcCursor____________________ mthBNNDZ4NDINDL3IT3X6TOSIN7TQ" Invoke="true">
            <xsc:Presentation>next</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>()) {
                    pendingHistStateId = histCursor.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acc6JUP2UESZVDYRGTXELO2Z4YL54 prfKJHFQ654ZNDOZOCG72BCFV3I5Q" Invoke="true">
            <xsc:Presentation>stateId</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>;
                } else {
                    pendingHistStateId = null;
                }
            }
        }
    } finally {
        try {
            stateCursor.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="pdcCursor____________________ mth_stmt_close_______________" Invoke="true">
            <xsc:Presentation>close</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>();
        } finally {
            histCursor.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="pdcCursor____________________ mth_stmt_close_______________" Invoke="true">
            <xsc:Presentation>close</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>();
        }
    }

    if (!notifyRq.MetricTypeList.isEmpty()) {
        </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="411" Path="acc4F4XAK3NE5BUDI47IWUT255LJU">
            <xsc:Presentation>ActiveSnmpManagersCursor</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> managersCur = </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="411" Path="acc4F4XAK3NE5BUDI47IWUT255LJU">
            <xsc:Presentation>ActiveSnmpManagersCursor</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acc4F4XAK3NE5BUDI47IWUT255LJU mth_stmt_execute_____________" Invoke="true">
            <xsc:Presentation>open</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>();
        try {
            while (managersCur.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="pdcCursor____________________ mthBNNDZ4NDINDL3IT3X6TOSIN7TQ" Invoke="true">
            <xsc:Presentation>next</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>()) {
                try {
                    </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="411" Path="pdcArte______________________">
            <xsc:Presentation>Arte::Arte</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="pdcArte______________________ mthAEWBPU7ZXTNRDISQAAAAAAAAAA" Invoke="true">
            <xsc:Presentation>invokeInternalService</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>(notifyDoc, </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="451" Path="xsdWAMASQMKG5C7NO7K67WYPVZHJM" extStr="NotifyDocument">
            <xsc:Presentation>SnmpUnitServiceWsdl:NotifyDocument</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.class, org.radixware.kernel.server.units.snmp.SnmpAgentSap.SERVICE_WSDL + "#" + managersCur.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acc4F4XAK3NE5BUDI47IWUT255LJU prfSI2FZ22MHNDRDG47TY76LFTESI" Invoke="true">
            <xsc:Presentation>id</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>, 0, 5, null);
                } catch (Exception ex) {
                    </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="411" Path="pdcTrace_____________________">
            <xsc:Presentation>Arte::Trace</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="pdcTrace_____________________ mthUALS3BVVSTNRDDXBABIFNQAAAE" Invoke="true">
            <xsc:Presentation>put</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>(</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:EventCode StringId="mls6SBZTV7FGVAV3GFJDUQYNNHJNY"/>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>, new </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="221">
            <xsc:Presentation>ArrStr</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>(managersCur.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acc4F4XAK3NE5BUDI47IWUT255LJU prfSI2FZ22MHNDRDG47TY76LFTESI" Invoke="true">
            <xsc:Presentation>id</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> + ") " + managersCur.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acc4F4XAK3NE5BUDI47IWUT255LJU prfYBG77DWOG5DYJE5NLSXM6FZSAQ" Invoke="true">
            <xsc:Presentation>title</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>, </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="411" Path="adcYNRZI7YTNVBRBF5VJBIO6NWV4U">
            <xsc:Presentation>Utils::ExceptionTextFormatter</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="adcYNRZI7YTNVBRBF5VJBIO6NWV4U mthPEFBTLSR3JAPDAACBUPT7QLKBU" Invoke="true">
            <xsc:Presentation>throwableToString</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>(ex)));
                }
            }
        } finally {
            managersCur.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="pdcCursor____________________ mth_stmt_close_______________" Invoke="true">
            <xsc:Presentation>close</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>();
        }
    }
}

private </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="451" Path="xsdMKFYBAQ3WZFKFLNWZGRHCSPJOQ" extStr="NotifyRq.MetricType">
            <xsc:Presentation>SnmpUnitServiceXsd:NotifyRq.MetricType</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> getNotifyForType(final </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="411" Path="aec2H6SULJHXJGFVIS6UVHRWQS4AM">
            <xsc:Presentation>MetricType</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> type) {
    for (</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="451" Path="xsdMKFYBAQ3WZFKFLNWZGRHCSPJOQ" extStr="NotifyRq.MetricType">
            <xsc:Presentation>SnmpUnitServiceXsd:NotifyRq.MetricType</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> xType : notifyRq.MetricTypeList) {
        if (xType.Id == type.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec2H6SULJHXJGFVIS6UVHRWQS4AM colNS4TO66OSNH3DCZS64EDNL7VDU" Invoke="true">
            <xsc:Presentation>id</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>) {
            return xType;
        }
    }
    </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="451" Path="xsdMKFYBAQ3WZFKFLNWZGRHCSPJOQ" extStr="NotifyRq.MetricType">
            <xsc:Presentation>SnmpUnitServiceXsd:NotifyRq.MetricType</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> xType = notifyRq.addNewMetricType();
    xType.Id = type.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec2H6SULJHXJGFVIS6UVHRWQS4AM colNS4TO66OSNH3DCZS64EDNL7VDU" Invoke="true">
            <xsc:Presentation>id</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>;
    xType.Kind = type.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec2H6SULJHXJGFVIS6UVHRWQS4AM col2JJNBDFWIVG47OCFOCMCXVBFXI" Invoke="true">
            <xsc:Presentation>kind</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>;
    xType.Title = type.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec2H6SULJHXJGFVIS6UVHRWQS4AM colKK3G7VOVNBESRPNV7SEYWFKLDQ" Invoke="true">
            <xsc:Presentation>title</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>;
    return xType;
}

private void addNotify(</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="411" Path="aec2H6SULJHXJGFVIS6UVHRWQS4AM">
            <xsc:Presentation>MetricType</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> type, </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="2">
            <xsc:Presentation>Int</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> stateId, </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="2" Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4">
            <xsc:Presentation>Arte::EventSeverity</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> oldSeverity, </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="2" Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4">
            <xsc:Presentation>Arte::EventSeverity</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> newSeverity, </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="12">
            <xsc:Presentation>DateTime</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> begTime, </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="12">
            <xsc:Presentation>DateTime</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> endTime, String valueAsStr, final long changeTimeMillis) {
    addNotifyImpl(type, stateId, oldSeverity, newSeverity, begTime, endTime, valueAsStr, changeTimeMillis, false);
}

private void addNotifyEscalation(</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="411" Path="aec2H6SULJHXJGFVIS6UVHRWQS4AM">
            <xsc:Presentation>MetricType</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> type, </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="2">
            <xsc:Presentation>Int</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> stateId, </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="2" Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4">
            <xsc:Presentation>Arte::EventSeverity</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> oldSeverity, </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="2" Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4">
            <xsc:Presentation>Arte::EventSeverity</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> newSeverity, </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="12">
            <xsc:Presentation>DateTime</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> begTime, </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="12">
            <xsc:Presentation>DateTime</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> endTime, String valueAsStr, final long changeTimeMillis) {
    addNotifyImpl(type, stateId, oldSeverity, newSeverity, begTime, endTime, valueAsStr, changeTimeMillis, true);
}


private void addNotifyImpl(</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="411" Path="aec2H6SULJHXJGFVIS6UVHRWQS4AM">
            <xsc:Presentation>MetricType</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> type, </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="2">
            <xsc:Presentation>Int</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> stateId, </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="2" Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4">
            <xsc:Presentation>Arte::EventSeverity</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> oldSeverity, </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="2" Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4">
            <xsc:Presentation>Arte::EventSeverity</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> newSeverity, </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="12">
            <xsc:Presentation>DateTime</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> begTime, </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="12">
            <xsc:Presentation>DateTime</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> endTime, String valueAsStr, final long changeTimeMillis, final boolean isEscalation) {
    if (type.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec2H6SULJHXJGFVIS6UVHRWQS4AM colJERRR2BH2ZD2XGDYMYUS67KOKY" Invoke="true">
            <xsc:Presentation>minSeverityForSnmpNtfy</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.Value.longValue() > newSeverity.Value.longValue()) {
        return;
    }
    </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="451" Path="xsdMKFYBAQ3WZFKFLNWZGRHCSPJOQ" extStr="NotifyRq.MetricType.MetricState">
            <xsc:Presentation>SnmpUnitServiceXsd:NotifyRq.MetricType.MetricState</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> state = getNotifyForType(type).addNewMetricState();
    state.Id = stateId;
    state.BegTime = begTime;
    state.EndTime = endTime;
    if (oldSeverity != null) {
        state.OldSeverity = oldSeverity.Value;
    }
    state.NewSeverity = newSeverity.Value;
    state.ValueAsString = valueAsStr;
    state.ChangeTime = new </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="12">
            <xsc:Presentation>DateTime</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>(changeTimeMillis);
    state.IsEscalation = isEscalation;
}

private void processWarning(</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="411" Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y">
            <xsc:Presentation>MetricState</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> metricState, ControlState state) {
    if (state.lastSeverity == </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4 aci52AUJTYZVPORDJHCAANE2UAFXA" Invoke="true">
            <xsc:Presentation>Arte::EventSeverity:Event</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> || (state.lastActionMask.contains(</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acs2EBGYIV32NFOVGWTTGKNZDPO6Y aciL3L2VF2Z35HV5MXBQPC5CNEVUY" Invoke="true">
            <xsc:Presentation>MetricControlAction:ReportError</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>))) {
        state.lastWarnTime = new </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="12">
            <xsc:Presentation>DateTime</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>(state.valueSetupTime);
        state.lastWarnVal = state.saResult.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="adc7V2TPZWXYJB6FIMONPCW2S7FRA mth7VWIEKVODNAWBNGVD3CITZVJDE" Invoke="true">
            <xsc:Presentation>getValue</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>();
    }
    if (state.lastSeverity == </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4 aci5WAUJTYZVPORDJHCAANE2UAFXA" Invoke="true">
            <xsc:Presentation>Arte::EventSeverity:Error</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>) {
        if (state.type == </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="411" Path="adcA6UCGHAHARFOVLIO26LS4ULQPQ">
            <xsc:Presentation>MetricValueTypeEnum</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.EVENT) {
            reportError(metricState, state, state.lastActionMask);
        }
        if (state.lastActionMask.contains(</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acs2EBGYIV32NFOVGWTTGKNZDPO6Y aciL3L2VF2Z35HV5MXBQPC5CNEVUY" Invoke="true">
            <xsc:Presentation>MetricControlAction:ReportError</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>)) {
            state.lastWarnTime = new </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="12">
            <xsc:Presentation>DateTime</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>(state.valueSetupTime);
            state.lastWarnVal = state.saResult.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="adc7V2TPZWXYJB6FIMONPCW2S7FRA mth7VWIEKVODNAWBNGVD3CITZVJDE" Invoke="true">
            <xsc:Presentation>getValue</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>();
            final String valStr = getValueAsString(state, metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y col5VYMKQSPWFH5NBXRBWAN2VFEN4" Invoke="true">
            <xsc:Presentation>metricType</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>);
            </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="411" Path="pdcTrace_____________________">
            <xsc:Presentation>Arte::Trace</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="pdcTrace_____________________ mthUALS3BVVSTNRDDXBABIFNQAAAE" Invoke="true">
            <xsc:Presentation>put</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>(metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y col5VYMKQSPWFH5NBXRBWAN2VFEN4" Invoke="true">
            <xsc:Presentation>metricType</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec2H6SULJHXJGFVIS6UVHRWQS4AM mthINDOWT6J25F6BHK2JI5BYNQ2RA" Invoke="true">
            <xsc:Presentation>getReturnToWarningCode</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>(), state.traceArgs.get(valStr, state.valueSetupTime));
            addNotify(metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y col5VYMKQSPWFH5NBXRBWAN2VFEN4" Invoke="true">
            <xsc:Presentation>metricType</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>, metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y colAJKGMNFACVDP3NKSFE74FBBJWI" Invoke="true">
            <xsc:Presentation>id</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>, </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4 aci5WAUJTYZVPORDJHCAANE2UAFXA" Invoke="true">
            <xsc:Presentation>Arte::EventSeverity:Error</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>, </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4 aci6CAUJTYZVPORDJHCAANE2UAFXA" Invoke="true">
            <xsc:Presentation>Arte::EventSeverity:Warning</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>, metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y col74ZDIJTPCRBI7KJOX377SQ6KVE" Invoke="true">
            <xsc:Presentation>begTime</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>, metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y colZN2B3DUPUBFXVP2Y6YPM4RPSV4" Invoke="true">
            <xsc:Presentation>endTime</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>, valStr, state.valueSetupTime);
            state.newActionMask.add(</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acs2EBGYIV32NFOVGWTTGKNZDPO6Y aciLGYY4V75AVB2BKPO5FTAZP5SY4" Invoke="true">
            <xsc:Presentation>MetricControlAction:ReportReturnToWarning</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>);
        }
    }
    reportWarning(metricState, state, state.newActionMask);
}

private void processError(</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="411" Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y">
            <xsc:Presentation>MetricState</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> metricState, ControlState state) {
    if (state.lastSeverity == </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4 aci52AUJTYZVPORDJHCAANE2UAFXA" Invoke="true">
            <xsc:Presentation>Arte::EventSeverity:Event</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>) {
        state.lastWarnTime = new </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="12">
            <xsc:Presentation>DateTime</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>(state.valueSetupTime);
        state.lastWarnVal = state.saResult.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="adc7V2TPZWXYJB6FIMONPCW2S7FRA mth7VWIEKVODNAWBNGVD3CITZVJDE" Invoke="true">
            <xsc:Presentation>getValue</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>();
    }
    if (state.lastSeverity != </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4 aci5WAUJTYZVPORDJHCAANE2UAFXA" Invoke="true">
            <xsc:Presentation>Arte::EventSeverity:Error</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>) {
        state.lastErrTime = new </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="12">
            <xsc:Presentation>DateTime</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>(state.valueSetupTime);
        state.lastErrVal = state.saResult.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="adc7V2TPZWXYJB6FIMONPCW2S7FRA mth7VWIEKVODNAWBNGVD3CITZVJDE" Invoke="true">
            <xsc:Presentation>getValue</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>();
    }
    reportError(metricState, state, state.newActionMask);
}

private void processEvent(</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="411" Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y">
            <xsc:Presentation>MetricState</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> metricState, ControlState state) {
    if (state.type == </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="411" Path="adcA6UCGHAHARFOVLIO26LS4ULQPQ">
            <xsc:Presentation>MetricValueTypeEnum</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.EVENT) {
        if (state.lastSeverity == </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4 aci5WAUJTYZVPORDJHCAANE2UAFXA" Invoke="true">
            <xsc:Presentation>Arte::EventSeverity:Error</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>) {
            reportError(metricState, state, state.lastActionMask);
        }
        if (state.lastSeverity == </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4 aci6CAUJTYZVPORDJHCAANE2UAFXA" Invoke="true">
            <xsc:Presentation>Arte::EventSeverity:Warning</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>) {
            reportWarning(metricState, state, state.lastActionMask);
        }
    }
    if ((state.lastActionMask.get() &amp; WAS_ABNORMAL_MASK) != 0) {
        final String valStr = getValueAsString(state, metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y col5VYMKQSPWFH5NBXRBWAN2VFEN4" Invoke="true">
            <xsc:Presentation>metricType</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>);
        </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="411" Path="pdcTrace_____________________">
            <xsc:Presentation>Arte::Trace</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="pdcTrace_____________________ mthUALS3BVVSTNRDDXBABIFNQAAAE" Invoke="true">
            <xsc:Presentation>put</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>(metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y col5VYMKQSPWFH5NBXRBWAN2VFEN4" Invoke="true">
            <xsc:Presentation>metricType</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec2H6SULJHXJGFVIS6UVHRWQS4AM mth5WR56WU3O5FIFJXLAI6I266MRQ" Invoke="true">
            <xsc:Presentation>getReturnToNormalCode</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>(), state.traceArgs.get(valStr, state.valueSetupTime));
        addNotify(metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y col5VYMKQSPWFH5NBXRBWAN2VFEN4" Invoke="true">
            <xsc:Presentation>metricType</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>, metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y colAJKGMNFACVDP3NKSFE74FBBJWI" Invoke="true">
            <xsc:Presentation>id</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>, (state.lastActionMask.get() &amp; ERROR_LEVEL_MASK) > 0 ? </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4 aci5WAUJTYZVPORDJHCAANE2UAFXA" Invoke="true">
            <xsc:Presentation>Arte::EventSeverity:Error</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> : </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4 aci6CAUJTYZVPORDJHCAANE2UAFXA" Invoke="true">
            <xsc:Presentation>Arte::EventSeverity:Warning</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>, </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4 aci52AUJTYZVPORDJHCAANE2UAFXA" Invoke="true">
            <xsc:Presentation>Arte::EventSeverity:Event</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>, metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y col74ZDIJTPCRBI7KJOX377SQ6KVE" Invoke="true">
            <xsc:Presentation>begTime</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>, metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y colZN2B3DUPUBFXVP2Y6YPM4RPSV4" Invoke="true">
            <xsc:Presentation>endTime</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>, valStr, state.valueSetupTime);
        state.newActionMask.add(</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acs2EBGYIV32NFOVGWTTGKNZDPO6Y aciNTYQFKLT7BEKTAOG26ZHMVCXIA" Invoke="true">
            <xsc:Presentation>MetricControlAction:ReportReturnToNormal</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>);
    }
}

private void reportWarning(</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="411" Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y">
            <xsc:Presentation>MetricState</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> metricState, ControlState state, ActionMask maskToUpdate) {
    if (!state.lastActionMask.contains(</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acs2EBGYIV32NFOVGWTTGKNZDPO6Y aciBRVMWOBBONFRRK2S63SZJDGVWY" Invoke="true">
            <xsc:Presentation>MetricControlAction:ReportWarning</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>)
            &amp;&amp; !state.lastActionMask.contains(</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acs2EBGYIV32NFOVGWTTGKNZDPO6Y aciBBBO74WL2NEMZI47NQO5NWGDAI" Invoke="true">
            <xsc:Presentation>MetricControlAction:ReportWarningEscalation</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>)
            &amp;&amp; !state.lastActionMask.contains(</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acs2EBGYIV32NFOVGWTTGKNZDPO6Y aciLGYY4V75AVB2BKPO5FTAZP5SY4" Invoke="true">
            <xsc:Presentation>MetricControlAction:ReportReturnToWarning</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>)
            &amp;&amp; !state.newActionMask.contains(</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acs2EBGYIV32NFOVGWTTGKNZDPO6Y aciLGYY4V75AVB2BKPO5FTAZP5SY4" Invoke="true">
            <xsc:Presentation>MetricControlAction:ReportReturnToWarning</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>)
            &amp;&amp; state.controlTime - state.lastWarnTime.getTime() >= state.warnDelay) {
        final String valStr = getValueAsString(state, metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y col5VYMKQSPWFH5NBXRBWAN2VFEN4" Invoke="true">
            <xsc:Presentation>metricType</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>);
        </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="411" Path="pdcTrace_____________________">
            <xsc:Presentation>Arte::Trace</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="pdcTrace_____________________ mthUALS3BVVSTNRDDXBABIFNQAAAE" Invoke="true">
            <xsc:Presentation>put</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>(metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y col5VYMKQSPWFH5NBXRBWAN2VFEN4" Invoke="true">
            <xsc:Presentation>metricType</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec2H6SULJHXJGFVIS6UVHRWQS4AM mthS2WHP4ZYBJDVLBUCW4G625IIZY" Invoke="true">
            <xsc:Presentation>getWarningCode</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>(), state.traceArgs.get(valStr, state.lastWarnTime.getTime()));
        addNotify(metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y col5VYMKQSPWFH5NBXRBWAN2VFEN4" Invoke="true">
            <xsc:Presentation>metricType</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>, metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y colAJKGMNFACVDP3NKSFE74FBBJWI" Invoke="true">
            <xsc:Presentation>id</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>, </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4 aci52AUJTYZVPORDJHCAANE2UAFXA" Invoke="true">
            <xsc:Presentation>Arte::EventSeverity:Event</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>, </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4 aci6CAUJTYZVPORDJHCAANE2UAFXA" Invoke="true">
            <xsc:Presentation>Arte::EventSeverity:Warning</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>, metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y col74ZDIJTPCRBI7KJOX377SQ6KVE" Invoke="true">
            <xsc:Presentation>begTime</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>, metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y colZN2B3DUPUBFXVP2Y6YPM4RPSV4" Invoke="true">
            <xsc:Presentation>endTime</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>, valStr, state.lastWarnTime.Time);
        maskToUpdate.add(</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acs2EBGYIV32NFOVGWTTGKNZDPO6Y aciBRVMWOBBONFRRK2S63SZJDGVWY" Invoke="true">
            <xsc:Presentation>MetricControlAction:ReportWarning</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>);
    }
    if (state.escDelay > 0 &amp;&amp; !state.lastActionMask.contains(</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acs2EBGYIV32NFOVGWTTGKNZDPO6Y aciBBBO74WL2NEMZI47NQO5NWGDAI" Invoke="true">
            <xsc:Presentation>MetricControlAction:ReportWarningEscalation</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>) &amp;&amp; state.controlTime - state.lastWarnTime.getTime() >= state.warnDelay + state.escDelay) {
        state.traceArgs.totalDelaySec = (state.warnDelay + state.escDelay) / 1000;
        final long reportTimeMillis = state.lastWarnTime.getTime() + state.warnDelay + state.escDelay;
        </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="411" Path="pdcTrace_____________________">
            <xsc:Presentation>Arte::Trace</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="pdcTrace_____________________ mthUALS3BVVSTNRDDXBABIFNQAAAE" Invoke="true">
            <xsc:Presentation>put</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>(metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y col5VYMKQSPWFH5NBXRBWAN2VFEN4" Invoke="true">
            <xsc:Presentation>metricType</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec2H6SULJHXJGFVIS6UVHRWQS4AM mthWUU2HGDSLFAS3J6FA47N42EDVE" Invoke="true">
            <xsc:Presentation>getEscalationCode</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>(), state.traceArgs.get(getNumAsString(new </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="11">
            <xsc:Presentation>Num</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>(state.traceArgs.totalDelaySec)), reportTimeMillis));
        addNotifyEscalation(metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y col5VYMKQSPWFH5NBXRBWAN2VFEN4" Invoke="true">
            <xsc:Presentation>metricType</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>, metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y colAJKGMNFACVDP3NKSFE74FBBJWI" Invoke="true">
            <xsc:Presentation>id</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>, </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4 aci6CAUJTYZVPORDJHCAANE2UAFXA" Invoke="true">
            <xsc:Presentation>Arte::EventSeverity:Warning</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>, </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4 aci5WAUJTYZVPORDJHCAANE2UAFXA" Invoke="true">
            <xsc:Presentation>Arte::EventSeverity:Error</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>, metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y col74ZDIJTPCRBI7KJOX377SQ6KVE" Invoke="true">
            <xsc:Presentation>begTime</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>, metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y colZN2B3DUPUBFXVP2Y6YPM4RPSV4" Invoke="true">
            <xsc:Presentation>endTime</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>, getValueAsString(state, metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y col5VYMKQSPWFH5NBXRBWAN2VFEN4" Invoke="true">
            <xsc:Presentation>metricType</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>), reportTimeMillis);
        maskToUpdate.add(</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acs2EBGYIV32NFOVGWTTGKNZDPO6Y aciBBBO74WL2NEMZI47NQO5NWGDAI" Invoke="true">
            <xsc:Presentation>MetricControlAction:ReportWarningEscalation</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>);
    }
}

private void reportError(</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="411" Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y">
            <xsc:Presentation>MetricState</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> metricState, ControlState state, ActionMask maskToUpdate) {
    if (!state.lastActionMask.contains(</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acs2EBGYIV32NFOVGWTTGKNZDPO6Y aciL3L2VF2Z35HV5MXBQPC5CNEVUY" Invoke="true">
            <xsc:Presentation>MetricControlAction:ReportError</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>) &amp;&amp; state.controlTime - state.lastErrTime.Time >= state.errorDelay) {
        final String valStr = getValueAsString(state, metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y col5VYMKQSPWFH5NBXRBWAN2VFEN4" Invoke="true">
            <xsc:Presentation>metricType</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>);
        </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="411" Path="pdcTrace_____________________">
            <xsc:Presentation>Arte::Trace</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="pdcTrace_____________________ mthUALS3BVVSTNRDDXBABIFNQAAAE" Invoke="true">
            <xsc:Presentation>put</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>(metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y col5VYMKQSPWFH5NBXRBWAN2VFEN4" Invoke="true">
            <xsc:Presentation>metricType</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec2H6SULJHXJGFVIS6UVHRWQS4AM mth6N5WAYWUEBEM3GFV6PIFCDH5VU" Invoke="true">
            <xsc:Presentation>getErrorCode</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>(), state.traceArgs.get(valStr, state.lastErrTime.Time));
        addNotify(metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y col5VYMKQSPWFH5NBXRBWAN2VFEN4" Invoke="true">
            <xsc:Presentation>metricType</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>, metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y colAJKGMNFACVDP3NKSFE74FBBJWI" Invoke="true">
            <xsc:Presentation>id</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>, (state.lastActionMask.get() &amp; WARNING_LEVEL_MASK) > 0 ? </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4 aci6CAUJTYZVPORDJHCAANE2UAFXA" Invoke="true">
            <xsc:Presentation>Arte::EventSeverity:Warning</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> : </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4 aci52AUJTYZVPORDJHCAANE2UAFXA" Invoke="true">
            <xsc:Presentation>Arte::EventSeverity:Event</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>, </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4 aci5WAUJTYZVPORDJHCAANE2UAFXA" Invoke="true">
            <xsc:Presentation>Arte::EventSeverity:Error</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>, metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y col74ZDIJTPCRBI7KJOX377SQ6KVE" Invoke="true">
            <xsc:Presentation>begTime</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>, metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y colZN2B3DUPUBFXVP2Y6YPM4RPSV4" Invoke="true">
            <xsc:Presentation>endTime</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>, valStr, state.lastErrTime.Time);
        maskToUpdate.add(</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acs2EBGYIV32NFOVGWTTGKNZDPO6Y aciL3L2VF2Z35HV5MXBQPC5CNEVUY" Invoke="true">
            <xsc:Presentation>MetricControlAction:ReportError</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>);
    }
}

private void resetControlState(final ControlState state, final </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="411" Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y">
            <xsc:Presentation>MetricState</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> metricState) {
    if (metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y prdUWG2SNDX7BGGRLLVHKSV5VMEYE" Invoke="true">
            <xsc:Presentation>controlData</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aecQZWAUN4CFZF53OBH7NVJCP535Q colNOKDH37F3RH6TGGXRHIQ5PVLEE" Invoke="true">
            <xsc:Presentation>lastControlSeverity</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> != null) {
        state.lastSeverity = </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="2" Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4">
            <xsc:Presentation>Arte::EventSeverity</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.getForValue(metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y prdUWG2SNDX7BGGRLLVHKSV5VMEYE" Invoke="true">
            <xsc:Presentation>controlData</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aecQZWAUN4CFZF53OBH7NVJCP535Q colNOKDH37F3RH6TGGXRHIQ5PVLEE" Invoke="true">
            <xsc:Presentation>lastControlSeverity</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>);
    } else {
        state.lastSeverity = </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4 aci52AUJTYZVPORDJHCAANE2UAFXA" Invoke="true">
            <xsc:Presentation>Arte::EventSeverity:Event</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>;
    }
    state.lastErrTime = metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y prdUWG2SNDX7BGGRLLVHKSV5VMEYE" Invoke="true">
            <xsc:Presentation>controlData</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aecQZWAUN4CFZF53OBH7NVJCP535Q colCHMIHLA6NVFNLFSIDPSO4RLS74" Invoke="true">
            <xsc:Presentation>lastErrorTime</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>;
    state.lastWarnTime = metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y prdUWG2SNDX7BGGRLLVHKSV5VMEYE" Invoke="true">
            <xsc:Presentation>controlData</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aecQZWAUN4CFZF53OBH7NVJCP535Q colML3Z2LRIGNCURCSPA42Z5MK5QE" Invoke="true">
            <xsc:Presentation>lastWarnTime</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>;
    state.lastErrVal = metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y prdUWG2SNDX7BGGRLLVHKSV5VMEYE" Invoke="true">
            <xsc:Presentation>controlData</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aecQZWAUN4CFZF53OBH7NVJCP535Q colJW2LSIY7RNGCRMEP5WZZFS3P4Q" Invoke="true">
            <xsc:Presentation>lastErrorVal</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>;
    state.lastWarnVal = metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y prdUWG2SNDX7BGGRLLVHKSV5VMEYE" Invoke="true">
            <xsc:Presentation>controlData</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aecQZWAUN4CFZF53OBH7NVJCP535Q colEJXXN7LBPBGEBKUQPK2FAT7ZXI" Invoke="true">
            <xsc:Presentation>lastWarnVal</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>;
    state.warnDelay = metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y col5VYMKQSPWFH5NBXRBWAN2VFEN4" Invoke="true">
            <xsc:Presentation>metricType</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec2H6SULJHXJGFVIS6UVHRWQS4AM colI5HMBXQKAZBVTJSJ5YVNSGCR5Y" Invoke="true">
            <xsc:Presentation>warnDelay</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> == null ? 0 : metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y col5VYMKQSPWFH5NBXRBWAN2VFEN4" Invoke="true">
            <xsc:Presentation>metricType</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec2H6SULJHXJGFVIS6UVHRWQS4AM colI5HMBXQKAZBVTJSJ5YVNSGCR5Y" Invoke="true">
            <xsc:Presentation>warnDelay</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.longValue() * 1000;
    state.errorDelay = metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y col5VYMKQSPWFH5NBXRBWAN2VFEN4" Invoke="true">
            <xsc:Presentation>metricType</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec2H6SULJHXJGFVIS6UVHRWQS4AM colNWD3JCD37ZDAVKKCLTUEPMO3TQ" Invoke="true">
            <xsc:Presentation>errorDelay</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> == null ? 0 : metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y col5VYMKQSPWFH5NBXRBWAN2VFEN4" Invoke="true">
            <xsc:Presentation>metricType</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec2H6SULJHXJGFVIS6UVHRWQS4AM colNWD3JCD37ZDAVKKCLTUEPMO3TQ" Invoke="true">
            <xsc:Presentation>errorDelay</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.longValue() * 1000;
    state.escDelay = metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y col5VYMKQSPWFH5NBXRBWAN2VFEN4" Invoke="true">
            <xsc:Presentation>metricType</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec2H6SULJHXJGFVIS6UVHRWQS4AM col4YKCVXTHZVETTGSLJZFJB6PPEY" Invoke="true">
            <xsc:Presentation>esclationDelay</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> == null ? -1 : metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y col5VYMKQSPWFH5NBXRBWAN2VFEN4" Invoke="true">
            <xsc:Presentation>metricType</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec2H6SULJHXJGFVIS6UVHRWQS4AM col4YKCVXTHZVETTGSLJZFJB6PPEY" Invoke="true">
            <xsc:Presentation>esclationDelay</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.longValue() * 1000;
    state.lastControlTime = metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y prdUWG2SNDX7BGGRLLVHKSV5VMEYE" Invoke="true">
            <xsc:Presentation>controlData</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aecQZWAUN4CFZF53OBH7NVJCP535Q colSFIUZXGFHRCZLDHOABMOO7UCGE" Invoke="true">
            <xsc:Presentation>lastControlTime</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> != null ? metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y prdUWG2SNDX7BGGRLLVHKSV5VMEYE" Invoke="true">
            <xsc:Presentation>controlData</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aecQZWAUN4CFZF53OBH7NVJCP535Q colSFIUZXGFHRCZLDHOABMOO7UCGE" Invoke="true">
            <xsc:Presentation>lastControlTime</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.Time : -1;
    state.lastActionMask.set(metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y prdUWG2SNDX7BGGRLLVHKSV5VMEYE" Invoke="true">
            <xsc:Presentation>controlData</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aecQZWAUN4CFZF53OBH7NVJCP535Q colAXL3DKGODVC3DKU3BVFGAEZKTQ" Invoke="true">
            <xsc:Presentation>lastControlActionMask</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> != null ? metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y prdUWG2SNDX7BGGRLLVHKSV5VMEYE" Invoke="true">
            <xsc:Presentation>controlData</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aecQZWAUN4CFZF53OBH7NVJCP535Q colAXL3DKGODVC3DKU3BVFGAEZKTQ" Invoke="true">
            <xsc:Presentation>lastControlActionMask</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.longValue() : 0);
    state.lastProcessedHistId = metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y prdUWG2SNDX7BGGRLLVHKSV5VMEYE" Invoke="true">
            <xsc:Presentation>controlData</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aecQZWAUN4CFZF53OBH7NVJCP535Q colLUG2MUPCGBBXTKKKB62IET7HZM" Invoke="true">
            <xsc:Presentation>lastProcessedHistId</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>;
    state.begVal = metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y colVEBTRZIJMJF4TOWNB5PIPDYA5M" Invoke="true">
            <xsc:Presentation>begVal</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>;
    state.endVal = metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y colS6PS354Y5BHPHPHGOKRSUOZV5Q" Invoke="true">
            <xsc:Presentation>endVal</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>;
    state.avgVal = metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y colOGEYLUNXKFEAVNBPXV2DLLDEUM" Invoke="true">
            <xsc:Presentation>avgVal</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>;
    state.minVal = metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y col3BIXCHNDMFGR7JUU7XALKBE56U" Invoke="true">
            <xsc:Presentation>minVal</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>;
    state.maxVal = metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y colZC74COQVIBDVVEPBBQW5ABKCXU" Invoke="true">
            <xsc:Presentation>maxVal</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>;
    state.newActionMask.clear();
}

private void updateMetricState(final </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="411" Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y">
            <xsc:Presentation>MetricState</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> metricState, final ControlState state) {
    metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y prdUWG2SNDX7BGGRLLVHKSV5VMEYE" Invoke="true">
            <xsc:Presentation>controlData</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aecQZWAUN4CFZF53OBH7NVJCP535Q colNOKDH37F3RH6TGGXRHIQ5PVLEE" Invoke="true">
            <xsc:Presentation>lastControlSeverity</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> = state.lastSeverity != null ? state.lastSeverity.Value : </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4 aci52AUJTYZVPORDJHCAANE2UAFXA" Invoke="true">
            <xsc:Presentation>Arte::EventSeverity:Event</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.Value;
    metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y prdUWG2SNDX7BGGRLLVHKSV5VMEYE" Invoke="true">
            <xsc:Presentation>controlData</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aecQZWAUN4CFZF53OBH7NVJCP535Q colML3Z2LRIGNCURCSPA42Z5MK5QE" Invoke="true">
            <xsc:Presentation>lastWarnTime</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> = state.lastWarnTime;
    metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y prdUWG2SNDX7BGGRLLVHKSV5VMEYE" Invoke="true">
            <xsc:Presentation>controlData</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aecQZWAUN4CFZF53OBH7NVJCP535Q colCHMIHLA6NVFNLFSIDPSO4RLS74" Invoke="true">
            <xsc:Presentation>lastErrorTime</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> = state.lastErrTime;
    metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y prdUWG2SNDX7BGGRLLVHKSV5VMEYE" Invoke="true">
            <xsc:Presentation>controlData</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aecQZWAUN4CFZF53OBH7NVJCP535Q colEJXXN7LBPBGEBKUQPK2FAT7ZXI" Invoke="true">
            <xsc:Presentation>lastWarnVal</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> = state.lastWarnVal;
    metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y prdUWG2SNDX7BGGRLLVHKSV5VMEYE" Invoke="true">
            <xsc:Presentation>controlData</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aecQZWAUN4CFZF53OBH7NVJCP535Q colJW2LSIY7RNGCRMEP5WZZFS3P4Q" Invoke="true">
            <xsc:Presentation>lastErrorVal</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> = state.lastErrVal;
    metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y prdUWG2SNDX7BGGRLLVHKSV5VMEYE" Invoke="true">
            <xsc:Presentation>controlData</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aecQZWAUN4CFZF53OBH7NVJCP535Q colSFIUZXGFHRCZLDHOABMOO7UCGE" Invoke="true">
            <xsc:Presentation>lastControlTime</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> = state.lastControlTime > 0 ? new </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="12">
            <xsc:Presentation>DateTime</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>(state.lastControlTime) : null;
    metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y prdUWG2SNDX7BGGRLLVHKSV5VMEYE" Invoke="true">
            <xsc:Presentation>controlData</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aecQZWAUN4CFZF53OBH7NVJCP535Q colAXL3DKGODVC3DKU3BVFGAEZKTQ" Invoke="true">
            <xsc:Presentation>lastControlActionMask</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> = state.lastActionMask.get();
    metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y prdUWG2SNDX7BGGRLLVHKSV5VMEYE" Invoke="true">
            <xsc:Presentation>controlData</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aecQZWAUN4CFZF53OBH7NVJCP535Q colLUG2MUPCGBBXTKKKB62IET7HZM" Invoke="true">
            <xsc:Presentation>lastProcessedHistId</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> = state.lastProcessedHistId;
    metricState.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="pdcEntity____________________ mth5A5TVHUCNVHFXIT7FDJ75MILHE" Invoke="true">
            <xsc:Presentation>update</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>();
    </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="411" Path="pdcArte______________________">
            <xsc:Presentation>Arte::Arte</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="pdcArte______________________ mthH2FKAOYGRTNRDCISABIFNQAABA" Invoke="true">
            <xsc:Presentation>commit</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>();
}

private static class ActionMask {

    private long mask;

    private void clear() {
        this.mask = 0;
    }

    public long get() {
        return mask;
    }

    public void add(</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="2" Path="acs2EBGYIV32NFOVGWTTGKNZDPO6Y">
            <xsc:Presentation>MetricControlAction</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> action) {
        mask |= action.Value.longValue();
    }

    public boolean contains(</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="2" Path="acs2EBGYIV32NFOVGWTTGKNZDPO6Y">
            <xsc:Presentation>MetricControlAction</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> action) {
        return (mask &amp; action.longValue()) != 0;
    }

    public void set(long mask) {
        this.mask = mask;
    }
}

private static class TraceArguments {

    public static final java.text.DateFormat DATE_FORMAT = new java.text.SimpleDateFormat("yyyy-MM-dd-HH:mm:ss:SSS");
    private </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="411" Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y">
            <xsc:Presentation>MetricState</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> state;
    private </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="2">
            <xsc:Presentation>Int</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> totalDelaySec;

    public </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="221">
            <xsc:Presentation>ArrStr</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> get(</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="21">
            <xsc:Presentation>Str</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> value, long timeMillis) {
        final </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="221">
            <xsc:Presentation>ArrStr</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> result = new </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="221">
            <xsc:Presentation>ArrStr</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>();
        result.add(state.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y col5VYMKQSPWFH5NBXRBWAN2VFEN4" Invoke="true">
            <xsc:Presentation>metricType</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec2H6SULJHXJGFVIS6UVHRWQS4AM colNS4TO66OSNH3DCZS64EDNL7VDU" Invoke="true">
            <xsc:Presentation>id</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> + ") " + state.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y col5VYMKQSPWFH5NBXRBWAN2VFEN4" Invoke="true">
            <xsc:Presentation>metricType</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec2H6SULJHXJGFVIS6UVHRWQS4AM colKK3G7VOVNBESRPNV7SEYWFKLDQ" Invoke="true">
            <xsc:Presentation>title</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>);
        result.add(state.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y col5VYMKQSPWFH5NBXRBWAN2VFEN4" Invoke="true">
            <xsc:Presentation>metricType</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec2H6SULJHXJGFVIS6UVHRWQS4AM prdJHAQ5ULMWBAVTHGBDBL34ZHGME" Invoke="true">
            <xsc:Presentation>kindTitle</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>);
        result.add(value);
        result.add(state.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y col5VYMKQSPWFH5NBXRBWAN2VFEN4" Invoke="true">
            <xsc:Presentation>metricType</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec2H6SULJHXJGFVIS6UVHRWQS4AM colNS4TO66OSNH3DCZS64EDNL7VDU" Invoke="true">
            <xsc:Presentation>id</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.toString());
        result.add(state.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y col5VYMKQSPWFH5NBXRBWAN2VFEN4" Invoke="true">
            <xsc:Presentation>metricType</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec2H6SULJHXJGFVIS6UVHRWQS4AM col2JJNBDFWIVG47OCFOCMCXVBFXI" Invoke="true">
            <xsc:Presentation>kind</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.toString());
        result.add(state.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y colEEXFHX3OG5DRXHVGXLXN54ML5Q" Invoke="true">
            <xsc:Presentation>instanceId</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> == null ? "&lt;none>" : state.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y colEEXFHX3OG5DRXHVGXLXN54ML5Q" Invoke="true">
            <xsc:Presentation>instanceId</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.toString());
        result.add(state.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y col4NS2RGMIDNGC5GK5TWJ5XRLZDE" Invoke="true">
            <xsc:Presentation>unitId</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> == null ? "&lt;none>" : state.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y col4NS2RGMIDNGC5GK5TWJ5XRLZDE" Invoke="true">
            <xsc:Presentation>unitId</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.toString());
        result.add(DATE_FORMAT.format(new java.util.Date(timeMillis)));
        result.add(state.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec4QTN5SWVEFB55HPL32XOX6KZ7Y prdVSJ4MBIWJRH3FH6CZLCK2DB6YI" Invoke="true">
            <xsc:Presentation>sensorTitle</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>);
        return result;
    }
}

private static class ControlState {

    </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="2" Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4">
            <xsc:Presentation>Arte::EventSeverity</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> curSeverity;
    </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="2" Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4">
            <xsc:Presentation>Arte::EventSeverity</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> lastSeverity;
    </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="12">
            <xsc:Presentation>DateTime</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> lastErrTime;
    </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="12">
            <xsc:Presentation>DateTime</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> lastWarnTime;
    </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="2">
            <xsc:Presentation>Int</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> lastProcessedHistId;
    long controlTime = -1;
    long lastControlTime = -1;
    long valueSetupTime = -1;
    long warnDelay = 0;
    long errorDelay = 0;
    long escDelay = -1;
    </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="11">
            <xsc:Presentation>Num</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> avgVal;
    </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="11">
            <xsc:Presentation>Num</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> minVal;
    </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="11">
            <xsc:Presentation>Num</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> maxVal;
    </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="11">
            <xsc:Presentation>Num</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> begVal;
    </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="11">
            <xsc:Presentation>Num</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> endVal;
    </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="11">
            <xsc:Presentation>Num</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> lastErrVal;
    </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="11">
            <xsc:Presentation>Num</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> lastWarnVal;
    ActionMask lastActionMask = new ActionMask();
    ActionMask newActionMask = new ActionMask();
    </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="411" Path="adcA6UCGHAHARFOVLIO26LS4ULQPQ">
            <xsc:Presentation>MetricValueTypeEnum</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> type;
    </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="411" Path="adc7V2TPZWXYJB6FIMONPCW2S7FRA">
            <xsc:Presentation>SeverityAnalyzeResult</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> saResult;
    TraceArguments traceArgs;
}


private </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="411" Path="adc7V2TPZWXYJB6FIMONPCW2S7FRA">
            <xsc:Presentation>SeverityAnalyzeResult</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> calcSeverity(ControlState state, </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="411" Path="aec2H6SULJHXJGFVIS6UVHRWQS4AM">
            <xsc:Presentation>MetricType</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> type) {

    return </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="411" Path="adcLACMR6AAKVC6LIJSDSVWEJN6CA">
            <xsc:Presentation>MetricCommonUtils</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="adcLACMR6AAKVC6LIJSDSVWEJN6CA mthWLNZRZEZ7REPPKW3X7ECCTKPHY" Invoke="true">
            <xsc:Presentation>calcSeverity</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>(state.avgVal, state.minVal, state.maxVal, state.endVal, type.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec2H6SULJHXJGFVIS6UVHRWQS4AM colP5GRYC4WIRFDVCOV3AYNBAPYY4" Invoke="true">
            <xsc:Presentation>lowWarnVal</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>, type.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec2H6SULJHXJGFVIS6UVHRWQS4AM colXHO3TMONUZFWVLGCBFATASRCZ4" Invoke="true">
            <xsc:Presentation>highWarnVal</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>, type.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec2H6SULJHXJGFVIS6UVHRWQS4AM colSYQ72HEL2RD3VFYFLWVG6GFZEA" Invoke="true">
            <xsc:Presentation>lowErrorVal</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>, type.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec2H6SULJHXJGFVIS6UVHRWQS4AM col2RJUTHZLBFGDPHT5NR6S6APSYM" Invoke="true">
            <xsc:Presentation>highErrorVal</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>, type.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec2H6SULJHXJGFVIS6UVHRWQS4AM colPSRIBABNSJD45B3FB3UDKHACIM" Invoke="true">
            <xsc:Presentation>controlledValue</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>);
}

private static String getValueAsString(ControlState state, final </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="411" Path="aec2H6SULJHXJGFVIS6UVHRWQS4AM">
            <xsc:Presentation>MetricType</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> type) {
    if (state == null) {
        return "&lt;null>";
    }
    if (type.</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="aec2H6SULJHXJGFVIS6UVHRWQS4AM mthSK64PGWTZNFZFAJVJ5NHXBAC6M" Invoke="true">
            <xsc:Presentation>getKind</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>().isInDomain(</xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:IdReference Path="dmnHEII2X2EBJDKRCLMY7OZ7Q4U24 dmnQQWPNSU3FBH7ZPNRFXWJKZE7MQ">
            <xsc:Presentation>MetricValueTypeDomain:Statistic</xsc:Presentation>
          </xsc:IdReference>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java>)) {
        return "(min=" + getNumAsString(state.minVal) + ", max=" + getNumAsString(state.maxVal) + ", avg=" + getNumAsString(state.avgVal) + ")";
    } else if (state.avgVal != null) {
        return "(endVal=" + getNumAsString(state.endVal) + ", min=" + getNumAsString(state.minVal) + ", max=" + getNumAsString(state.maxVal) + ", avg=" + getNumAsString(state.avgVal) + ")";
    } else {
        return getNumAsString(state.endVal);
    }
}

private static String getNumAsString(final </xsc:Java>
        </xsc:Item>
        <xsc:Item>
          <xsc:TypeDeclaration TypeId="11">
            <xsc:Presentation>Num</xsc:Presentation>
          </xsc:TypeDeclaration>
        </xsc:Item>
        <xsc:Item>
          <xsc:Java> value) {
    String valueAsStr = value == null ? "&lt;null>" : String.format("%.2f", value.doubleValue());
    valueAsStr = valueAsStr.replace(",", ".");
    if (valueAsStr.endsWith(".00")) {
        valueAsStr = valueAsStr.substring(0, valueAsStr.length() - 3);
    }
    return valueAsStr;
}</xsc:Java>
        </xsc:Item>
      </Src>
    </Bodies>
    <MethodGroup Id="cmgYKYVG2EHXNB6PPQUIV3FPUWX7A" Name="Root"/>
    <PropertyGroup Id="cpg67URJKYT5ZCTXMW4AXALSPZZWM" Name="Root"/>
    <Properties/>
    <Methods>
      <Method Id="mthN36NOGMSW5EGZIX2JAVCBWM2RU" Name="execute" Nature="0" IsOverride="true">
        <AccessRules/>
        <Parameters>
          <Parameter Name="prevExecTime" Id="mprYV5N6MXCRRE2BIAIJSWP3CXDRM">
            <Type TypeId="12"/>
          </Parameter>
          <Parameter Name="curExecTime" Id="mprUB7QR4RQG5HPNLERHYHS5H6XVA">
            <Type TypeId="12"/>
          </Parameter>
        </Parameters>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>doExecute(prevExecTime, curExecTime);</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthDMRMHQSWFBAVVEURXAVJA7MAYY" Name="getMetricType" Nature="0" IsOverride="false">
        <AccessRules Access="2" IsFinal="true" IsPublished="false"/>
        <Parameters>
          <Parameter Name="metricType" Id="mprUWYQ7NC3HJHDZKR4QUAN3PWDPI">
            <Type TypeId="411" Path="aec2H6SULJHXJGFVIS6UVHRWQS4AM"/>
          </Parameter>
        </Parameters>
        <ReturnType TypeId="411" Path="adcA6UCGHAHARFOVLIO26LS4ULQPQ"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21" Path="acsJW5X3HYYBFFT3LECMFTSPIZYQE"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> t = metricType.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aec2H6SULJHXJGFVIS6UVHRWQS4AM mthIT2CW4S27RB3XNEN22I7VDSY74" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();
if (t == </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="acsJW5X3HYYBFFT3LECMFTSPIZYQE aciL47VGDVATZDLBORQBGLS37I77Y" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> || t == </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="acsJW5X3HYYBFFT3LECMFTSPIZYQE aciE2VEVSQY2VBSLP7AEKW5AWFJUI" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>) 
    return </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="adcA6UCGHAHARFOVLIO26LS4ULQPQ"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.EVENT;

if(t == </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="acsJW5X3HYYBFFT3LECMFTSPIZYQE aciDVG6HS76WNHNBKDPWNNTRSCMSU" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>) 
    return </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="adcA6UCGHAHARFOVLIO26LS4ULQPQ"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.STATISTIC;

return null;</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthKIF62UYHLRDRPPGLIIMJRLXSUI" Name="isSingletone" Nature="0" IsOverride="true">
        <AccessRules/>
        <ReturnType TypeId="401" extStr="boolean"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>return true;</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
    </Methods>
    <Entity EntityId="tblWZB7K4HLJPOBDCIUAALOMT5GDM"/>
    <Presentations ObjectTitleId="mlsBTMGAMCIURHPTPJUHT33ZJ6KGY">
      <ClassCatalogs>
        <ClassCatalog Id="eccVXWRKQLYJTOBDCIVAALOMT5GDM" Name="Default">
          <ClassRef TopicId="cctTU4RQWDDDZHDXKTRWIAPN7O6P4" Order="140.0"/>
        </ClassCatalog>
      </ClassCatalogs>
    </Presentations>
    <Extends TypeId="411" Path="aclZDLN466RV5FE3BQIWSX56ZAETQ"/>
  </AdsClassDefinition>
</AdsDefinition>