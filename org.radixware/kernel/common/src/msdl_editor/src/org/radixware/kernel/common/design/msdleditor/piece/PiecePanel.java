/*
 * Copyright (c) 2008-2015, Compass Plus Limited. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License,
 * v. 2.0. If a copy of the MPL was not distributed with this file, You can
 * obtain one at http://mozilla.org/MPL/2.0/. This Source Code is distributed
 * WITHOUT ANY WARRANTY; including any implied warranties but not limited to
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * Mozilla Public License, v. 2.0. for more details.
 */

/*
 * PiecePanel.java
 *
 * Created on 18.03.2009, 13:48:26
 */

package org.radixware.kernel.common.design.msdleditor.piece;

import java.awt.BorderLayout;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.BorderFactory;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.border.TitledBorder;
import org.radixware.kernel.common.design.msdleditor.AbstractEditItem;
import org.radixware.kernel.common.msdl.fields.AbstractFieldModel;
import org.radixware.kernel.common.design.msdleditor.enums.EPieceType;
import org.radixware.kernel.common.msdl.fields.IntFieldModel;
import org.radixware.schemas.msdl.Piece;


public class PiecePanel extends AbstractEditItem {

    private boolean opened = false;
    private JPanel panel = null;
    private Piece piece;
    private AbstractFieldModel field;

    /** Creates new form PiecePanel */
    public PiecePanel() {
        initComponents();
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        model.addElement(EPieceType.NONE);
        model.addElement(EPieceType.FIXED_LEN);
        model.addElement(EPieceType.SEPARATED);
        model.addElement(EPieceType.EMBEDDED_LEN);
        typeCombo.setModel(model);

        ArrayList<JLabel> l = new ArrayList<JLabel>();
        l.add(jLabelType);
        ArrayList<JComponent> e = new ArrayList<JComponent>();
        e.add(typeCombo);
        //DefaultLayout.doLayout(upperPanel, l, e,false);
    }

    public void open(AbstractFieldModel field, Piece piece) {
        super.open(field.getMsdlField());
        opened = false;
        this.field = field;
        this.piece = piece;
        addPanel();
        update();
        opened = true;
    }

    @Override
    public void update() {
        opened = false;
        typeCombo.setSelectedItem(EPieceType.getType(piece));
        opened = true;
        super.update();
    }

    public void setModel(ComboBoxModel model) {
        typeCombo.setModel(model);
    }

    private void addPanel() {
        middlePanel.removeAll();
        //middlePanel.repaint();
        panel = null;
        if (piece.isSetFixedLen()) {
            FixedLenPanel fPanel = new FixedLenPanel();
            fPanel.open(field, piece.getFixedLen());
            panel = fPanel;
        }
        if (piece.isSetSeparated()) {
            SeparatedPanel sPanel = new SeparatedPanel();
            sPanel.open(field, piece.getSeparated());
            panel = sPanel;
        }
        if (piece.isSetEmbeddedLen()) {
            EmbeddedLenPanel ePanel = new EmbeddedLenPanel();
            IntFieldModel intModel = new IntFieldModel(field.getMsdlField(), piece.getEmbeddedLen());
            ePanel.open(intModel, piece.getEmbeddedLen());
//            ePanel.open(field, piece.getEmbeddedLen());
            panel = ePanel;
        }

        if (panel != null) {
            middlePanel.add(panel,BorderLayout.CENTER);
            middlePanel.revalidate();
            revalidate();
        }
    }

    public void setTitle(String title) {
        ((TitledBorder)getBorder()).setTitle(title);
    }
    
    void removePanel() {
        if (panel != null) {
            middlePanel.remove(panel);
            panel = null;
            repaint();
        }
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        upperPanel = new javax.swing.JPanel();
        jLabelType = new javax.swing.JLabel();
        typeCombo = new javax.swing.JComboBox();
        middlePanel = new javax.swing.JPanel();

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/radixware/kernel/common/design/msdleditor/field/panel/Bundle"); // NOI18N
        setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("PIECE"))); // NOI18N
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.PAGE_AXIS));

        upperPanel.setPreferredSize(new java.awt.Dimension(800, 30));

        jLabelType.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelType.setText("Type:");

        typeCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        typeCombo.setPreferredSize(new java.awt.Dimension(100, 24));
        typeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeComboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout upperPanelLayout = new javax.swing.GroupLayout(upperPanel);
        upperPanel.setLayout(upperPanelLayout);
        upperPanelLayout.setHorizontalGroup(
            upperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(upperPanelLayout.createSequentialGroup()
                .addComponent(jLabelType)
                .addGap(0, 0, 0)
                .addComponent(typeCombo, 0, 260, Short.MAX_VALUE))
        );
        upperPanelLayout.setVerticalGroup(
            upperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(upperPanelLayout.createSequentialGroup()
                .addGroup(upperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(typeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelType))
                .addGap(6, 6, 6))
        );

        add(upperPanel);

        middlePanel.setName(""); // NOI18N
        middlePanel.setLayout(new java.awt.BorderLayout());
        add(middlePanel);
    }// </editor-fold>//GEN-END:initComponents

    private void typeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeComboActionPerformed
        if (!opened)
            return;
        removePanel();
        if (piece.isSetBerTLV()) {
            piece.unsetBerTLV();
        }
        if (piece.isSetFixedLen()) {
            piece.unsetFixedLen();
        }
        if (piece.isSetSeparated()) {
            piece.unsetSeparated();
        }
        if (piece.isSetEmbeddedLen()) {
            piece.unsetEmbeddedLen();
        }
        createPanel();
        field.setModified();
    }//GEN-LAST:event_typeComboActionPerformed

    public void createPanel() {
        EPieceType type = (EPieceType)typeCombo.getSelectedItem();
        switch (type) {
            case FIXED_LEN:
                piece.addNewFixedLen().setLen(Long.valueOf(1));
                break;
            case SEPARATED:
                piece.addNewSeparated();
                break;
            case BERTLV:
                piece.addNewBerTLV();
                break;
            case EMBEDDED_LEN:
                piece.addNewEmbeddedLen().addNewFixedLen().setLen(Long.valueOf(1));
                break;
        }
        addPanel();
    }
    
    @Override
    public void setControlEnabled(boolean state) {
        removePanel();
        if (panel != null) {
            panel.setEnabled(state);
        }
        typeCombo.setEnabled(state);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelType;
    private javax.swing.JPanel middlePanel;
    private javax.swing.JComboBox typeCombo;
    private javax.swing.JPanel upperPanel;
    // End of variables declaration//GEN-END:variables

}
