/*
 * Copyright (c) 2008-2015, Compass Plus Limited. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License,
 * v. 2.0. If a copy of the MPL was not distributed with this file, You can
 * obtain one at http://mozilla.org/MPL/2.0/. This Source Code is distributed
 * WITHOUT ANY WARRANTY; including any implied warranties but not limited to
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * Mozilla Public License, v. 2.0. for more details.
 */

/*
 * DateTimePanel.java
 *
 * Created on 03.12.2008, 17:49:16
 */

package org.radixware.kernel.common.design.msdleditor.field.panel;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComponent;
import javax.swing.JLabel;
import org.radixware.kernel.common.design.msdleditor.AbstractMsdlPanel;
import org.radixware.kernel.common.design.msdleditor.DefaultLayout;
import org.radixware.kernel.common.design.msdleditor.enums.EDateTimeFormat;
import org.radixware.kernel.common.msdl.enums.EEncoding;
import org.radixware.kernel.common.msdl.fields.AbstractFieldModel;
import org.radixware.kernel.common.msdl.fields.DateTimeFieldModel;
import org.radixware.schemas.msdl.DateTimeField;



public class DateTimePanel extends AbstractMsdlPanel implements ActionListener {

    private DateTimeField field;
    private AbstractFieldModel fieldModel;
    private boolean opened;
    /** Creates new form DateTimePanel */

    public DateTimePanel() {
        initComponents();
        ArrayList<JLabel> l = new ArrayList<JLabel>();
        l.add(lbFormat);
        l.add(lbPattern);
        l.add(lbUtc);
        l.add(lbLenient);
        ArrayList<JComponent> e = new ArrayList<JComponent>();
        e.add(dateTimeFormatPanel1);
        e.add(dateTimePatternPanel1);
        e.add(timeZonePanel);
        e.add(lenientPanel);
        DefaultLayout.doLayout(jPanel1, l, e,true);
    }

    public void open(DateTimeFieldModel fieldModel) {
        super.open(fieldModel, fieldModel.getMsdlField());
        opened = false;
        this.field = (DateTimeField)fieldModel.getField();
        this.fieldModel = fieldModel;

        DefaultComboBoxModel model = new DefaultComboBoxModel();
        model.addElement(EEncoding.NONE);
        model.addElement(EEncoding.ASCII);
        model.addElement(EEncoding.BCD);
        model.addElement(EEncoding.CP1251);
        model.addElement(EEncoding.CP1252);
        model.addElement(EEncoding.CP866);
        model.addElement(EEncoding.EBCDIC);
        model.addElement(EEncoding.EBCDIC_CP1047);
        model.addElement(EEncoding.UTF8);
        simpleFieldPanel1.setEncodingComboBoxModel(model);
        simpleFieldPanel1.open(fieldModel, EEncoding.getInstance(fieldModel.calcEncoding(false)));

        dateTimeFormatPanel1.addActionListener(this);
        dateTimeFormatPanel1.getSetParentPanel().addActionListener(this);
        dateTimePatternPanel1.addActionListener(this);
        dateTimePatternPanel1.getSetParentPanel().addActionListener(this);
        timeZonePanel.addActionListener(this);
        timeZonePanel.getSetParentPanel().addActionListener(this);
        lenientPanel.addActionListener(this);
        lenientPanel.getSetParentPanel().addActionListener(this);
        
        update();
        opened = true;
    }

    @Override
    public void update() {
        opened = false;
        simpleFieldPanel1.update();
        dateTimeFormatPanel1.setFormat(EDateTimeFormat.getInstance(field.getFormat()), 
                                       EDateTimeFormat.getInstance(fieldModel.getDateTimeFormat(false)));
        dateTimePatternPanel1.setPattern(field.getPattern(), fieldModel.getDateTimePattern(false));
        dateTimePatternPanel1.setVisible(dateTimeFormatPanel1.getComboBoxValue() == EDateTimeFormat.STR);
        lbPattern.setVisible(dateTimeFormatPanel1.getComboBoxValue() == EDateTimeFormat.STR);
        
        timeZonePanel.setValue(field.getTimeZoneType(), fieldModel.getTimeZoneType(false));
        lenientPanel.setValue(field.getLenientParse(), fieldModel.getDateTimeLenientParse(false));
        
        opened = true;
        super.update();
    }
    
    @Override
    protected void doSave() {
        field.setFormat(dateTimeFormatPanel1.getFormat().getValue());
        field.setPattern(dateTimePatternPanel1.getString());
        dateTimePatternPanel1.setVisible(dateTimeFormatPanel1.getComboBoxValue() == EDateTimeFormat.STR);
        lbPattern.setVisible(dateTimeFormatPanel1.getComboBoxValue() == EDateTimeFormat.STR);
        
        field.setTimeZoneType(timeZonePanel.getValue());
        field.setLenientParse(lenientPanel.getValue());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbFormat = new javax.swing.JLabel();
        dateTimeFormatPanel1 = new org.radixware.kernel.common.design.msdleditor.field.panel.simple.DateTimeFormatPanel();
        dateTimePatternPanel1 = new org.radixware.kernel.common.design.msdleditor.field.panel.simple.DateTimePatternPanel();
        lbPattern = new javax.swing.JLabel();
        lbUtc = new javax.swing.JLabel();
        lbLenient = new javax.swing.JLabel();
        lenientPanel = new org.radixware.kernel.common.design.msdleditor.field.panel.simple.ExtBoolPanel();
        timeZonePanel = new org.radixware.kernel.common.design.msdleditor.field.panel.simple.DateTimeZonePanel();
        simpleFieldPanel1 = new org.radixware.kernel.common.design.msdleditor.field.panel.simple.SimpleFieldPanel();

        lbFormat.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/radixware/kernel/common/design/msdleditor/Bundle"); // NOI18N
        lbFormat.setText(bundle.getString("FORMAT")); // NOI18N

        lbPattern.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        java.util.ResourceBundle bundle1 = java.util.ResourceBundle.getBundle("org/radixware/kernel/common/design/msdleditor/field/panel/Bundle"); // NOI18N
        lbPattern.setText(bundle1.getString("DateTimePanel.lbPattern.text")); // NOI18N

        lbUtc.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lbUtc.setText(bundle1.getString("DateTimePanel.lbUtc.text")); // NOI18N

        lbLenient.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lbLenient.setText(bundle1.getString("DateTimePanel.lbLenient.text")); // NOI18N

        lenientPanel.setDefaultParentValue(true);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbLenient, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbFormat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbPattern, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbUtc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(290, 290, 290)
                        .addComponent(lenientPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dateTimeFormatPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dateTimePatternPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)
                            .addComponent(timeZonePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbFormat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dateTimeFormatPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbPattern, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dateTimePatternPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbUtc, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                    .addComponent(timeZonePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lenientPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbLenient, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(simpleFieldPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 445, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(simpleFieldPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.radixware.kernel.common.design.msdleditor.field.panel.simple.DateTimeFormatPanel dateTimeFormatPanel1;
    private org.radixware.kernel.common.design.msdleditor.field.panel.simple.DateTimePatternPanel dateTimePatternPanel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbFormat;
    private javax.swing.JLabel lbLenient;
    private javax.swing.JLabel lbPattern;
    private javax.swing.JLabel lbUtc;
    private org.radixware.kernel.common.design.msdleditor.field.panel.simple.ExtBoolPanel lenientPanel;
    private org.radixware.kernel.common.design.msdleditor.field.panel.simple.SimpleFieldPanel simpleFieldPanel1;
    private org.radixware.kernel.common.design.msdleditor.field.panel.simple.DateTimeZonePanel timeZonePanel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        if (!opened)
            return;
        save();
    }

}
