/*
 * Copyright (c) 2008-2015, Compass Plus Limited. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License,
 * v. 2.0. If a copy of the MPL was not distributed with this file, You can
 * obtain one at http://mozilla.org/MPL/2.0/. This Source Code is distributed
 * WITHOUT ANY WARRANTY; including any implied warranties but not limited to
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * Mozilla Public License, v. 2.0. for more details.
 */

/*
 * VariantFieldPanel.java
 *
 * Created on 24.03.2009, 13:13:35
 */

package org.radixware.kernel.common.design.msdleditor.field;

import javax.swing.JPanel;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import org.radixware.kernel.common.design.msdleditor.AbstractEditItem;
import org.radixware.kernel.common.msdl.IEnumPanelRetriever;
import org.radixware.kernel.common.msdl.IFieldTemplateTextFieldRetriever;
import org.radixware.kernel.common.msdl.MsdlVariantField;
import org.radixware.schemas.msdl.ChoiceFieldVariant;


public class VariantFieldPanel extends AbstractEditItem {

    boolean isOpened;
    /** Creates new form VariantFieldPanel */
    public VariantFieldPanel() {
        initComponents();
    }

    @Override
    protected MsdlVariantField getMsdlField() {
        return (MsdlVariantField)super.getMsdlField();
    }

    public void open(MsdlVariantField fieldModel, IEnumPanelRetriever retriever, JPanel functionsPanel, IFieldTemplateTextFieldRetriever templateRetriever) {
        super.open(fieldModel);
        fieldPanel1.open(fieldModel,retriever, functionsPanel, templateRetriever);
        update();
    }

    private ChoiceFieldVariant getVariant() {
        return getMsdlField().getVariant();
    }

    @Override
    public void update() {
        isOpened = false;
        jTextFieldSelector.setText(getVariant().getSelectorVal());
        fieldPanel1.update();
        super.update();
        DocumentListener dl = new DocumentListener() {

            @Override
            public void insertUpdate(DocumentEvent e) {
                selectorValChanged();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                selectorValChanged();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                selectorValChanged();
            }
        };
        jTextFieldSelector.getDocument().addDocumentListener(dl);
        isOpened = true;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldSelector = new javax.swing.JTextField();
        fieldPanel1 = new org.radixware.kernel.common.design.msdleditor.field.FieldPanel();

        setLayout(new java.awt.BorderLayout());

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/radixware/kernel/common/design/msdleditor/Bundle"); // NOI18N
        jLabel1.setText(bundle.getString("SELECTOR")); // NOI18N

        jTextFieldSelector.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextFieldSelectorCaretUpdate(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldSelector, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(jPanel1, java.awt.BorderLayout.NORTH);
        add(fieldPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldSelectorCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextFieldSelectorCaretUpdate

    }//GEN-LAST:event_jTextFieldSelectorCaretUpdate

    private void selectorValChanged() {
        if (!isOpened)
            return;
        getVariant().setSelectorVal(jTextFieldSelector.getText());
        getMsdlField().setModified();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.radixware.kernel.common.design.msdleditor.field.FieldPanel fieldPanel1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextFieldSelector;
    // End of variables declaration//GEN-END:variables

}
