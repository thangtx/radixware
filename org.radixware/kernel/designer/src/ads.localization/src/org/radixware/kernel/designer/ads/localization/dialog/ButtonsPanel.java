/*
 * Copyright (c) 2008-2015, Compass Plus Limited. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License,
 * v. 2.0. If a copy of the MPL was not distributed with this file, You can
 * obtain one at http://mozilla.org/MPL/2.0/. This Source Code is distributed
 * WITHOUT ANY WARRANTY; including any implied warranties but not limited to
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * Mozilla Public License, v. 2.0. for more details.
 */

/*
 * ButtonsPanel.java
 *
 * Created on Jul 15, 2010, 4:43:12 PM
 */

package org.radixware.kernel.designer.ads.localization.dialog;

import javax.swing.Icon;
import javax.swing.JList;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import org.radixware.kernel.common.enums.EIsoLanguage;
import org.radixware.kernel.common.resources.RadixWareIcons;
import org.radixware.kernel.designer.ads.localization.dialog.LanguagesListPanel.ListModel;


public class ButtonsPanel extends javax.swing.JPanel {
    private final JList<EIsoLanguage> leftList;
    private final JList<EIsoLanguage> rightList;
    private final ChooseLanguagesPanelNew panel;


    final ListSelectionListener leftListListener=new ListSelectionListener(){
        @Override
        public void valueChanged(final ListSelectionEvent e) {
           final int index = e.getFirstIndex();
           final boolean isEnable=((index>=0)&&(index<leftList.getModel().getSize()));
           btnToRight.setEnabled(isEnable);
           //if(ButtonsPanel.this.getParent() instanceof ChooseLanguagesPanel1)
           //    ((ChooseLanguagesPanel1) ButtonsPanel.this.getParent()).check();
           panel.check();
        }

    };
    final ListSelectionListener rightListListener=new ListSelectionListener(){
        @Override
        public void valueChanged(final ListSelectionEvent e) {
           final int index = e.getFirstIndex();
           final boolean isEnable=((index>=0)&&(index<rightList.getModel().getSize()));
           btnToLeft.setEnabled(isEnable);
           //if(ButtonsPanel.this.getParent() instanceof ChooseLanguagesPanel1)
           //    ((ChooseLanguagesPanel1) ButtonsPanel.this.getParent()).check();
           panel.check();
        }
    };

    /** Creates new form ButtonsPanel */
    public ButtonsPanel(final ChooseLanguagesPanelNew panel,final JList<EIsoLanguage> leftList,final JList<EIsoLanguage> rightList) {
        initComponents();
        this.panel= panel;
        Icon icon = RadixWareIcons.MLSTRING_EDITOR.LEFT.getIcon(20);
        btnToLeft.setIcon(icon);
        icon = RadixWareIcons.MLSTRING_EDITOR.RIGHT.getIcon(20);
        btnToRight.setIcon(icon);
        this.leftList=leftList;
        this.leftList.addListSelectionListener(leftListListener);
        this.rightList=rightList;
        this.rightList.addListSelectionListener(rightListListener);
    }



    private void moveItem(final JList<EIsoLanguage> list1,final JList<EIsoLanguage> list2){
        final int index=list1.getSelectedIndex();
        ListModel model=(ListModel)list1.getModel();
        final EIsoLanguage lang=model.getElementAt(index);
        model.removeItem(index);
        list1.setSelectedIndex(0);

        //list1.getListSelectionListeners().notify();
        //list1.setSelectedIndex(-1);
        //list1.validate();
        //list1.repaint();
        
        model=(ListModel)list2.getModel();
        model.addItem(lang);
        list2.setSelectedValue(lang, true);
        //list2.getListSelectionListeners().notify();
        //list2.validate();
        //list1.repaint();
    }



    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnToLeft = new javax.swing.JButton();
        btnToRight = new javax.swing.JButton();

        btnToLeft.setText(org.openide.util.NbBundle.getMessage(ButtonsPanel.class, "ButtonsPanel.btnToLeft.text")); // NOI18N
        btnToLeft.setEnabled(false);
        btnToLeft.setPreferredSize(new java.awt.Dimension(29, 29));
        btnToLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnToLeftActionPerformed(evt);
            }
        });

        btnToRight.setText(org.openide.util.NbBundle.getMessage(ButtonsPanel.class, "ButtonsPanel.btnToRight.text")); // NOI18N
        btnToRight.setEnabled(false);
        btnToRight.setPreferredSize(new java.awt.Dimension(29, 29));
        btnToRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnToRightActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnToLeft, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(btnToRight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btnToLeft, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnToRight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnToLeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToLeftActionPerformed
        // TODO add your handling code here:
        /*int index=rightList.getSelectedIndex();
        ListModel model=(ListModel)rightList.getModel();
        EIsoLanguage lang=(EIsoLanguage)model.getElementAt(index);
        model.removeItem(lang);
        model=(ListModel)leftList.getModel();
        model.addItem(lang);*/
        moveItem(rightList,leftList);
        //ListSelectionEvent event=new ListSelectionEvent(rightList, 0, 0,true) ;
        //rightListListener.valueChanged(event);
    }//GEN-LAST:event_btnToLeftActionPerformed

    private void btnToRightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToRightActionPerformed
        // TODO add your handling code here:
        moveItem(leftList,rightList);
        //btnToRight.setEnabled(false);
        //ListSelectionEvent event=new ListSelectionEvent(leftList, 0, 0,true) ;
        //leftListListener.valueChanged(event);
    }//GEN-LAST:event_btnToRightActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnToLeft;
    private javax.swing.JButton btnToRight;
    // End of variables declaration//GEN-END:variables

}
