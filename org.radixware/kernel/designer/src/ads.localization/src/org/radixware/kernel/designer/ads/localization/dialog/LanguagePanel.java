/*
 * Copyright (c) 2008-2015, Compass Plus Limited. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License,
 * v. 2.0. If a copy of the MPL was not distributed with this file, You can
 * obtain one at http://mozilla.org/MPL/2.0/. This Source Code is distributed
 * WITHOUT ANY WARRANTY; including any implied warranties but not limited to
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * Mozilla Public License, v. 2.0. for more details.
 */

package org.radixware.kernel.designer.ads.localization.dialog;

import java.util.ArrayList;
import java.util.List;
import org.radixware.kernel.common.enums.EIsoLanguage;
import org.radixware.kernel.designer.ads.localization.source.FilterSettings;
import static org.radixware.kernel.designer.ads.localization.source.FilterSettings.GroupLangsEnum.ALL_LANGS;
import static org.radixware.kernel.designer.ads.localization.source.FilterSettings.GroupLangsEnum.SRC_LANGS;
import static org.radixware.kernel.designer.ads.localization.source.FilterSettings.GroupLangsEnum.TRANSL_LANGS;
import org.radixware.kernel.designer.ads.localization.source.LanguagesSettings;


public class LanguagePanel extends javax.swing.JPanel {
    private List<EIsoLanguage> srcLangs;
    private List<EIsoLanguage> transLangs;
    /**
     * Creates new form TimeFilterLanguagePanel
     */
    public LanguagePanel() {
        initComponents();     
    }
    
    public void open(final LanguagesSettings languageSettings, final List<EIsoLanguage> srcLangs,final List<EIsoLanguage> transLangs){
        this.srcLangs=srcLangs;
        this.transLangs=transLangs;
        
        List<EIsoLanguage> langs=languageSettings.getLanguages();
        cbLanguage.removeAllItems();
        for(EIsoLanguage lang:srcLangs){
             cbLanguage.addItem(lang);
        }
        for(EIsoLanguage lang:transLangs){
             cbLanguage.addItem(lang);
        }
        
        FilterSettings.GroupLangsEnum getGroupLang=languageSettings.getGroupLangType();
        cbGroupLangs.removeAllItems();
        cbGroupLangs.addItem(FilterSettings.GroupLangsEnum.SRC_LANGS);
        cbGroupLangs.addItem(FilterSettings.GroupLangsEnum.TRANSL_LANGS);
        cbGroupLangs.addItem(FilterSettings.GroupLangsEnum.ALL_LANGS);        
        
        if(languageSettings.isLanguageSelected() && !langs.isEmpty()){
            chSelectLang.setSelected(true);
            cbLanguage.setSelectedItem(langs.get(0));
        }else if(getGroupLang!=null){
            cbGroupLangs.setSelectedItem(getGroupLang);
        }
    }
    
    FilterSettings.GroupLangsEnum getGroupLangs(){
        return (FilterSettings.GroupLangsEnum)cbGroupLangs.getSelectedItem();
    }    
    
    boolean isLanguageSelected(){
        return chSelectLang.isSelected();
    }
    
    public List<EIsoLanguage> getLangs(){
        List<EIsoLanguage> langs=new ArrayList<>();
        if(chSelectLang.isSelected()){
            Object obj=cbLanguage.getSelectedItem();
            if(obj instanceof EIsoLanguage){
                EIsoLanguage lang=(EIsoLanguage)cbLanguage.getSelectedItem();
                langs.add(lang);
            }
        }else{
            FilterSettings.GroupLangsEnum val=(FilterSettings.GroupLangsEnum)cbGroupLangs.getSelectedItem();
            if(val!=null){
                switch(val){
                    case SRC_LANGS:
                        langs.addAll( srcLangs);
                        break;
                    case TRANSL_LANGS:
                        langs.addAll(transLangs);
                        break;
                    case ALL_LANGS:
                        langs.addAll(srcLangs);
                        langs.addAll(transLangs);
                        break;
                } 
            }
        }
        return langs;
    }
    
    private void  setSelectLangChecked(boolean checked){
        cbLanguage.setVisible(checked);
        cbGroupLangs.setVisible(!checked);
    }
    
    public void setEnabledLanguagePanel(boolean enabled){    
        chSelectLang.setEnabled(enabled);
        setSelectLangChecked(chSelectLang.isSelected());
        if(!chSelectLang.isSelected()){
            cbGroupLangs.setEnabled(enabled);
        } else {
            cbLanguage.setEnabled(enabled);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chSelectLang = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        cbGroupLangs = new javax.swing.JComboBox<FilterSettings.GroupLangsEnum>();
        cbLanguage = new javax.swing.JComboBox<EIsoLanguage>();

        setAlignmentX(0.0F);
        setAlignmentY(0.0F);
        setMaximumSize(new java.awt.Dimension(32767, 100));

        org.openide.awt.Mnemonics.setLocalizedText(chSelectLang, org.openide.util.NbBundle.getMessage(LanguagePanel.class, "LanguagePanel.chSelectLang.text")); // NOI18N
        chSelectLang.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chSelectLangItemStateChanged(evt);
            }
        });
        chSelectLang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chSelectLangActionPerformed(evt);
            }
        });

        jPanel1.setLayout(new java.awt.CardLayout());
        jPanel1.add(cbGroupLangs, "card2");
        jPanel1.add(cbLanguage, "card3");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chSelectLang, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(5, 5, 5))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(chSelectLang, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void chSelectLangItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chSelectLangItemStateChanged
        // TODO add your handling code here:
        boolean checked=chSelectLang.isSelected();
        setSelectLangChecked( checked);
    }//GEN-LAST:event_chSelectLangItemStateChanged

    private void chSelectLangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chSelectLangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chSelectLangActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<FilterSettings.GroupLangsEnum> cbGroupLangs;
    private javax.swing.JComboBox<EIsoLanguage> cbLanguage;
    private javax.swing.JCheckBox chSelectLang;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
