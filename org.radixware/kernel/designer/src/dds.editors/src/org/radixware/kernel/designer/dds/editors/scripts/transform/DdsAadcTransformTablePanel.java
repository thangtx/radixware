/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.radixware.kernel.designer.dds.editors.scripts.transform;

import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import org.radixware.kernel.common.defs.Definition;
import org.radixware.kernel.common.defs.dds.DdsTableDef;
import org.radixware.kernel.common.defs.dds.providers.DdsVisitorProviderFactory;
import org.radixware.kernel.common.repository.Layer;
import org.radixware.kernel.common.repository.dds.DdsAadcTransformTable;
import org.radixware.kernel.designer.common.dialogs.chooseobject.ChooseDefinitionCfg;
import org.radixware.kernel.designer.common.dialogs.components.state.StateAbstractDialog;

/**
 *
 * @author avoloshchuk
 */
public class DdsAadcTransformTablePanel extends StateAbstractDialog.StateAbstractPanel {
    
    private DdsAadcTransformTable table;
    

    /**
     * Creates new form DdsAadcTablePanel
     */
    public DdsAadcTransformTablePanel() {
        initComponents();
        sourceTableNamePanel.setPlaceholder(org.openide.util.NbBundle.getMessage(DdsAadcTransformColumnPanel.class, "Source.placeholder"));
        sourceTableNamePanel.setVisibleCopyButton(false);
        sourceTableNamePanel.setAllowEmptyName(true);
        check();
        definitionLinkEditPanel1.addChangeListener(new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent e) {
                Definition def = definitionLinkEditPanel1.getDefinition();
                if (def == null) {
                    table.setTargetDbName("");
                    table.setTargetId(null);
                } else if (def instanceof DdsTableDef) {
                    table.setTargetDbName(((DdsTableDef) def).getDbName());
                    table.setTargetId(def.getId());
                }
                
                update();
            }
        });
        targetTableNamePanel.addChangeListener(new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent e) {
                table.setTargetDbName(targetTableNamePanel.getDbName());
                check();
            }
        });
        sourceTableNamePanel.addChangeListener(new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent e) {
                table.setSourceDbName(sourceTableNamePanel.getDbName());
                check();
            }
        });
    }
    
    private void update() {
        String dbName = table.getTargetDbName();
        if (dbName != null) {
            targetTableNamePanel.setDbName(dbName);
        }
        dbName = table.getSourceDbName();
        if (dbName != null) {
            sourceTableNamePanel.setDbName(dbName);
        }
        check();            
    }
    
    public void open(Layer layer, DdsAadcTransformTable t){
        table = new DdsAadcTransformTable();
        DdsTableDef def = null;
        if (t != null) {
            this.table.loadFrom(t);
            def = t.findTable(layer);
        }
        definitionLinkEditPanel1.open(ChooseDefinitionCfg.Factory.newInstance(layer, DdsVisitorProviderFactory.newTableProvider()), def , table.getTargetId());
        update();
    }

    public DdsAadcTransformTable getTable() {
        return table;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        definitionLinkEditPanel1 = new org.radixware.kernel.designer.common.dialogs.components.DefinitionLinkEditPanel();
        jLabel2 = new javax.swing.JLabel();
        targetTableNamePanel = new org.radixware.kernel.designer.dds.editors.DbNameEditPanel();
        sourceTableNamePanel = new org.radixware.kernel.designer.dds.editors.DbNameEditPanel();
        jLabel3 = new javax.swing.JLabel();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(DdsAadcTransformTablePanel.class, "DdsAadcTransformTablePanel.jLabel1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(DdsAadcTransformTablePanel.class, "DdsAadcTransformTablePanel.jLabel2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(DdsAadcTransformTablePanel.class, "DdsAadcTransformTablePanel.jLabel3.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sourceTableNamePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 418, Short.MAX_VALUE)
                    .addComponent(definitionLinkEditPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(targetTableNamePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 418, Short.MAX_VALUE))
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(definitionLinkEditPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(targetTableNamePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(sourceTableNamePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.radixware.kernel.designer.common.dialogs.components.DefinitionLinkEditPanel definitionLinkEditPanel1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private org.radixware.kernel.designer.dds.editors.DbNameEditPanel sourceTableNamePanel;
    private org.radixware.kernel.designer.dds.editors.DbNameEditPanel targetTableNamePanel;
    // End of variables declaration//GEN-END:variables

    @Override
    public final void check() {
        if (definitionLinkEditPanel1.getDefinitionId() == null){
            stateManager.error("Choose target table");
            changeSupport.fireChange();
            return;
        }
        if (!targetTableNamePanel.isComplete()){
            stateManager.error("Invalid target table name");
            changeSupport.fireChange();
            return;
        }
        
        if (!sourceTableNamePanel.isComplete()){
            stateManager.error("Invalid source table name");
            changeSupport.fireChange();
            return;
        }
        
        stateManager.ok();
        changeSupport.fireChange();
    }
}
