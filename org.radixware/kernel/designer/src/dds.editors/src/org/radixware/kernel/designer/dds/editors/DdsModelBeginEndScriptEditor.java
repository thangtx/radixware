/*
 * Copyright (c) 2008-2015, Compass Plus Limited. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License,
 * v. 2.0. If a copy of the MPL was not distributed with this file, You can
 * obtain one at http://mozilla.org/MPL/2.0/. This Source Code is distributed
 * WITHOUT ANY WARRANTY; including any implied warranties but not limited to
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * Mozilla Public License, v. 2.0. for more details.
 */

package org.radixware.kernel.designer.dds.editors;

import java.awt.BorderLayout;
import org.radixware.kernel.common.sqml.Sqml;
import org.radixware.kernel.designer.common.annotations.registrators.EditorFactoryRegistration;
import org.radixware.kernel.designer.common.editors.RadixObjectEditor;
import org.radixware.kernel.designer.common.editors.sqml.SqmlEditorPanel;
import org.radixware.kernel.designer.common.general.editors.IEditorFactory;
import org.radixware.kernel.designer.common.general.editors.OpenInfo;

public class DdsModelBeginEndScriptEditor extends RadixObjectEditor<Sqml> {

    private final SqmlEditorPanel editorPanel = new SqmlEditorPanel();

    protected DdsModelBeginEndScriptEditor(Sqml sqml) {
        super(sqml);
        initComponents();

        setLayout(new BorderLayout());
        add(editorPanel, BorderLayout.CENTER);

//        JButton button = new JButton("SQL");
//        button.addActionListener(new ActionListener() {
//
//            @Override
//            public void actionPerformed(ActionEvent e) {
//                viewSql();
//            }
//        });
//
//        editorPanel.getToolBar().add(button);
    }

//    private void viewSql() {
//        Sqml sqml = getSqml();
//        SqmlTranslator sqmlTranslator = SqmlTranslator.Factory.newInstance(sqml);
//        CodePrinter cp = CodePrinter.Factory.newSqlPrinter();
//        sqmlTranslator.translate(cp);
//        String sql = cp.toString();
//
//        FileSystem fs = FileUtil.createMemoryFileSystem();
//
//        FileObject fob;
//        DataObject dob;
//
//        try {
//            fob = fs.getRoot().createData(sqml.getName(), "sql");
//            dob = DataObject.find(fob);
//        } catch (IOException e) {
//            // TODO:
//            return;
//        }
//
//        EditorCookie ec = dob.getCookie(EditorCookie.class);
//        ec.open();
//        ec.getOpenedPanes()[0].setText(sql);
//    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 448, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 375, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    private Sqml getSqml() {
        return getRadixObject();
    }

    @Override
    public boolean open(OpenInfo openInfo) {
        Sqml sqml = getSqml();
        editorPanel.open(sqml);
        return super.open(openInfo);
    }

    @Override
    public void update() {
        editorPanel.update();
    }

    @EditorFactoryRegistration
    public static final class Factory implements IEditorFactory<Sqml> {

        @Override
        public DdsModelBeginEndScriptEditor newInstance(Sqml sqml) {
            return new DdsModelBeginEndScriptEditor(sqml);
        }
    }
}
