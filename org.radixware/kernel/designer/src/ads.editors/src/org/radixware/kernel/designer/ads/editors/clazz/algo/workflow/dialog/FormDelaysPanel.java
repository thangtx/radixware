/*
 * Copyright (c) 2008-2015, Compass Plus Limited. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License,
 * v. 2.0. If a copy of the MPL was not distributed with this file, You can
 * obtain one at http://mozilla.org/MPL/2.0/. This Source Code is distributed
 * WITHOUT ANY WARRANTY; including any implied warranties but not limited to
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * Mozilla Public License, v. 2.0. for more details.
 */

package org.radixware.kernel.designer.ads.editors.clazz.algo.workflow.dialog;

import java.math.BigDecimal;
import org.radixware.kernel.common.defs.ads.AdsDefinitionIcon;
import org.radixware.kernel.common.defs.ads.clazz.algo.object.*;
import org.radixware.kernel.common.defs.value.ValAsStr;
import org.radixware.kernel.common.enums.EValType;
import org.radixware.kernel.common.resources.icons.RadixIcon;
import org.radixware.kernel.common.utils.RadixResourceBundle;
import org.radixware.kernel.designer.ads.editors.clazz.algo.workflow.dialog.EditorDialog;


public class FormDelaysPanel extends EditorDialog.EditorPanel<AdsAppObject> {

    public FormDelaysPanel(AdsAppObject node) {
        super(node);
        initComponents();

        dueDelay = node.getPropByName("dueDelay");
        overDueDelay = node.getPropByName("overDueDelay");
        timeout = node.getPropByName("timeout");

        panelDue.setEnabled(!node.isReadOnly());
        panelOverdue.setEnabled(!node.isReadOnly());
        panelTimeout.setEnabled(!node.isReadOnly());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelTimeout = new org.radixware.kernel.designer.ads.editors.clazz.algo.workflow.dialog.TimeoutPanel(RadixResourceBundle.getMessage(getClass(), "FormDelaysPanel.Timeout.text"));
        panelOverdue = new org.radixware.kernel.designer.ads.editors.clazz.algo.workflow.dialog.TimeoutPanel(RadixResourceBundle.getMessage(getClass(), "FormDelaysPanel.Overdue.text"));
        panelDue = new org.radixware.kernel.designer.ads.editors.clazz.algo.workflow.dialog.TimeoutPanel(RadixResourceBundle.getMessage(getClass(), "FormDelaysPanel.Due.text"));

        setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.SystemColor.inactiveCaption));
        setMinimumSize(new java.awt.Dimension(500, 460));
        setPreferredSize(new java.awt.Dimension(500, 460));
        setRequestFocusEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelDue, javax.swing.GroupLayout.DEFAULT_SIZE, 481, Short.MAX_VALUE)
                    .addComponent(panelOverdue, javax.swing.GroupLayout.DEFAULT_SIZE, 481, Short.MAX_VALUE)
                    .addComponent(panelTimeout, javax.swing.GroupLayout.DEFAULT_SIZE, 481, Short.MAX_VALUE))
                .addGap(7, 7, 7))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelDue, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(panelOverdue, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelTimeout, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.radixware.kernel.designer.ads.editors.clazz.algo.workflow.dialog.TimeoutPanel panelDue;
    private org.radixware.kernel.designer.ads.editors.clazz.algo.workflow.dialog.TimeoutPanel panelOverdue;
    private org.radixware.kernel.designer.ads.editors.clazz.algo.workflow.dialog.TimeoutPanel panelTimeout;
    // End of variables declaration//GEN-END:variables

    private AdsAppObject.Prop dueDelay;
    private AdsAppObject.Prop overDueDelay;
    private AdsAppObject.Prop timeout;

    @Override
    public void init() {
        panelDue.setTimeout(dueDelay.getValue() != null ? (BigDecimal)dueDelay.getValue().toObject(EValType.NUM) : null, true);
        panelOverdue.setTimeout(overDueDelay.getValue() != null ? (BigDecimal)overDueDelay.getValue().toObject(EValType.NUM) : null);
        panelTimeout.setTimeout(timeout.getValue() != null ? (BigDecimal)timeout.getValue().toObject(EValType.NUM) : null);
    }

    @Override
    public void apply() {
        dueDelay.setValue(ValAsStr.Factory.newInstance(panelDue.getTimeout(), EValType.NUM));
        overDueDelay.setValue(ValAsStr.Factory.newInstance(panelOverdue.getTimeout(), EValType.NUM));
        timeout.setValue(ValAsStr.Factory.newInstance(panelTimeout.getTimeout(), EValType.NUM));
    }

    @Override
    public String getTitle() {
        return RadixResourceBundle.getMessage(getClass(), "CTL_Delays");
    }

    @Override
    public RadixIcon getIcon() {
        return AdsDefinitionIcon.WORKFLOW.WAIT;
    }
}
