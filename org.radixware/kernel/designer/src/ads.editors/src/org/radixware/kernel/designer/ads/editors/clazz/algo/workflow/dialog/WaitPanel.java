/*
 * Copyright (c) 2008-2015, Compass Plus Limited. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License,
 * v. 2.0. If a copy of the MPL was not distributed with this file, You can
 * obtain one at http://mozilla.org/MPL/2.0/. This Source Code is distributed
 * WITHOUT ANY WARRANTY; including any implied warranties but not limited to
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * Mozilla Public License, v. 2.0. for more details.
 */

package org.radixware.kernel.designer.ads.editors.clazz.algo.workflow.dialog;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import org.openide.util.NbBundle;
import org.radixware.kernel.common.components.ExtendableTextField;
import org.radixware.kernel.common.components.ExtendableTextField.ExtendableTextChangeEvent;
import org.radixware.kernel.common.components.ExtendableTextField.ExtendableTextChangeListener;
import org.radixware.kernel.common.defs.ExtendableDefinitions.EScope;
import org.radixware.kernel.common.defs.ads.clazz.algo.AdsAlgoStrobMethodDef;
import org.radixware.kernel.common.defs.ads.clazz.algo.object.*;
import org.radixware.kernel.common.defs.ads.clazz.members.AdsMethodDef;
import org.radixware.kernel.common.defs.value.ValAsStr;
import org.radixware.kernel.common.enums.EValType;
import org.radixware.kernel.common.resources.icons.RadixIcon;
import org.radixware.kernel.common.types.Id;
import org.radixware.kernel.common.resources.RadixWareIcons;


public class WaitPanel extends EditorDialog.EditorPanel<AdsAppObject> {

    public WaitPanel(AdsAppObject node) {
        super(node);
        initComponents();

        timeout = obj.getPropByName("timeout");
        strob = obj.getPropByName("strobId");

        comboStrob.setEditorType(ExtendableTextField.EDITOR_COMBO);
        comboStrob.addResetButton(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                comboStrob.setEmpty();
                strob.setValue((ValAsStr)null);
            }
        });
        comboStrob.getChangeSupport().addEventListener(new ExtendableTextChangeListener() {
            @Override
            public void onEvent(ExtendableTextChangeEvent e) {
                StrobItem item = (StrobItem)comboStrob.getComboBoxSelectedItem();
                strob.setValue(item != null ? ValAsStr.Factory.loadFrom(item.getId().toString()) : null);
            }
        });
        panelTimeout.addChangeListener(new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent e) {
                timeout.setValue(ValAsStr.Factory.newInstance(panelTimeout.getTimeout(), EValType.NUM));
            }
        });

        comboStrob.setEnabled(!node.isReadOnly());
        panelTimeout.setEnabled(!node.isReadOnly());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comboStrob = new org.radixware.kernel.designer.ads.editors.clazz.algo.workflow.dialog.ExtTextField();
        labelStrob = new javax.swing.JLabel();
        panelTimeout = new org.radixware.kernel.designer.ads.editors.clazz.algo.workflow.dialog.TimeoutPanel();

        setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.SystemColor.inactiveCaption));
        setMinimumSize(new java.awt.Dimension(500, 350));
        setPreferredSize(new java.awt.Dimension(500, 350));
        setRequestFocusEnabled(false);

        labelStrob.setText(org.openide.util.NbBundle.getMessage(WaitPanel.class, "WaitPanel.labelStrob.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelTimeout, javax.swing.GroupLayout.DEFAULT_SIZE, 478, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelStrob)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboStrob, javax.swing.GroupLayout.DEFAULT_SIZE, 448, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelStrob)
                    .addComponent(comboStrob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelTimeout, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.radixware.kernel.designer.ads.editors.clazz.algo.workflow.dialog.ExtTextField comboStrob;
    private javax.swing.JLabel labelStrob;
    private org.radixware.kernel.designer.ads.editors.clazz.algo.workflow.dialog.TimeoutPanel panelTimeout;
    // End of variables declaration//GEN-END:variables

    private AdsAppObject.Prop timeout;
    private AdsAppObject.Prop strob;

    @Override
    public void init() {
        Id strobId = strob != null && strob.getValue() != null ? Id.Factory.loadFrom(strob.getValue().toString()) : null;

        StrobItem selItem = null;
        List<StrobItem> strobs = new ArrayList<StrobItem>();
        for (AdsMethodDef mf : obj.getOwnerClass().getMethods().get(EScope.ALL)) {
            if (mf instanceof AdsAlgoStrobMethodDef) {
                StrobItem item = new StrobItem((AdsAlgoStrobMethodDef) mf);
                if (mf.getId().equals(strobId)) {
                    selItem = item;   
                }
                strobs.add(item);
            }            
        }
        comboStrob.setComboBoxModel(new DefaultComboBoxModel(strobs.toArray()));
        comboStrob.setComboBoxSelectedItem(selItem);

        panelTimeout.setTimeout((BigDecimal)timeout.getValue().toObject(EValType.NUM), true);
    }

    @Override
    public void apply() {
    }

    @Override
    public String getTitle() {
        return NbBundle.getMessage(getClass(), "CTL_Properties");
    }

    @Override
    public RadixIcon getIcon() {
        return RadixWareIcons.EDIT.PROPERTIES;
    }
}
