/*
 * Copyright (c) 2008-2015, Compass Plus Limited. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License,
 * v. 2.0. If a copy of the MPL was not distributed with this file, You can
 * obtain one at http://mozilla.org/MPL/2.0/. This Source Code is distributed
 * WITHOUT ANY WARRANTY; including any implied warranties but not limited to
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * Mozilla Public License, v. 2.0. for more details.
 */

package org.radixware.kernel.designer.ads.editors.enumeration.creation;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.event.ChangeListener;
import org.openide.util.NbBundle;
import org.openide.util.ChangeSupport;
import org.radixware.kernel.designer.common.dialogs.components.state.StateManager;


public class NewAdsEnumDefinitionPanel extends javax.swing.JPanel implements ActionListener {

    private AdsEnumCreature creature;
    private AdsEnumCreature.E_CREATION_TYPE creationType;
    private boolean firstTime;

    /** Creates new form SelectTypeOfDefinitionPanel */
    public NewAdsEnumDefinitionPanel() {
        super();

        initComponents();

        creature = null;
        creationType = AdsEnumCreature.E_CREATION_TYPE.UNDEFINED;

        overridedADSEnumRadioButton.addActionListener(this);        
        simpleEnumRadioButton.addActionListener(this);
        platformPublicatingRadioButton.addActionListener(this);

        changeSupport = new ChangeSupport(this);

        firstTime = true;
    }

    public AdsEnumCreature.E_CREATION_TYPE getCreationType(){
        return creationType;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        simpleEnumRadioButton = new javax.swing.JRadioButton();
        overridedADSEnumRadioButton = new javax.swing.JRadioButton();
        platformPublicatingRadioButton = new javax.swing.JRadioButton();

        buttonGroup1.add(simpleEnumRadioButton);
        simpleEnumRadioButton.setText(org.openide.util.NbBundle.getMessage(NewAdsEnumDefinitionPanel.class, "NewAdsEnumDefinitionPanel.simpleEnumRadioButton.text")); // NOI18N

        buttonGroup1.add(overridedADSEnumRadioButton);
        overridedADSEnumRadioButton.setText(org.openide.util.NbBundle.getMessage(NewAdsEnumDefinitionPanel.class, "NewAdsEnumDefinitionPanel.overridedADSEnumRadioButton.text")); // NOI18N

        buttonGroup1.add(platformPublicatingRadioButton);
        platformPublicatingRadioButton.setText(org.openide.util.NbBundle.getMessage(NewAdsEnumDefinitionPanel.class, "NewAdsEnumDefinitionPanel.platformPublicatingRadioButton.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(overridedADSEnumRadioButton)
                    .addComponent(simpleEnumRadioButton)
                    .addComponent(platformPublicatingRadioButton))
                .addContainerGap(130, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(simpleEnumRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(overridedADSEnumRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(platformPublicatingRadioButton)
                .addContainerGap(225, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void actionPerformed(ActionEvent ev) {
        final Object obj = ev.getSource();

        if (obj == simpleEnumRadioButton) {
            creationType = AdsEnumCreature.E_CREATION_TYPE.SIMPLE_ENUM_CREATION;
            creature.setCreationType(creationType);
            changeSupport.fireChange();
        } else if (obj == overridedADSEnumRadioButton) {
            creationType = AdsEnumCreature.E_CREATION_TYPE.OVERRIDEN_ADS_ENUM_CREATION;
            creature.setCreationType(creationType);
            changeSupport.fireChange();
        } else if (obj == platformPublicatingRadioButton){
            creationType = AdsEnumCreature.E_CREATION_TYPE.PLATFORM_PUBLICATED_ENUM_CREATION;
            creature.setCreationType(creationType);
            changeSupport.fireChange();
        }
    }

    public void open(AdsEnumCreature creature) {
        this.creature = creature;

        if (firstTime) {
            //select simple type as default programmatically
            //(Simulate pressing a button, which will perform appropriate actions for setting up creature's settings)
            this.simpleEnumRadioButton.setSelected(true);
            this.actionPerformed(new ActionEvent(simpleEnumRadioButton, ActionEvent.ACTION_PERFORMED, "Perform action"));

            firstTime = false;
        }

        overridedADSEnumRadioButton.setEnabled( creature.getModule().findOverwritten() != null);
    }

    public void apply() {
        creature.setCreationType(creationType);
    }
    private ChangeSupport changeSupport;

    public final void addChangeListener(ChangeListener l) {
        changeSupport.addChangeListener(l);
    }

    public final void removeChangeListener(ChangeListener l) {
        changeSupport.removeChangeListener(l);
    }
    private StateManager stateManager = new StateManager(this);

    public boolean isComplete() {
        if (creationType != AdsEnumCreature.E_CREATION_TYPE.UNDEFINED) {
            stateManager.ok();
            return true;
        } else {
            stateManager.error(NbBundle.getMessage(NewAdsEnumDefinitionPanel.class, "Error-Invalid-Definition"));
            return false;
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton overridedADSEnumRadioButton;
    private javax.swing.JRadioButton platformPublicatingRadioButton;
    private javax.swing.JRadioButton simpleEnumRadioButton;
    // End of variables declaration//GEN-END:variables
}
