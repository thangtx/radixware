/*
 * Copyright (c) 2008-2015, Compass Plus Limited. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License,
 * v. 2.0. If a copy of the MPL was not distributed with this file, You can
 * obtain one at http://mozilla.org/MPL/2.0/. This Source Code is distributed
 * WITHOUT ANY WARRANTY; including any implied warranties but not limited to
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * Mozilla Public License, v. 2.0. for more details.
 */

/*
 * AdsProperyEditorValueInitializationModePanel.java
 *
 * Created on Jun 25, 2010, 1:47:21 PM
 */

package org.radixware.kernel.designer.ads.editors.property;

import org.radixware.kernel.common.defs.ads.clazz.members.AdsTablePropertyDef;
import org.radixware.kernel.common.enums.EPropInitializationPolicy;


public class AdsProperyEditorValueInitializationModePanel extends javax.swing.JPanel {

    /** Creates new form AdsProperyEditorValueInitializationModePanel */
    public AdsProperyEditorValueInitializationModePanel() {
        initComponents();

        jComboBox1.removeAllItems();

        jComboBox1.addItem("Don't define");
        jComboBox1.addItem("Define if not inherited");
        jComboBox1.addItem("Define always");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    AdsTablePropertyDef prop = null;
    private boolean isReadOnly = false;
    private boolean isMayModify = false;

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();

        jLabel2.setText(org.openide.util.NbBundle.getMessage(AdsProperyEditorValueInitializationModePanel.class, "AdsProperyEditorValueInitializationModePanel.jLabel2.text")); // NOI18N

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(28, 28, 28)
                .addComponent(jComboBox1, 0, 277, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel2)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

   public void setReadOnly(boolean isReadOnly)
    {
    //this.isReadOnly = isReadOnly;
    // boolean isDisable = !prop.getValueInheritanceRules().getInheritable() || isReadOnly;
     jComboBox1.setEnabled(!isReadOnly);
    }

    public void open(AdsTablePropertyDef prop)
    {
        this.prop = prop;
        update();
    }

    public void update()
    {
     isMayModify = false;
     if (prop.getValueInheritanceRules().getInitializationPolicy().equals(
             EPropInitializationPolicy.DO_NOT_DEFINE))
     {
           jComboBox1.setSelectedIndex(0);
     }
     else if (prop.getValueInheritanceRules().getInitializationPolicy().equals(
             EPropInitializationPolicy.DEFINE_IF_NOT_INHERITED))
     {
           jComboBox1.setSelectedIndex(1);
     }
     else //if (prop.getValueInheritanceRules().getInitializationPolicy().equals(
          //   EPropInitializationPolicy.DEFINE_ALWAYS))
     {
           jComboBox1.setSelectedIndex(2);
     }
     boolean isDisable = !prop.getValueInheritanceRules().getInheritable() || isReadOnly;
     jComboBox1.setEnabled(!isDisable);
     isMayModify = true;
    }


    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        if (!isMayModify || prop == null || !prop.isInBranch()) return;
        switch (jComboBox1.getSelectedIndex()) {
            case 0:
                prop.getValueInheritanceRules().setInitializationPolicy(EPropInitializationPolicy.DO_NOT_DEFINE);
                break;
            case 1:
                prop.getValueInheritanceRules().setInitializationPolicy(EPropInitializationPolicy.DEFINE_IF_NOT_INHERITED);
                break;
            case 2:
                prop.getValueInheritanceRules().setInitializationPolicy(EPropInitializationPolicy.DEFINE_ALWAYS);
                break;
        }
}//GEN-LAST:event_jComboBox1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables

}
