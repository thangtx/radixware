/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.radixware.kernel.designer.ads.editors.pages;

import java.awt.Dimension;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.radixware.kernel.common.defs.ads.AdsDefinition;
import org.radixware.kernel.common.defs.ads.clazz.presentation.AdsEditorPageDef;
import org.radixware.kernel.common.defs.ads.clazz.presentation.AdsProperiesGroupDef;
import org.radixware.kernel.common.defs.localization.IMultilingualStringDef;
import org.radixware.kernel.common.enums.EIsoLanguage;
import org.radixware.kernel.common.types.Id;
import org.radixware.kernel.designer.common.dialogs.components.LabeledNameEditPanel;
import org.radixware.kernel.designer.common.dialogs.components.localizing.HandleInfo;
import org.radixware.kernel.designer.common.dialogs.components.localizing.LocalizingStringContextFactory;
import org.radixware.kernel.designer.common.dialogs.components.state.StateAbstractDialog.StateAbstractPanel;

/**
 *
 * @author avoloshchuk
 */
public class EditorPagePropertyGroupPanel extends StateAbstractPanel {

    /**
     * Creates new form EditorPagePropertyGroupPanel
     */
    public EditorPagePropertyGroupPanel() {
        initComponents();
        labeledNameEditPanel.getNameEditor().setEditable(true);

//        labeledNameEditPanel.setMaximumSize(new Dimension(Short.MAX_VALUE, 20));
    }
    
    public void open(final AdsProperiesGroupDef group, final AdsEditorPageDef page) {
        labeledNameEditPanel.getNameEditor().setCurrentName(group.getName());
        
        localizingEditorPanel.open(LocalizingStringContextFactory.newProxyInstance(new HandleInfo() {
            
            @Override
            public AdsDefinition getAdsDefinition() {
                return page;
            }
            
            @Override
            public Id getTitleId() {
                return group.getTitleId();
            }
            
            @Override
            protected void onAdsMultilingualStringDefChange(IMultilingualStringDef multilingualStringDef) {
                if (multilingualStringDef != null) {
                    group.setTitleId(multilingualStringDef.getId());
                } else {
                    group.setTitleId(null);
                }
            }
            
            @Override
            protected void onLanguagesPatternChange(EIsoLanguage language, String newStringValue) {
                IMultilingualStringDef string = getAdsMultilingualStringDef();
                if (string != null) {
                    string.setValue(language, newStringValue);
                }
            }
        }));
        
        cbShowFrame.setSelected(group.isShowFrame());
    }
    
    public void apply(final AdsProperiesGroupDef group) {
        String name = labeledNameEditPanel.getNameEditor().getCurrentName();
        if (!group.getName().equals(name)) {
            group.setName(name);
        }

        if (!localizingEditorPanel.getLocalizingStringContext().commit()) {
            Logger.getLogger(EditorPagePropertyGroupPanel.class.getName()).log(Level.WARNING, "Failed to set the property 'Name'");
        }
        
        group.setShowFrame(cbShowFrame.isSelected());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labeledNameEditPanel = new org.radixware.kernel.designer.common.dialogs.components.LabeledNameEditPanel();
        localizingEditorPanel = new org.radixware.kernel.designer.common.dialogs.components.localizing.LocalizingEditorPanel();
        cbShowFrame = new javax.swing.JCheckBox();

        localizingEditorPanel.setMinimumSize(new java.awt.Dimension(300, 0));

        org.openide.awt.Mnemonics.setLocalizedText(cbShowFrame, org.openide.util.NbBundle.getMessage(EditorPagePropertyGroupPanel.class, "EditorPagePropertyGroupPanel.cbShowFrame.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labeledNameEditPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                    .addComponent(localizingEditorPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbShowFrame))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(labeledNameEditPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(localizingEditorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(cbShowFrame)
                .addGap(0, 0, 0))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox cbShowFrame;
    private org.radixware.kernel.designer.common.dialogs.components.LabeledNameEditPanel labeledNameEditPanel;
    private org.radixware.kernel.designer.common.dialogs.components.localizing.LocalizingEditorPanel localizingEditorPanel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void check() {
        if (labeledNameEditPanel.getNameEditor().isComplete()) {
            stateManager.ok();
        } else {
            stateManager.error("Incorrect name");
        }
        
        changeSupport.fireChange();
    }
}
