package org.radixware.kernel.designer.ads.editors.clazz.report;

import java.math.BigDecimal;
import org.radixware.kernel.common.defs.ads.clazz.sql.report.AdsReportCell;
import org.radixware.kernel.common.defs.ads.clazz.sql.report.AdsReportForm;
import org.radixware.kernel.common.defs.ads.clazz.sql.report.utils.AdsReportUtils;
import org.radixware.kernel.designer.ads.reports.AdsReportDialogsUtils;

import org.radixware.kernel.designer.common.dialogs.components.BigDecimalSpinnerModel;
import org.radixware.kernel.designer.common.dialogs.components.CheckedBigDecimalSpinnerEditor;

public class AdsReportLineSpacingPanel extends javax.swing.JPanel {
    private AdsReportCell appearance;
    boolean updating = false;
    /**
     * Creates new form AdsReportLineSpacingPanel
     */
    public AdsReportLineSpacingPanel() {
        initComponents();
        lineSpinnerPts.setModel(new BigDecimalSpinnerModel(BigDecimal.ZERO, BigDecimal.ZERO, BigDecimal.valueOf(1000), BigDecimal.valueOf(0.1)));
        lineSpinnerPts.setEditor(new CheckedBigDecimalSpinnerEditor(lineSpinnerPts));
        lineSpinnerMM.setModel(new BigDecimalSpinnerModel(BigDecimal.ZERO, BigDecimal.ZERO, BigDecimal.valueOf(1000), BigDecimal.valueOf(0.1)));
        lineSpinnerMM.setEditor(new CheckedBigDecimalSpinnerEditor(lineSpinnerMM));
    }
    
    public void open(AdsReportCell appearance) {
        this.appearance = appearance;
        updating = true;
        lineSpinnerPts.setValue(BigDecimal.valueOf(appearance.getLineSpacingPts()));
        lineSpinnerMM.setValue(BigDecimal.valueOf(appearance.getLineSpacingMm()));
        updating = false;
        updateEnableState();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel8 = new javax.swing.JLabel();
        lineSpinnerPts = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        lineSpinnerMM = new javax.swing.JSpinner();
        jLabel11 = new javax.swing.JLabel();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel8, org.openide.util.NbBundle.getMessage(AdsReportLineSpacingPanel.class, "AdsReportLineSpacingPanel.jLabel8.text")); // NOI18N

        lineSpinnerPts.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                lineSpinnerPtsStateChanged(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel10, org.openide.util.NbBundle.getMessage(AdsReportLineSpacingPanel.class, "AdsReportLineSpacingPanel.jLabel10.text")); // NOI18N

        lineSpinnerMM.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                lineSpinnerMMStateChanged(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel11, org.openide.util.NbBundle.getMessage(AdsReportLineSpacingPanel.class, "AdsReportLineSpacingPanel.jLabel11.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lineSpinnerPts, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addGap(4, 4, 4)
                .addComponent(lineSpinnerMM, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel8)
                .addComponent(lineSpinnerPts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel10)
                .addComponent(lineSpinnerMM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel11))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void lineSpinnerPtsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_lineSpinnerPtsStateChanged
        if (!updating) {
            updating = true;
            double oldValue = ((BigDecimal) lineSpinnerMM.getValue()).doubleValue();
            double newValue = AdsReportUtils.pts2mm(((BigDecimal) lineSpinnerPts.getValue()).doubleValue());
            lineSpinnerMM.getModel().setValue(BigDecimal.valueOf(newValue));
            updating = false;
            firePropertyChange(AdsReportDialogsUtils.LINE_SPACING, oldValue , newValue);
        }
    }//GEN-LAST:event_lineSpinnerPtsStateChanged

    private void lineSpinnerMMStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_lineSpinnerMMStateChanged
        if (!updating) {
            updating = true;
            double oldValue = AdsReportUtils.pts2mm(((BigDecimal) lineSpinnerPts.getValue()).doubleValue());
            double newValue = ((BigDecimal) lineSpinnerMM.getValue()).doubleValue();
            lineSpinnerPts.getModel().setValue(BigDecimal.valueOf(AdsReportUtils.mm2pts(newValue)));
            updating = false;
            firePropertyChange(AdsReportDialogsUtils.LINE_SPACING, oldValue , newValue);
        }
    }//GEN-LAST:event_lineSpinnerMMStateChanged

    @Override
    public void setEnabled(boolean enabled) {
        super.setEnabled(enabled);
        lineSpinnerPts.setEnabled(enabled);
        lineSpinnerMM.setEnabled(enabled);
    }
    
    private void updateEnableState() {
        boolean isReadonly = appearance == null || appearance.isReadOnly() || appearance.getOwnerForm() == null || appearance.getOwnerForm().getMode() == AdsReportForm.Mode.TEXT;
        setEnabled(!isReadonly);
    }
    
    public void apply(AdsReportCell appearance) {
        appearance.setLineSpacingMm(((BigDecimal) lineSpinnerMM.getValue()).doubleValue());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JSpinner lineSpinnerMM;
    private javax.swing.JSpinner lineSpinnerPts;
    // End of variables declaration//GEN-END:variables
}
