/*
 * Copyright (c) 2008-2015, Compass Plus Limited. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License,
 * v. 2.0. If a copy of the MPL was not distributed with this file, You can
 * obtain one at http://mozilla.org/MPL/2.0/. This Source Code is distributed
 * WITHOUT ANY WARRANTY; including any implied warranties but not limited to
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * Mozilla Public License, v. 2.0. for more details.
 */

/*
 * AxisLocationPanel.java
 *
 * Created on May 29, 2012, 12:57:07 PM
 */
package org.radixware.kernel.designer.ads.editors.clazz.report.chart;

import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import org.openide.util.NbBundle;
import org.radixware.kernel.common.defs.ads.clazz.sql.report.AdsReportChartAxis;
import org.radixware.kernel.common.enums.EReportChartAxisType;


public class AxisLocationPanel extends javax.swing.JPanel {
    private static final String LEFT=NbBundle.getMessage(AxisLocationPanel.class, "ChartAppearancePanel.rbLeftLegend.text");
    private static final String BOTTOM=NbBundle.getMessage(AxisLocationPanel.class, "ChartAppearancePanel.rbBottomLegend.text");
    private static final String RIGHT=NbBundle.getMessage(AxisLocationPanel.class, "ChartAppearancePanel.rbRightLegend.text");
    private static final String TOP=NbBundle.getMessage(AxisLocationPanel.class, "ChartAppearancePanel.rbTopLegend.text");
    
    private AdsReportChartAxis axis;

    /** Creates new form AxisLocationPanel */
    public AxisLocationPanel() {
        initComponents();
        //rbLeftOrBottom.setSelected(true);
        rbLeftOrBottom.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(final ItemEvent e) {
               if(axis!=null){
                   axis.setIsRightOrTop(!rbLeftOrBottom.isSelected());
               } 
            }
        });        
        rbRightOrTop.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(final ItemEvent e) {
               if(axis!=null){
                   axis.setIsRightOrTop(rbRightOrTop.isSelected());
               } 
            }
        });
    }
    
    private void setPanelEnabled(final boolean enabled){
        rbLeftOrBottom.setEnabled(enabled); 
        rbRightOrTop.setEnabled(enabled); 
        this.setEnabled(enabled);
    }
     
     public void setAxis(final AdsReportChartAxis axis){
         this.axis=axis;
         setPanelEnabled(axis!=null);
         if(axis!=null){
             if(axis.getAxisType()==EReportChartAxisType.DOMAIN_AXIS){
                 rbLeftOrBottom.setText(BOTTOM);
                 rbRightOrTop.setText(TOP);
             }else{
                 rbLeftOrBottom.setText(LEFT);
                 rbRightOrTop.setText(RIGHT);
             }
             if(axis.isRightOrTop()){
                 rbRightOrTop.setSelected(true);    
             }else{
                 rbLeftOrBottom.setSelected(true);
             }
         }
     }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        rbLeftOrBottom = new javax.swing.JRadioButton();
        rbRightOrTop = new javax.swing.JRadioButton();

        setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(AxisLocationPanel.class, "AxisLocationPanel.border.title"))); // NOI18N

        buttonGroup1.add(rbLeftOrBottom);
        rbLeftOrBottom.setText(org.openide.util.NbBundle.getMessage(AxisLocationPanel.class, "AxisLocationPanel.rbLeftOrBottom.text")); // NOI18N

        buttonGroup1.add(rbRightOrTop);
        rbRightOrTop.setText(org.openide.util.NbBundle.getMessage(AxisLocationPanel.class, "AxisLocationPanel.rbRightOrTop.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbLeftOrBottom)
                    .addComponent(rbRightOrTop))
                .addContainerGap(234, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(rbLeftOrBottom)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbRightOrTop)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton rbLeftOrBottom;
    private javax.swing.JRadioButton rbRightOrTop;
    // End of variables declaration//GEN-END:variables
}
