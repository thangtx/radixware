/*
 * Copyright (c) 2008-2015, Compass Plus Limited. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License,
 * v. 2.0. If a copy of the MPL was not distributed with this file, You can
 * obtain one at http://mozilla.org/MPL/2.0/. This Source Code is distributed
 * WITHOUT ANY WARRANTY; including any implied warranties but not limited to
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * Mozilla Public License, v. 2.0. for more details.
 */

/*
 * CsvDelimiterPanel.java
 *
 * Created on Jun 8, 2012, 4:05:44 PM
 */
package org.radixware.kernel.designer.ads.editors.clazz.report;

import javax.swing.event.CaretEvent;
import javax.swing.event.CaretListener;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.PlainDocument;
import org.radixware.kernel.common.defs.ads.clazz.sql.report.AdsReportClassDef;
import org.radixware.kernel.designer.common.general.editors.OpenInfo;


public class CsvDelimiterPanel extends javax.swing.JPanel {

    private AdsReportClassDef report;

    /**
     * Creates new form CsvDelimiterPanel
     */
    public CsvDelimiterPanel() {
        initComponents();
        final MaxLengthTextDocument maxLength = new MaxLengthTextDocument();
        maxLength.setMaxChars(1);
        edDelimiter.setDocument(maxLength);
        edDelimiter.addCaretListener(new CaretListener() {

            @Override
            public void caretUpdate(final CaretEvent e) {
                //String text=edDelimiter.getText();
                //if(text.length()>1)
                //    edDelimiter.setText(text.substring(0,1));
                if (opening) {
                    return;
                }
                if (report != null) {
                    report.getCsvInfo().setDelimiter(edDelimiter.getText());
                }
            }
        });
    }
    private volatile boolean opening = false;

    public void open(final AdsReportClassDef report,final OpenInfo openInfo) {
        this.report = report;
        try {
            opening = true;
            final String s = report.getCsvInfo().getDelimiter();
            edDelimiter.setText(s);
        } finally {
            opening = false;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbDelimiter = new javax.swing.JLabel();
        edDelimiter = new javax.swing.JTextField();

        lbDelimiter.setText(org.openide.util.NbBundle.getMessage(CsvDelimiterPanel.class, "CsvDelimiterPanel.lbDelimiter.text")); // NOI18N

        edDelimiter.setText(org.openide.util.NbBundle.getMessage(CsvDelimiterPanel.class, "CsvDelimiterPanel.edDelimiter.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbDelimiter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(edDelimiter, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbDelimiter)
                    .addComponent(edDelimiter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField edDelimiter;
    private javax.swing.JLabel lbDelimiter;
    // End of variables declaration//GEN-END:variables

    public class MaxLengthTextDocument extends PlainDocument {
        //Store maximum characters permitted

        private int maxChars;

        @Override
        public void insertString(final int offs, final String str, final AttributeSet a)
                throws BadLocationException {
            if (str != null && (getLength() + str.length() <= maxChars)) {
                super.insertString(offs, str, a);
            }
        }

        void setMaxChars(final int maxChars) {
            this.maxChars = maxChars;
        }
    }
}
