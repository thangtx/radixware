/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.radixware.kernel.designer.ads.editors.clazz.report;

import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import org.radixware.kernel.common.defs.ads.clazz.sql.report.AdsReportWidget;
import org.radixware.kernel.designer.common.dialogs.components.state.StateAbstractDialog;

public class AdsReportWidgetNamePanel extends StateAbstractDialog.StateAbstractPanel {
    public static String CHANGE_NAME = "ChangeName";
    /**
     * Creates new form AdsReportCellNamePanel
     */
    public AdsReportWidgetNamePanel(final AdsReportWidget widget) {
        initComponents();
        this.widget = widget;
        open();
        isInModel = false;
    }
    
    private AdsReportWidgetNamePanel(final AdsReportWidget cell, boolean isInModel) {
        this(cell);
        this.isInModel = isInModel;
    }
    
    public static boolean showModal(final AdsReportWidget cell){
        final AdsReportWidgetNamePanel panel = new AdsReportWidgetNamePanel(cell, true);
        StateAbstractDialog md = new StateAbstractDialog(panel, "Rename") {
            @Override
            protected void apply() {
                panel.apply();
            }
        };
        
        return md.showModal();
    }
    
    public final void open() {
        textName.getDocument().removeDocumentListener(listener);
        String name = widget.getName();
        if (name != null) {
            textName.setText(name);
        }
        textName.getDocument().addDocumentListener(listener);
    }
    
    public void update(){
        if (!isInModel){
            apply();
        } else {
            check();
        }
    }
    
    public void apply(){
        widget.setName(textName.getText());
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        textName = new javax.swing.JTextField();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(AdsReportWidgetNamePanel.class, "AdsReportWidgetNamePanel.jLabel1.text")); // NOI18N

        textName.setText(org.openide.util.NbBundle.getMessage(AdsReportWidgetNamePanel.class, "AdsReportWidgetNamePanel.textName.text")); // NOI18N
        textName.setMinimumSize(new java.awt.Dimension(100, 20));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1)
                .addGap(5, 5, 5)
                .addComponent(textName, javax.swing.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    
    private final AdsReportWidget widget;
    private boolean isInModel;
    private final DocumentListener listener = new DocumentListener() {

        @Override
        public void insertUpdate(DocumentEvent e) {
            update();
        }

        @Override
        public void removeUpdate(DocumentEvent e) {
            update();
        }

        @Override
        public void changedUpdate(DocumentEvent e) {
            update();
        }

    };

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField textName;
    // End of variables declaration//GEN-END:variables

    @Override
    public void check() {
        String name = textName.getText();
        if (name == null){
            stateManager.error("Incorrect name");
        }else {
            stateManager.ok();
        }
        changeSupport.fireChange();
    }
}
