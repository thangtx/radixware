/*
 * Copyright (c) 2008-2015, Compass Plus Limited. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License,
 * v. 2.0. If a copy of the MPL was not distributed with this file, You can
 * obtain one at http://mozilla.org/MPL/2.0/. This Source Code is distributed
 * WITHOUT ANY WARRANTY; including any implied warranties but not limited to
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * Mozilla Public License, v. 2.0. for more details.
 */

package org.radixware.kernel.designer.ads.editors.clazz.report;

import java.util.List;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import org.radixware.kernel.common.defs.ExtendableDefinitions.EScope;
import org.radixware.kernel.common.defs.ads.clazz.members.AdsPropertyDef;
import org.radixware.kernel.common.defs.ads.clazz.sql.report.AdsReportDbImageCell;
import org.radixware.kernel.common.defs.ads.common.AdsVisitorProviders;
import org.radixware.kernel.common.utils.RadixObjectsUtils;


public class AdsReportDbImageCellEditor extends javax.swing.JPanel {

    private volatile boolean updating = false;
    private final AdsReportDbImageCell cell;

    /** Creates new form AdsReportDbImageCellEditor */
    public AdsReportDbImageCellEditor(final AdsReportDbImageCell cell) {
        this.cell = cell;
        initComponents();

        imageDataPropertyDefinitionLinkEditPanel.setComboMode();
        List<AdsPropertyDef> list = cell.getOwnerBand().getOwnerForm().getOwnerReport().getProperties().get(
                EScope.ALL, AdsVisitorProviders.newDataPropForReportDbImageCellFilter());
        RadixObjectsUtils.sortByName(list);
        imageDataPropertyDefinitionLinkEditPanel.setComboBoxValues(list, false);
        imageDataPropertyDefinitionLinkEditPanel.addChangeListener(new ChangeListener() {

            @Override
            public void stateChanged(final ChangeEvent e) {
                if (!updating) {
                    AdsReportDbImageCellEditor.this.cell.setDataPropertyId(
                            imageDataPropertyDefinitionLinkEditPanel.getDefinitionId());
                }
            }
        });

        imageMimeTypePropertyDefinitionLinkEditPanel.setComboMode();
        list = cell.getOwnerBand().getOwnerForm().getOwnerReport().getProperties().get(
                EScope.ALL, AdsVisitorProviders.newMimeTypePropForReportDbImageCellFilter());
        RadixObjectsUtils.sortByName(list);
        imageMimeTypePropertyDefinitionLinkEditPanel.setComboBoxValues(list, false);
        imageMimeTypePropertyDefinitionLinkEditPanel.addChangeListener(new ChangeListener() {

            @Override
            public void stateChanged(final ChangeEvent e) {
                if (!updating) {
                    AdsReportDbImageCellEditor.this.cell.setMimeTypePropertyId(
                            imageMimeTypePropertyDefinitionLinkEditPanel.getDefinitionId());
                }
            }
        });

        setupInitialValues();
    }

    private void setupInitialValues() {
        updating = true;
        imageDataPropertyDefinitionLinkEditPanel.open(cell.findDataProperty(), cell.getDataPropertyId());
        imageMimeTypePropertyDefinitionLinkEditPanel.open(cell.findMimeTypeProperty(), cell.getMimeTypePropertyId());
        updateEnableState();
        updating = false;
    }

    private void updateEnableState() {
        final boolean enabled = !cell.isReadOnly();
        imageDataPropertyDefinitionLinkEditPanel.setEnabled(enabled);
        imageMimeTypePropertyDefinitionLinkEditPanel.setEnabled(enabled);
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        imageDataPropertyDefinitionLinkEditPanel = new org.radixware.kernel.designer.common.dialogs.components.DefinitionLinkEditPanel();
        jLabel2 = new javax.swing.JLabel();
        imageMimeTypePropertyDefinitionLinkEditPanel = new org.radixware.kernel.designer.common.dialogs.components.DefinitionLinkEditPanel();

        jLabel1.setText(org.openide.util.NbBundle.getMessage(AdsReportDbImageCellEditor.class, "AdsReportDbImageCellEditor.jLabel1.text")); // NOI18N

        jLabel2.setText(org.openide.util.NbBundle.getMessage(AdsReportDbImageCellEditor.class, "AdsReportDbImageCellEditor.jLabel2.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(imageDataPropertyDefinitionLinkEditPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                    .addComponent(imageMimeTypePropertyDefinitionLinkEditPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(imageDataPropertyDefinitionLinkEditPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(imageMimeTypePropertyDefinitionLinkEditPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(232, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.radixware.kernel.designer.common.dialogs.components.DefinitionLinkEditPanel imageDataPropertyDefinitionLinkEditPanel;
    private org.radixware.kernel.designer.common.dialogs.components.DefinitionLinkEditPanel imageMimeTypePropertyDefinitionLinkEditPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables

}
