/*
 * Copyright (c) 2008-2015, Compass Plus Limited. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License,
 * v. 2.0. If a copy of the MPL was not distributed with this file, You can
 * obtain one at http://mozilla.org/MPL/2.0/. This Source Code is distributed
 * WITHOUT ANY WARRANTY; including any implied warranties but not limited to
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * Mozilla Public License, v. 2.0. for more details.
 */
package org.radixware.kernel.designer.ads.editors.clazz.report;

import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import org.radixware.kernel.common.defs.ads.clazz.sql.report.AdsReportFormat;
import org.radixware.kernel.common.enums.ETriadDelimeterType;
import org.radixware.kernel.designer.common.dialogs.components.KernelEnumComboBoxModel;

public final class IntFormatPanel extends AbstractFormatPanel {        
    /**
     * Creates new form IntFornatPanel
     */
    public IntFormatPanel(final AdsReportFormat cell, boolean isReadOnly) {
        super(cell, isReadOnly);
        
        initComponents();                
        triadDelimeterTextField.getDocument().addDocumentListener(new DocumentListener() {
            
            @Override
            public void insertUpdate(DocumentEvent de) {
                changedUpdate(de);
            }
            
            @Override
            public void removeUpdate(DocumentEvent de) {
                changedUpdate(de);
            }
            
            @Override
            public void changedUpdate(DocumentEvent de) {
                if (cell != null && !updating) {
                    final ETriadDelimeterType delimeterType = getDelimTypeModel().getSelectedItemSource();
                    if (delimeterType == ETriadDelimeterType.SPECIFIED) {
                        cell.setTriadDelimeter(triadDelimeterTextField.getText());
                    }
                }
            }
        });
        setupInitialValues();
        updateEnableState();
    }
    
    private boolean updating = false;
    
    @Override
    protected void setupInitialValues() {
        updating = true;
        if (cell.getTriadDelimeter() != null) {
            triadDelimeterTextField.setText(cell.getTriadDelimeter());
        }
        getDelimTypeModel().setSelectedItemSource(cell.getTriadDelimeterType());
        updating = false;
    }
    
    private KernelEnumComboBoxModel<ETriadDelimeterType> getDelimTypeModel() {
        return ((KernelEnumComboBoxModel<ETriadDelimeterType>) cmbDelimType.getModel());
    }
    
    private void updateEnableState() {
        cmbDelimType.setEnabled(!isReadOnly);
        final ETriadDelimeterType delimeterType = getDelimTypeModel().getSelectedItemSource();
        final boolean specified = !isReadOnly && delimeterType == ETriadDelimeterType.SPECIFIED;
        triadDelimeterTextField.setEnabled(specified);
        lblTriadDelim.setEnabled(specified);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblDelimType = new javax.swing.JLabel();
        cmbDelimType = new javax.swing.JComboBox<KernelEnumComboBoxModel.Item<ETriadDelimeterType>>();
        lblTriadDelim = new javax.swing.JLabel();
        triadDelimeterTextField = new javax.swing.JFormattedTextField();

        lblDelimType.setText(org.openide.util.NbBundle.getMessage(IntFormatPanel.class, "IntFormatPanel.lblDelimType.text")); // NOI18N

        cmbDelimType.setModel(new org.radixware.kernel.designer.common.dialogs.components.KernelEnumComboBoxModel<>(ETriadDelimeterType.class, ETriadDelimeterType.DEFAULT));
        cmbDelimType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbDelimTypeItemStateChanged(evt);
            }
        });

        lblTriadDelim.setText(org.openide.util.NbBundle.getMessage(IntFormatPanel.class, "IntFormatPanel.lblTriadDelim.text")); // NOI18N

        try {
            triadDelimeterTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("*")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cmbDelimType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(lblTriadDelim, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(triadDelimeterTextField))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblDelimType)
                                .addGap(0, 229, Short.MAX_VALUE)))
                        .addGap(12, 12, 12))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblDelimType, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbDelimType, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTriadDelim, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(triadDelimeterTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmbDelimTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbDelimTypeItemStateChanged
        updateEnableState();
        if (cell != null && !updating) {
            cell.setTriadDelimeterType(getDelimTypeModel().getSelectedItemSource());
        }
    }//GEN-LAST:event_cmbDelimTypeItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<KernelEnumComboBoxModel.Item<ETriadDelimeterType>> cmbDelimType;
    private javax.swing.JLabel lblDelimType;
    private javax.swing.JLabel lblTriadDelim;
    private javax.swing.JFormattedTextField triadDelimeterTextField;
    // End of variables declaration//GEN-END:variables
}
