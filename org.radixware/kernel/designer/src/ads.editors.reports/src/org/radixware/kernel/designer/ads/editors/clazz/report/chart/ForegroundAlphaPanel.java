/*
 * Copyright (c) 2008-2015, Compass Plus Limited. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License,
 * v. 2.0. If a copy of the MPL was not distributed with this file, You can
 * obtain one at http://mozilla.org/MPL/2.0/. This Source Code is distributed
 * WITHOUT ANY WARRANTY; including any implied warranties but not limited to
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * Mozilla Public License, v. 2.0. for more details.
 */

package org.radixware.kernel.designer.ads.editors.clazz.report.chart;

import java.math.BigDecimal;
import javax.swing.event.ChangeListener;
import org.openide.util.ChangeSupport;
import org.radixware.kernel.common.defs.ads.clazz.sql.report.AdsReportChartCell;
import org.radixware.kernel.designer.common.dialogs.components.BigDecimalSpinnerModel;
import org.radixware.kernel.designer.common.dialogs.components.CheckedBigDecimalSpinnerEditor;


public class ForegroundAlphaPanel extends javax.swing.JPanel {

    private AdsReportChartCell cell;
    final ChangeSupport changeSupport = new ChangeSupport(this);
    /**
     * Creates new form ForegroundAlphaPanel
     */
    public ForegroundAlphaPanel() {
        super();
        initComponents();
        foregroundAlphaSpinner.setModel(new BigDecimalSpinnerModel(BigDecimal.valueOf(1),  BigDecimal.valueOf(0.1), BigDecimal.valueOf(1), BigDecimal.valueOf(0.1)));
        foregroundAlphaSpinner.setEditor(new CheckedBigDecimalSpinnerEditor(foregroundAlphaSpinner));
    }

    public void setCell(final AdsReportChartCell cell){
        this.cell=cell;
        foregroundAlphaSpinner.setValue(BigDecimal.valueOf(cell.getForegroundAlpha()));
    }
    
    public final void addChangeListener(final ChangeListener l) {
        changeSupport.addChangeListener(l);
    }
    
    public void apply() {     
        cell.setForegroundAlpha(((BigDecimal) foregroundAlphaSpinner.getValue()).doubleValue());
    } 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbForegroundAlpha = new javax.swing.JLabel();
        foregroundAlphaSpinner = new javax.swing.JSpinner();

        lbForegroundAlpha.setText(org.openide.util.NbBundle.getMessage(ForegroundAlphaPanel.class, "ForegroundAlphaPanel.lbForegroundAlpha.text")); // NOI18N

        foregroundAlphaSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                foregroundAlphaSpinnerStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lbForegroundAlpha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(foregroundAlphaSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(lbForegroundAlpha)
                .addComponent(foregroundAlphaSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void foregroundAlphaSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_foregroundAlphaSpinnerStateChanged
        if (cell!=null) {
            apply();
            changeSupport.fireChange();
        }
    }//GEN-LAST:event_foregroundAlphaSpinnerStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner foregroundAlphaSpinner;
    private javax.swing.JLabel lbForegroundAlpha;
    // End of variables declaration//GEN-END:variables
}
