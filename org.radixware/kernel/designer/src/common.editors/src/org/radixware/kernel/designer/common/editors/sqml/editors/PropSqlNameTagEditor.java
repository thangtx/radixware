/*
 * Copyright (c) 2008-2015, Compass Plus Limited. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License,
 * v. 2.0. If a copy of the MPL was not distributed with this file, You can
 * obtain one at http://mozilla.org/MPL/2.0/. This Source Code is distributed
 * WITHOUT ANY WARRANTY; including any implied warranties but not limited to
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * Mozilla Public License, v. 2.0. for more details.
 */

package org.radixware.kernel.designer.common.editors.sqml.editors;

import org.radixware.kernel.common.sqml.tags.PropSqlNameTag;


public class PropSqlNameTagEditor extends SqmlTagEditor<PropSqlNameTag> {

    /** Creates new form PropSqlNameTagEditor */
    public PropSqlNameTagEditor() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbTableAlias = new javax.swing.JCheckBox();

        cbTableAlias.setText(org.openide.util.NbBundle.getMessage(PropSqlNameTagEditor.class, "PropSqlNameTagEditor.cbTableAlias.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbTableAlias, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbTableAlias)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    @Override
    protected String getTitleKey() {
        return ("prop-sql-name-tag-editor-title");
    }

    @Override
    protected boolean tagDefined() {
        return true;
    }

    @Override
    protected void applyChanges() {
        if (cbTableAlias.isSelected()) {
            getObject().setOwnerType(PropSqlNameTag.EOwnerType.TABLE);
        } else {
            getObject().setOwnerType(PropSqlNameTag.EOwnerType.NONE);
        }
    }

    @Override
    protected void afterOpen() {
        cbTableAlias.setSelected(getObject().getOwnerType() == PropSqlNameTag.EOwnerType.TABLE);
    }

    @Override
    protected void setReadOnly(boolean readOnly) {
        cbTableAlias.setEnabled(!readOnly);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox cbTableAlias;
    // End of variables declaration//GEN-END:variables
}
