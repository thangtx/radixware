/*
 * Copyright (c) 2008-2015, Compass Plus Limited. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License,
 * v. 2.0. If a copy of the MPL was not distributed with this file, You can
 * obtain one at http://mozilla.org/MPL/2.0/. This Source Code is distributed
 * WITHOUT ANY WARRANTY; including any implied warranties but not limited to
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * Mozilla Public License, v. 2.0. for more details.
 */

package org.radixware.kernel.designer.common.dialogs.components;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Set;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import org.openide.util.ChangeSupport;
import org.radixware.kernel.common.defs.ads.module.AdsModule;
import org.radixware.kernel.common.enums.EDefType;
import org.radixware.kernel.common.enums.EValType;
import org.radixware.kernel.common.utils.ValTypes;
import org.radixware.kernel.designer.common.dialogs.utils.NameAcceptorFactory;


public class SpecifyNameAndValTypePanel extends javax.swing.JPanel implements ActionListener {

    private ChangeSupport changeSupport = new ChangeSupport(this);
    private boolean valTypeIsSet = false;
    private final ChangeListener changeListener = new ChangeListener() {
        @Override
        public void stateChanged(ChangeEvent e) {
            if (valTypeIsSet) {
                if (valTypeEditPanel.getValType() == EValType.STR) {
                    chIdContainer.setVisible(true);
                } else {
                    chIdContainer.setVisible(false);
                }
            } else {
                chIdContainer.setVisible(false);
            }
            SpecifyNameAndValTypePanel.this.changeSupport.fireChange();
        }
    };

    public SpecifyNameAndValTypePanel() {
        super();
        initComponents();
        valTypeIsSet = false;
        nameEditPanel.addChangeListener(changeListener);
        valTypeEditPanel.addChangeListener(changeListener);
        nameEditPanel.setCurrentName("NewEnumeration");

        valTypeEditPanel.setFilter(ValTypes.ENUM_TYPES);
        changeSupport.fireChange();
    }

    public void open(AdsModule container) {
        nameEditPanel.setNameAcceptor(NameAcceptorFactory.newCreateAcceptor(container.getDefinitions(), EDefType.ENUMERATION));
    }

    public void setValType(EValType valType) {
        valTypeEditPanel.setValType(valType);
        if (valType == EValType.STR) {
            chIdContainer.setVisible(true);
        } else {
            chIdContainer.setVisible(false);
        }
        valTypeIsSet = true;
    }

    public boolean isIdEnum() {
        return chIdContainer.isSelected();
    }

    public void setIdEnum(boolean isId) {
        chIdContainer.setSelected(isId);
    }

    public void setFilter(Set<EValType> filter) {
        valTypeEditPanel.setFilter(filter);
    }

    public EValType getValType() {
        return valTypeEditPanel.getValType();
    }

    public Set<EValType> getFilter() {
        return valTypeEditPanel.getFilter();
    }

    public void setCurrentName(String name) {
        nameEditPanel.setCurrentName(name);
    }

    public String getCurrentName() {
        return nameEditPanel.getCurrentName();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nameEditPanel = new org.radixware.kernel.designer.common.dialogs.components.NameEditPanel();
        lbItemType = new javax.swing.JLabel();
        lbName = new javax.swing.JLabel();
        valTypeEditPanel = new org.radixware.kernel.designer.common.dialogs.components.ValTypeComboBox();
        chIdContainer = new javax.swing.JCheckBox();

        lbItemType.setText(org.openide.util.NbBundle.getMessage(SpecifyNameAndValTypePanel.class, "SpecifyNameAndValTypePanel.lbItemType.text")); // NOI18N

        lbName.setText(org.openide.util.NbBundle.getMessage(SpecifyNameAndValTypePanel.class, "SpecifyNameAndValTypePanel.lbName.text")); // NOI18N

        chIdContainer.setText(org.openide.util.NbBundle.getMessage(SpecifyNameAndValTypePanel.class, "SpecifyNameAndValTypePanel.chIdContainer.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbName)
                    .addComponent(lbItemType))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chIdContainer)
                    .addComponent(valTypeEditPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
                    .addComponent(nameEditPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameEditPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbItemType)
                    .addComponent(valTypeEditPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chIdContainer)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void actionPerformed(ActionEvent ev) {
        Object source = ev.getSource();

        if (source == nameEditPanel || source == valTypeEditPanel) {
            changeSupport.fireChange();
        }
    }

    public boolean isNameTyped() {
        return nameEditPanel.isKeyTyped();
    }

    public final void addChangeListener(ChangeListener l) {
        changeSupport.addChangeListener(l);
    }

    public final void removeChangeListener(ChangeListener l) {
        changeSupport.removeChangeListener(l);
    }

    public boolean isComplete() {
        boolean complete = nameEditPanel.isComplete();

        if (!valTypeEditPanel.isComplete()) {
            complete = false;
        }

        return complete;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chIdContainer;
    private javax.swing.JLabel lbItemType;
    private javax.swing.JLabel lbName;
    private org.radixware.kernel.designer.common.dialogs.components.NameEditPanel nameEditPanel;
    private org.radixware.kernel.designer.common.dialogs.components.ValTypeComboBox valTypeEditPanel;
    // End of variables declaration//GEN-END:variables
}
