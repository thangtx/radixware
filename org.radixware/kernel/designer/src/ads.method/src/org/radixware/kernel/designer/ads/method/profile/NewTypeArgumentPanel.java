/*
 * Copyright (c) 2008-2015, Compass Plus Limited. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License,
 * v. 2.0. If a copy of the MPL was not distributed with this file, You can
 * obtain one at http://mozilla.org/MPL/2.0/. This Source Code is distributed
 * WITHOUT ANY WARRANTY; including any implied warranties but not limited to
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * Mozilla Public License, v. 2.0. for more details.
 */

/*
 * NewTypeArgumentPanel.java
 *
 * Created on 12.05.2009, 14:23:50
 */

package org.radixware.kernel.designer.ads.method.profile;

import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import org.openide.util.ChangeSupport;
import org.openide.util.NbBundle;
import org.radixware.kernel.common.defs.ads.AdsDefinition;
import org.radixware.kernel.common.defs.ads.type.AdsTypeDeclaration;
import org.radixware.kernel.designer.common.dialogs.choosetype.ChooseType;
import org.radixware.kernel.designer.common.dialogs.utils.ModalDisplayer;
import org.radixware.kernel.common.resources.RadixWareIcons;
import org.radixware.kernel.designer.common.dialogs.choosetype.ETypeNature;
import org.radixware.kernel.designer.common.dialogs.choosetype.ITypeFilter;

@Deprecated
class NewTypeArgumentPanel extends javax.swing.JPanel {

    private class NewTypeArgumentDisplayer extends ModalDisplayer
                                        implements ChangeListener {

        public NewTypeArgumentDisplayer(NewTypeArgumentPanel panel){
            super(panel);
            panel.addChangeListener(this);
            getDialogDescriptor().setValid(panel.isComplete());
            setTitle(NbBundle.getMessage(NewParameterPanel.class, "TypeArgumentTip"));
            panel.setMinimumSize(new Dimension(200, panel.getMinimumSize().height+85));
            panel.setMaximumSize(new Dimension(Short.MAX_VALUE, panel.getMaximumSize().height+85));
        }

        @Override
        protected void apply() {
        }

        @Override
        public void stateChanged(ChangeEvent e) {
            if (e.getSource().equals(getComponent())){
                getDialogDescriptor().setValid(((NewTypeArgumentPanel)getComponent()).isComplete());
            }
        }

    }

    public boolean edit(){
        NewTypeArgumentDisplayer displayer = new NewTypeArgumentDisplayer(this);
        return displayer.showModal();
    }


    /** Creates new form NewTypeArgumentPanel */
    public NewTypeArgumentPanel(final AdsDefinition context,final AdsTypeDeclaration.TypeArgument argument) {
        initComponents();
        DefaultComboBoxModel model = new DefaultComboBoxModel(AdsTypeDeclaration.TypeArgument.Derivation.values());
        derivationEditor.setModel(model);
        JButton typeBtn = typeEditor.addButton();
        typeBtn.setIcon(RadixWareIcons.DIALOG.CHOOSE.getIcon(13, 13));
        ActionListener btnListener = new ActionListener(){

            @Override
            public void actionPerformed(ActionEvent e) {

                ChooseType.DefaultTypeFilter typeFilter = new ChooseType.DefaultTypeFilter(context, null);
                typeFilter.except(ETypeNature.JAVA_PRIMITIVE);
                AdsTypeDeclaration newtype = ChooseType.getInstance().chooseType(typeFilter);
                if (newtype != null){
                    argument.setType(newtype);
                    NewTypeArgumentPanel.this.typeEditor.setValue(newtype.getName(context));
                    NewTypeArgumentPanel.this.changeSupport.fireChange();
                }
            }

        };
        typeBtn.addActionListener(btnListener);
        typeEditor.setReadOnly(true);

        ChangeListener nameListener = new ChangeListener(){

            @Override
            public void stateChanged(ChangeEvent e) {
                argument.setName(NewTypeArgumentPanel.this.nameEditor.getCurrentName());
                NewTypeArgumentPanel.this.changeSupport.fireChange();
            }

        };
        nameEditor.addChangeListener(nameListener);

        nameEditor.setCurrentName(argument.getName(context));
        typeEditor.setValue(argument.getType().getName(context));
        derivationEditor.setActionCommand(argument.getDerivation().toString());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        typeEditor = new org.radixware.kernel.common.components.ExtendableTextField();
        derivationEditor = new javax.swing.JComboBox();
        nameEditor = new org.radixware.kernel.designer.common.dialogs.components.NameEditPanel();
        stateDisplayer1 = new org.radixware.kernel.designer.common.dialogs.components.state.StateDisplayer();

        setMinimumSize(getPreferredSize());

        jLabel1.setText(org.openide.util.NbBundle.getMessage(NewTypeArgumentPanel.class, "NameTip")); // NOI18N

        jLabel2.setText(org.openide.util.NbBundle.getMessage(NewTypeArgumentPanel.class, "DerivationTip")); // NOI18N

        jLabel3.setText(org.openide.util.NbBundle.getMessage(NewTypeArgumentPanel.class, "TypeTip")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(stateDisplayer1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(derivationEditor, 0, 236, Short.MAX_VALUE)
                    .addComponent(typeEditor, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
                    .addComponent(nameEditor, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nameEditor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(derivationEditor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(typeEditor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stateDisplayer1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox derivationEditor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private org.radixware.kernel.designer.common.dialogs.components.NameEditPanel nameEditor;
    private org.radixware.kernel.designer.common.dialogs.components.state.StateDisplayer stateDisplayer1;
    private org.radixware.kernel.common.components.ExtendableTextField typeEditor;
    // End of variables declaration//GEN-END:variables

    private ChangeSupport changeSupport = new ChangeSupport(this);

    public void addChangeListener(ChangeListener l) {
        changeSupport.addChangeListener(l);
    }

    public void removeChangeListener(ChangeListener l) {
        changeSupport.removeChangeListener(l);
    }

    public boolean isComplete() {
        return nameEditor.isComplete();
    }


}
