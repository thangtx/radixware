/*
 * Copyright (c) 2008-2015, Compass Plus Limited. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License,
 * v. 2.0. If a copy of the MPL was not distributed with this file, You can
 * obtain one at http://mozilla.org/MPL/2.0/. This Source Code is distributed
 * WITHOUT ANY WARRANTY; including any implied warranties but not limited to
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * Mozilla Public License, v. 2.0. for more details.
 */

package org.radixware.kernel.designer.tree.ads.nodes.defs.msdl.misc;

import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import org.radixware.kernel.common.msdl.fields.AbstractFieldModel;
import org.radixware.kernel.designer.tree.ads.nodes.defs.msdl.MsdlFieldNode;


public class ReuseFieldsDialog extends javax.swing.JDialog {

    private List<String> reusedFieldsNames = new ArrayList<>(10);
    private boolean accepted = false;
    private MsdlFieldNode node = null;
    
    /**
     * Creates new form ReuseFieldsDialog
     */
    public ReuseFieldsDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setTitle("Choose unused fields for reuse");
    }
    
    public ReuseFieldsDialog(MsdlFieldNode node) {
        super();
        initComponents();
        this.setTitle("Choose unused fields for reuse");
        this.node = node;
        fillStringList();
    }
    
    private void fillStringList() {
        AbstractFieldModel afm = MsdlFieldNode.getFieldModel(node);
        if (afm.getField().isSetRemovedTemplateFields()) {
            List<String> removedFields  = afm.getField().getRemovedTemplateFields();
            DefaultListModel<String> model = null;
            if(unusedFieldList.getModel() instanceof DefaultListModel) {
                model = (DefaultListModel<String>)unusedFieldList.getModel();
            }
            for (String removedFieldName: removedFields) {
                model.add(model.getSize(), removedFieldName);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        centralPane = new javax.swing.JScrollPane();
        unusedFieldList = new javax.swing.JList();
        buttonsPanel = new javax.swing.JPanel();
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        okButton = new javax.swing.JButton();
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 32767));
        cancelButton = new javax.swing.JButton();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        unusedFieldList.setModel(new javax.swing.DefaultListModel<String>()
        );
        unusedFieldList.setPreferredSize(new java.awt.Dimension(0, 100));
        centralPane.setViewportView(unusedFieldList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(centralPane, gridBagConstraints);

        buttonsPanel.setPreferredSize(new java.awt.Dimension(400, 25));
        buttonsPanel.setLayout(new javax.swing.BoxLayout(buttonsPanel, javax.swing.BoxLayout.LINE_AXIS));
        buttonsPanel.add(filler4);

        org.openide.awt.Mnemonics.setLocalizedText(okButton, org.openide.util.NbBundle.getMessage(ReuseFieldsDialog.class, "ReuseFieldsDialog.okButton.text")); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });
        buttonsPanel.add(okButton);
        buttonsPanel.add(filler3);

        cancelButton.setLabel(org.openide.util.NbBundle.getMessage(ReuseFieldsDialog.class, "ReuseFieldsDialog.cancelButton.label")); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        buttonsPanel.add(cancelButton);
        buttonsPanel.add(filler2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(buttonsPanel, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        accepted = true;
        int [] selectedIndices = unusedFieldList.getSelectedIndices();
        for(int i = 0; i < selectedIndices.length; ++i) {
            String item = (String)unusedFieldList.getModel().getElementAt(i);
            reusedFieldsNames.add(item);
        }
        this.setVisible(false);
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        accepted = false;
        this.setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed
   
    public List<String> getReusedFieldsList() {
        return reusedFieldsNames;
    }
    
    public boolean isAccepted() {
        return accepted;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonsPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JScrollPane centralPane;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.Box.Filler filler4;
    private javax.swing.JButton okButton;
    private javax.swing.JList unusedFieldList;
    // End of variables declaration//GEN-END:variables
}
