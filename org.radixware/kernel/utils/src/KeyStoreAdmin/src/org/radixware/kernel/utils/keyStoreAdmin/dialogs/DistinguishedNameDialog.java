/*
 * Copyright (c) 2008-2015, Compass Plus Limited. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License,
 * v. 2.0. If a copy of the MPL was not distributed with this file, You can
 * obtain one at http://mozilla.org/MPL/2.0/. This Source Code is distributed
 * WITHOUT ANY WARRANTY; including any implied warranties but not limited to
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * Mozilla Public License, v. 2.0. for more details.
 */

package org.radixware.kernel.utils.keyStoreAdmin.dialogs;

import java.util.ResourceBundle;
import javax.swing.JOptionPane;


public class DistinguishedNameDialog extends AKeyStoreAdminDialog {

    private static final ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/radixware/kernel/utils/keyStoreAdmin/resources/DistinguishedNameDialog");

    private String CN;
    private String OU;
    private String O;
    private String L;
    private String ST;
    private String C;
    private String UID;

    /** Creates new form DistinguishedNameDialog */
    public DistinguishedNameDialog(java.awt.Frame parent, String defaultCN, 
            String defaultOU, String defaultO, String defaultL, String defaultST,
            String defaultC, String defaultUID, boolean defaultShowEachTime) {
        super(parent);
        initComponents();
        CN = defaultCN;
        OU = defaultOU;
        O = defaultO;
        L = defaultL;
        ST = defaultST;
        C = defaultC;
        UID = defaultUID;
        jTextFieldCN.setText(defaultCN);
        jTextFieldOU.setText(defaultOU);
        jTextFieldO.setText(defaultO);
        jTextFieldL.setText(defaultL);
        jTextFieldST.setText(defaultST);
        jTextFieldC.setText(defaultC);
        jTextFieldUID.setText(defaultUID);
        jCheckBoxShowEachTime.setSelected(defaultShowEachTime);
    }

    /** @return the return status of this dialog - one of RET_OK or RET_CANCEL */
    public int getReturnStatus() {
        return returnStatus;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jLabelCN = new javax.swing.JLabel();
        jLabelOU = new javax.swing.JLabel();
        jLabelO = new javax.swing.JLabel();
        jLabelL = new javax.swing.JLabel();
        jLabelST = new javax.swing.JLabel();
        jLabelC = new javax.swing.JLabel();
        jTextFieldCN = new javax.swing.JTextField();
        jTextFieldOU = new javax.swing.JTextField();
        jTextFieldO = new javax.swing.JTextField();
        jTextFieldL = new javax.swing.JTextField();
        jTextFieldST = new javax.swing.JTextField();
        jTextFieldC = new javax.swing.JTextField();
        jCheckBoxShowEachTime = new javax.swing.JCheckBox();
        jLabelUID = new javax.swing.JLabel();
        jTextFieldUID = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/radixware/kernel/utils/keyStoreAdmin/resources/DistinguishedNameDialog"); // NOI18N
        setTitle(bundle.getString("Dialog.title")); // NOI18N
        setModal(true);
        setName("Form"); // NOI18N
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        okButton.setText(bundle.getString("okButton.text")); // NOI18N
        okButton.setName("okButton"); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText(bundle.getString("cancelButton.text")); // NOI18N
        cancelButton.setName("cancelButton"); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jLabelCN.setLabelFor(jTextFieldCN);
        jLabelCN.setText(bundle.getString("jLabelCN.text")); // NOI18N
        jLabelCN.setName("jLabelCN"); // NOI18N

        jLabelOU.setLabelFor(jTextFieldOU);
        jLabelOU.setText(bundle.getString("jLabelOU.text")); // NOI18N
        jLabelOU.setName("jLabelOU"); // NOI18N

        jLabelO.setLabelFor(jTextFieldO);
        jLabelO.setText(bundle.getString("jLabelO.text")); // NOI18N
        jLabelO.setName("jLabelO"); // NOI18N

        jLabelL.setLabelFor(jTextFieldL);
        jLabelL.setText(bundle.getString("jLabelL.text")); // NOI18N
        jLabelL.setName("jLabelL"); // NOI18N

        jLabelST.setLabelFor(jTextFieldST);
        jLabelST.setText(bundle.getString("jLabelST.text")); // NOI18N
        jLabelST.setName("jLabelST"); // NOI18N

        jLabelC.setLabelFor(jTextFieldC);
        jLabelC.setText(bundle.getString("jLabelC.text")); // NOI18N
        jLabelC.setName("jLabelC"); // NOI18N

        jTextFieldCN.setName("jTextFieldCN"); // NOI18N

        jTextFieldOU.setName("jTextFieldOU"); // NOI18N

        jTextFieldO.setName("jTextFieldO"); // NOI18N

        jTextFieldL.setName("jTextFieldL"); // NOI18N

        jTextFieldST.setName("jTextFieldST"); // NOI18N

        jTextFieldC.setName("jTextFieldC"); // NOI18N

        jCheckBoxShowEachTime.setText(bundle.getString("jCheckBoxShowEachTime.text")); // NOI18N
        jCheckBoxShowEachTime.setName("jCheckBoxShowEachTime"); // NOI18N

        jLabelUID.setText(bundle.getString("jLabelUID.text")); // NOI18N
        jLabelUID.setName("jLabelUID"); // NOI18N

        jTextFieldUID.setName("jTextFieldUID"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton)
                        .addContainerGap())
                    .addComponent(jLabelST)
                    .addComponent(jLabelC)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelCN)
                                    .addComponent(jLabelOU))
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jTextFieldCN)
                                    .addComponent(jTextFieldOU, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelO)
                                    .addComponent(jLabelL))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldL, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                                    .addComponent(jTextFieldO)
                                    .addComponent(jTextFieldST, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                                    .addComponent(jTextFieldC, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldUID, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE))))
                        .addContainerGap(11, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelUID)
                        .addContainerGap(260, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCheckBoxShowEachTime)
                        .addContainerGap(87, Short.MAX_VALUE))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelButton, okButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCN)
                    .addComponent(jTextFieldCN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelOU)
                    .addComponent(jTextFieldOU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelO)
                    .addComponent(jTextFieldO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelL)
                    .addComponent(jTextFieldL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelST)
                    .addComponent(jTextFieldST, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelC)
                    .addComponent(jTextFieldC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelUID)
                    .addComponent(jTextFieldUID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jCheckBoxShowEachTime)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(okButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        doClose(RET_OK);
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        doClose(RET_CANCEL);
    }//GEN-LAST:event_cancelButtonActionPerformed

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        doClose(RET_CANCEL);
    }//GEN-LAST:event_closeDialog

    protected void doClose(int retStatus) {
        returnStatus = retStatus;
        if (returnStatus==RET_OK){
            if (!checkInput())
                return;
            CN = jTextFieldCN.getText();
            OU = jTextFieldOU.getText();
            O = jTextFieldO.getText();
            L = jTextFieldL.getText();
            ST = jTextFieldST.getText();
            C = jTextFieldC.getText();
            UID = jTextFieldUID.getText();
        }
        setVisible(false);
        dispose();
    }

        /** Checks that input values are valid */
    private boolean checkInput(){
        String dialogTitle = bundle.getString("JOptionPaneInputError.title");
        if (jTextFieldC.getText().length()>2){
            String dialogMessage = bundle.getString("InvalidCountryName");
            JOptionPane.showMessageDialog(this, dialogMessage, dialogTitle, JOptionPane.ERROR_MESSAGE);
            jTextFieldC.requestFocusInWindow();
            return false;
        }
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JCheckBox jCheckBoxShowEachTime;
    private javax.swing.JLabel jLabelC;
    private javax.swing.JLabel jLabelCN;
    private javax.swing.JLabel jLabelL;
    private javax.swing.JLabel jLabelO;
    private javax.swing.JLabel jLabelOU;
    private javax.swing.JLabel jLabelST;
    private javax.swing.JLabel jLabelUID;
    private javax.swing.JTextField jTextFieldC;
    private javax.swing.JTextField jTextFieldCN;
    private javax.swing.JTextField jTextFieldL;
    private javax.swing.JTextField jTextFieldO;
    private javax.swing.JTextField jTextFieldOU;
    private javax.swing.JTextField jTextFieldST;
    private javax.swing.JTextField jTextFieldUID;
    private javax.swing.JButton okButton;
    // End of variables declaration//GEN-END:variables

    private int returnStatus = RET_CANCEL;

    public String getCN(){
        return CN;
    }

    public String getOU(){
        return OU;
    }

    public String getO(){
        return O;
    }

    public String getL(){
        return L;
    }

    public String getST(){
        return ST;
    }

    public String getC(){
        return C;
    }
    
    public String getUID(){
        return UID;
    }

    public boolean getShowEachTime(){
        return jCheckBoxShowEachTime.isSelected();
    }
}
