/*
 * Copyright (c) 2008-2015, Compass Plus Limited. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License,
 * v. 2.0. If a copy of the MPL was not distributed with this file, You can
 * obtain one at http://mozilla.org/MPL/2.0/. This Source Code is distributed
 * WITHOUT ANY WARRANTY; including any implied warranties but not limited to
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * Mozilla Public License, v. 2.0. for more details.
 */

/*
 * SimpleFieldPanel.java
 *
 * Created on 03.02.2009, 14:08:29
 */

package org.radixware.kernel.common.design.msdleditor.field.panel.simple;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.ComboBoxModel;
import javax.swing.JComponent;
import javax.swing.JLabel;
import org.radixware.kernel.common.design.msdleditor.AbstractEditItem;
import org.radixware.kernel.common.design.msdleditor.DefaultLayout;
import org.radixware.kernel.common.msdl.enums.EEncoding;
import org.radixware.kernel.common.msdl.fields.SimpleFieldModel;


public class SimpleFieldPanel extends AbstractEditItem implements ActionListener {

    private SimpleFieldModel field;
    private EEncoding parentEncoding;
    private boolean opened = false;

    /** Creates new form SimpleFieldPanel */
    public SimpleFieldPanel() {
        initComponents();
        ArrayList<JLabel> l = new ArrayList<JLabel>();
        l.add(jLabel1);
        l.add(jLabel2);
        ArrayList<JComponent> e = new ArrayList<JComponent>();
        e.add(encodingPanel1);
        e.add(nullIndicatorPanel1);
        DefaultLayout.doLayout(this, l, e,true);
    }

    public void open(SimpleFieldModel field, EEncoding parentEncoding) {
        super.open(field.getMsdlField());
        opened = false;
        this.parentEncoding = parentEncoding;
        this.field = field;
        encodingPanel1.addActionListener(this);
        encodingPanel1.getSetParentPanel().addActionListener(this);
        nullIndicatorPanel1.addActionListener(this);
        update();
        opened = true;
    }

    public void setEncodingComboBoxModel(ComboBoxModel model) {
       encodingPanel1.setEncodingModel(model);
    }

    @Override
    public void update() {
        opened = false;
        encodingPanel1.setEncoding(EEncoding.getInstance(field.getField().getEncoding()),parentEncoding);
        nullIndicatorPanel1.setValue(field.getField().getNullIndicator(), field.getNullIndicator(false), 
                EEncoding.getInstanceForHexViewType(field.getField().getNullIndicatorViewType()),
                EEncoding.getInstanceForHexViewType(field.getNullIndicatorViewType(false)));
        opened = true;
        super.update();
    }

    public void save() {
        EEncoding encoding = encodingPanel1.getEncoding();
        if (encoding != EEncoding.NONE) {
            field.getField().setEncoding(encoding.getName());
        }
        else {
            field.getField().setEncoding(null);
        }
        byte[] nullIndicator = null;
        nullIndicator = nullIndicatorPanel1.getValue();
        field.getField().setNullIndicator(nullIndicator);
        field.getField().setNullIndicatorViewType(nullIndicatorPanel1.getViewEncodingAsStr());
        field.setModified();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        encodingPanel1 = new org.radixware.kernel.common.design.msdleditor.field.panel.simple.EncodingPanel();
        nullIndicatorPanel1 = new org.radixware.kernel.common.design.msdleditor.field.panel.simple.ExtHexPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/radixware/kernel/common/design/msdleditor/field/panel/Bundle"); // NOI18N
        setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("SIMPLEFIELD"))); // NOI18N

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        java.util.ResourceBundle bundle1 = java.util.ResourceBundle.getBundle("org/radixware/kernel/common/design/msdleditor/field/panel/simple/Bundle"); // NOI18N
        jLabel1.setText(bundle1.getString("SimpleFieldPanel.jLabel1.text")); // NOI18N

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText(bundle1.getString("SimpleFieldPanel.jLabel2.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nullIndicatorPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                    .addComponent(encodingPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(encodingPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nullIndicatorPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.radixware.kernel.common.design.msdleditor.field.panel.simple.EncodingPanel encodingPanel1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private org.radixware.kernel.common.design.msdleditor.field.panel.simple.ExtHexPanel nullIndicatorPanel1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        if (!opened)
            return;
        save();
    }
}