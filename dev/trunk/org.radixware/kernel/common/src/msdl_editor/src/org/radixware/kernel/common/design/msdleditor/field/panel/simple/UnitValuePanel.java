/*
 * Copyright (c) 2008-2015, Compass Plus Limited. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License,
 * v. 2.0. If a copy of the MPL was not distributed with this file, You can
 * obtain one at http://mozilla.org/MPL/2.0/. This Source Code is distributed
 * WITHOUT ANY WARRANTY; including any implied warranties but not limited to
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * Mozilla Public License, v. 2.0. for more details.
 */
package org.radixware.kernel.common.design.msdleditor.field.panel.simple;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.nio.charset.StandardCharsets;
import javax.swing.JComboBox;
import org.radixware.kernel.common.design.msdleditor.AbstractEditItem;
import org.radixware.kernel.common.design.msdleditor.enums.EUnit;
import org.radixware.kernel.common.msdl.enums.EEncoding;
import org.radixware.kernel.common.utils.XmlUtils;

/**
 *
 * @author npopov
 */
public class UnitValuePanel extends AbstractEditItem implements ActionListener, HexOrCharsPanel.IHexOrCharsPanelHelper {

    private ActionListener al;
    private IUnitValueStructure struct;

    public UnitValuePanel() {
        initComponents();
    }
    
    public void open(IUnitValueStructure struct) {
        this.struct = struct;
        extHexOrCharsPanel1.setHelper(this);
        extHexOrCharsPanel1.addActionListener(this);
        extHexOrCharsPanel1.getSetParentPanel().addActionListener(this);
    }

    public void addActionListener(final ActionListener l) {
        al = l;
    }

    public void removeActionListener(final ActionListener l) {
        al = null;
    }
    

    public void setValueChars(String chars, String parentChars, byte[] parentValueBytes) {
        extHexOrCharsPanel1.setValue(chars, parentChars, parentValueBytes);
    }

    public void setValue(byte[] bytes, byte[] parentBytes, String parentValueChars) {
        extHexOrCharsPanel1.setValue(bytes, parentBytes, parentValueChars);
    }

    public String getValueChars() {
        return extHexOrCharsPanel1.getValueChars();
    }

    public byte[] getValue() {
        return extHexOrCharsPanel1.getValue();
    }

    public void fillWidgets() {
        if (struct.getViewedUnit() == EUnit.CHAR) {
            setValueChars(struct.getPadChar(), struct.getExtPadChar(), struct.getExtPadBin());
        } else {
            setValue(struct.getPadBin(), struct.getExtPadBin(), struct.getExtPadChar());
        }
    }

    public void fillDefinition() {
        if (struct.getViewedUnit() == EUnit.CHAR) {
            String value = getValueChars();
            value = "".equals(value) ? null : value;
            setPadChar(value);
        } else {
            byte[] value = getValue();
            if (value != null && value.length == 0) {
                value = null;
            }
            setPadBin(value);
        }
    }

    private void setPadChar(String ch) {
        struct.setPadChar(ch);
        struct.setPadBin(null);
    }

    private void setPadBin(byte[] arr) {
        struct.setPadBin(arr);
        struct.setPadChar(null);
    }
    
    public EEncoding getViewEncoding() {
        return extHexOrCharsPanel1.getViewEncoding();
    }
    
    public void setLimit(int limit) {
        extHexOrCharsPanel1.setLimit(limit);
    }

    @Override
    public void setEnabled(boolean state) {
        extHexOrCharsPanel1.setEnabled(state);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        extHexOrCharsPanel1 = new org.radixware.kernel.common.design.msdleditor.field.panel.simple.ExtHexOrCharsPanel();

        setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 1.0;
        add(extHexOrCharsPanel1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.radixware.kernel.common.design.msdleditor.field.panel.simple.ExtHexOrCharsPanel extHexOrCharsPanel1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() instanceof JComboBox) {
            if (((JComboBox) e.getSource()).getParent() instanceof UnitPanel) {
                extHexOrCharsPanel1.onUnitChanged();
            }
        }

        if (al != null) {
            al.actionPerformed(new ActionEvent(this, 0, null));
        }
    }
    
    @Override
    public boolean isUnitChar() {
        return struct.getViewedUnit() == EUnit.CHAR;
    }

    @Override
    public byte[] toBytes(String str) {
        return str == null ? null : str.getBytes(StandardCharsets.UTF_8);
    }

    @Override
    public String toChars(byte[] bytes) {
        final String res = bytes == null ? null : new String(bytes, StandardCharsets.UTF_8);
        if (res != null) {
            for (char ch : res.toCharArray()) {
                if (XmlUtils.isBadXmlChar(ch)) {
                    return null;
                }
            }
        }
        return res;
    }
}
