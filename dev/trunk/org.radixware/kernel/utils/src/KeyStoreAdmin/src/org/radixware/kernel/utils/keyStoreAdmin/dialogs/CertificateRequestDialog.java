/*
 * Copyright (c) 2008-2015, Compass Plus Limited. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License,
 * v. 2.0. If a copy of the MPL was not distributed with this file, You can
 * obtain one at http://mozilla.org/MPL/2.0/. This Source Code is distributed
 * WITHOUT ANY WARRANTY; including any implied warranties but not limited to
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * Mozilla Public License, v. 2.0. for more details.
 */

package org.radixware.kernel.utils.keyStoreAdmin.dialogs;

import java.io.File;
import java.util.ResourceBundle;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

import org.jdesktop.application.Action;

import org.radixware.kernel.utils.keyStoreAdmin.utils.KeyStoreAdminFileFilter;
import org.radixware.kernel.utils.keyStoreAdmin.utils.KeyStoreAdminFileSelector;
import org.radixware.kernel.utils.keyStoreAdmin.utils.KeyStoreAdminFileSelector.SelectNewFileMode;



public class CertificateRequestDialog extends AKeyStoreAdminDialog {
    /** Dialog type for preparing certificate request */
    public static final int TYPE_REQUEST = 0;
    /** Dialog type for parsing certificate response */
    public static final int TYPE_RESPONSE = 1;

    private static final ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/radixware/kernel/utils/keyStoreAdmin/resources/CertificateRequestDialog");

    private int type;
    private String alias;
    private String filePath;
    private String defaultFilePath;

    /** Creates new form CertificateRequestDialog */
    public CertificateRequestDialog(java.awt.Frame parent, int dialogType,
            String[] aliases, String defaultAlias, String defaultFilePath) {
        super(parent);
        initComponents();

        type = dialogType;
        switch (type){
            case TYPE_RESPONSE:
                setTitle(bundle.getString("Dialog.ParseCertificateResponse.title"));
                jLabelFile.setText(bundle.getString("jLabelFile.Certificate.text"));
                break;
            case TYPE_REQUEST:
                setTitle(bundle.getString("Dialog.PrepareCertificateRequest.title"));
                jLabelFile.setText(bundle.getString("jLabelFile.Request.text"));
                break;
        }

        DefaultComboBoxModel model = new DefaultComboBoxModel(aliases);
        jComboBoxAlias.setModel(model);
        jComboBoxAlias.setSelectedItem(defaultAlias);

        this.defaultFilePath = defaultFilePath;
    }

    /** @return the return status of this dialog - one of RET_OK or RET_CANCEL */
    public int getReturnStatus() {
        return returnStatus;
    }

    public String getAlias(){
        return alias;
    }

    public String getFilePath(){
        return filePath;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jLabelAlias = new javax.swing.JLabel();
        jLabelFile = new javax.swing.JLabel();
        jComboBoxAlias = new javax.swing.JComboBox();
        jTextFieldFile = new javax.swing.JTextField();
        jButtonFile = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setModal(true);
        setName("Form"); // NOI18N
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/radixware/kernel/utils/keyStoreAdmin/resources/CertificateRequestDialog"); // NOI18N
        okButton.setText(bundle.getString("okButton.text")); // NOI18N
        okButton.setName("okButton"); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText(bundle.getString("cancelButton.text")); // NOI18N
        cancelButton.setName("cancelButton"); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jLabelAlias.setLabelFor(jComboBoxAlias);
        jLabelAlias.setText(bundle.getString("jLabelAlias.text")); // NOI18N
        jLabelAlias.setName("jLabelAlias"); // NOI18N

        jLabelFile.setLabelFor(jTextFieldFile);
        jLabelFile.setText("Request file"); // NOI18N
        jLabelFile.setName("jLabelFile"); // NOI18N

        jComboBoxAlias.setName("jComboBoxAlias"); // NOI18N

        jTextFieldFile.setEditable(false);
        jTextFieldFile.setName("jTextFieldFile"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(org.radixware.kernel.utils.keyStoreAdmin.KeyStoreAdmin.class).getContext().getActionMap(CertificateRequestDialog.class, this);
        jButtonFile.setAction(actionMap.get("selectFile")); // NOI18N
        jButtonFile.setName("jButtonFile"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelAlias)
                                .addGap(32, 32, 32)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxAlias, 0, 232, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jTextFieldFile, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonFile, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelButton, okButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelAlias)
                    .addComponent(jComboBoxAlias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelFile)
                    .addComponent(jTextFieldFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonFile, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(okButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        doClose(RET_OK);
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        doClose(RET_CANCEL);
    }//GEN-LAST:event_cancelButtonActionPerformed

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        doClose(RET_CANCEL);
    }//GEN-LAST:event_closeDialog

    protected void doClose(int retStatus) {
        returnStatus = retStatus;
        if (returnStatus==RET_OK){
            if (!checkInput())
                return;
            alias = (String)jComboBoxAlias.getSelectedItem();
            filePath = jTextFieldFile.getText();
        }

        setVisible(false);
        dispose();
    }

    /** Checks that input values are valid */
    private boolean checkInput(){
        String messageBoxTitle = bundle.getString("JOptionPaneInputError.title");
        String message;

        if (jTextFieldFile.getText().length()==0){
            message = bundle.getString("FilePathIsEmpty");
            JOptionPane.showMessageDialog(this, message, messageBoxTitle, JOptionPane.ERROR_MESSAGE);
            jTextFieldFile.requestFocusInWindow();
            return false;
        }
        
        File tmpFile = new File(jTextFieldFile.getText());
        if (tmpFile.exists()){
            if (!tmpFile.isFile()){
                message = bundle.getString("NotAFile");
                JOptionPane.showMessageDialog(this, message, messageBoxTitle, JOptionPane.ERROR_MESSAGE);
                jTextFieldFile.requestFocusInWindow();
                return false;
            }
        }

        return true;
    }

    @Action
    public void selectFile(){
        KeyStoreAdminFileFilter filter;
        File selectedFile;
        String title;
        if (type==TYPE_RESPONSE){
            filter = new KeyStoreAdminFileFilter(new String[]{"cer"}, "Signed certificate (*.cer)");
            title = bundle.getString("openCertificateChooser.dialogTitle");
            selectedFile = KeyStoreAdminFileSelector.selectFileForOpen(this, title, new KeyStoreAdminFileFilter[]{filter}, defaultFilePath, SelectNewFileMode.FORBIDDEN);
        } else{
            filter = new KeyStoreAdminFileFilter(new String[]{"csr"}, "Certificate signing request (*.csr)");
            title = bundle.getString("saveCertificateRequestChooser.dialogTitle");
            selectedFile = KeyStoreAdminFileSelector.selectFileForSave(this, title, new KeyStoreAdminFileFilter[]{filter}, defaultFilePath);
        }
        if (selectedFile!=null)
            jTextFieldFile.setText(selectedFile.getAbsolutePath());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton jButtonFile;
    private javax.swing.JComboBox jComboBoxAlias;
    private javax.swing.JLabel jLabelAlias;
    private javax.swing.JLabel jLabelFile;
    private javax.swing.JTextField jTextFieldFile;
    private javax.swing.JButton okButton;
    // End of variables declaration//GEN-END:variables

    private int returnStatus = RET_CANCEL;
}