/*
 * Copyright (c) 2008-2015, Compass Plus Limited. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License,
 * v. 2.0. If a copy of the MPL was not distributed with this file, You can
 * obtain one at http://mozilla.org/MPL/2.0/. This Source Code is distributed
 * WITHOUT ANY WARRANTY; including any implied warranties but not limited to
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * Mozilla Public License, v. 2.0. for more details.
 */

/*
 * ChartCellPanel.java
 *
 * Created on Jun 15, 2012, 12:01:59 PM
 */
package org.radixware.kernel.designer.ads.editors.clazz.report.chart;

import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.util.Map;
import org.radixware.kernel.common.defs.ads.clazz.sql.report.AdsReportChartCell;
import org.radixware.kernel.common.defs.ads.clazz.sql.report.AdsReportChartSeries;
import org.radixware.kernel.common.defs.ads.clazz.sql.report.AdsReportClassDef;
import org.radixware.kernel.common.defs.localization.IMultilingualStringDef;
import org.radixware.kernel.common.enums.EReportChartAxisType;
import org.radixware.kernel.common.types.Id;


public class ChartCellPanel extends BaseChartCellEditor{    
    private DatasetSeriesPanel seriesSetPanel;
    private DatasetAxisPanel xDatasetPanel;
    private DatasetAxisPanel yDatasetPanel;      
    
    /** Creates new form ChartCellPanel */
    public ChartCellPanel() {
        initComponents();
        createUi();
    } 
    
    private void createUi(){       
        seriesSetPanel=new DatasetSeriesPanel(); 
        xDatasetPanel=new DatasetAxisPanel(EReportChartAxisType.DOMAIN_AXIS);       
        yDatasetPanel=new DatasetAxisPanel(EReportChartAxisType.RANGE_AXIS); 
        
        final GridBagLayout gbl = new GridBagLayout();
        final GridBagConstraints c = new GridBagConstraints();
        this.setLayout(gbl);
        c.insets = new Insets(0, 2, 10, 2);
        c.fill = GridBagConstraints.HORIZONTAL;
        c.weightx = 1.0;
        gbl.setConstraints(seriesTitle, c);
        this.add(seriesTitle);
        
        c.gridx = 0;
        c.gridy = 1;
        c.insets = new Insets(0, 0, 10, 0);
        c.weightx = 1.0;
        gbl.setConstraints(seriesSetPanel, c);
        this.add(seriesSetPanel);
        
        c.gridx = 0;
        c.gridy = 2;
        c.insets = new Insets(0, 0, 10, 0);
        c.weightx = 1.0;
        gbl.setConstraints(xDatasetPanel, c);
        this.add(xDatasetPanel);
        
        c.gridx = 0;
        c.gridy = 3;
        c.insets = new Insets(0, 0, 10, 0);
        c.weightx = 1.0;
        gbl.setConstraints(yDatasetPanel, c);
        this.add(yDatasetPanel);
        
        c.gridx = 0;
        c.gridy = 4;
        c.insets = new Insets(0, 10, 0, 0);
        c.weightx = 1.0;      
        gbl.setConstraints(cbShowItemLabels, c);
        this.add(cbShowItemLabels);
        setPanelEnabled(false);
    }
     
    @Override
     public void open(final AdsReportChartCell cell,final AdsReportClassDef report,final Map<Id,IMultilingualStringDef> mlStrings) {
        super.open(cell,report,mlStrings);
        seriesSetPanel.open(report);
        xDatasetPanel.open(cell, report,  mlStrings);
        yDatasetPanel.open(cell, report, mlStrings);
    }
    
    @Override
    protected void selectSeries(final AdsReportChartSeries series){
        super.selectSeries(series);
        if(series==null){ 
            clearPanel();            
        }else{
            cbShowItemLabels.setSelected(series.isShowItemLabel());
            seriesSetPanel.setChartSeries(series); 
            xDatasetPanel.setAxisDataInfo(series.getDomainData());      
            yDatasetPanel.setAxisDataInfo(series.getRangeData()); 
        }
    }
    
    @Override
    protected void clearPanel(){
        super.clearPanel();
        seriesSetPanel.clearPanel();
        xDatasetPanel.clearPanel();
        yDatasetPanel.clearPanel();
    }
    
    @Override
    protected final void setPanelEnabled(final boolean enable){
        super.setPanelEnabled(enable);
        seriesSetPanel.setPanelEnabled(enable);
        xDatasetPanel.setPanelEnabled(enable);
        yDatasetPanel.setPanelEnabled(enable);
    }
    
      
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
