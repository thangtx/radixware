/*
 * Copyright (c) 2008-2015, Compass Plus Limited. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License,
 * v. 2.0. If a copy of the MPL was not distributed with this file, You can
 * obtain one at http://mozilla.org/MPL/2.0/. This Source Code is distributed
 * WITHOUT ANY WARRANTY; including any implied warranties but not limited to
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * Mozilla Public License, v. 2.0. for more details.
 */

/*
 * AdsReportCsvExportPanel.java
 *
 * Created on Feb 7, 2012, 5:18:17 PM
 */
package org.radixware.kernel.designer.ads.editors.clazz.report;

import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import javax.swing.JCheckBox;
import javax.swing.JPanel;
import javax.swing.border.TitledBorder;
import org.openide.util.NbBundle;
import org.radixware.kernel.common.defs.ads.clazz.sql.report.AdsReportClassDef;
import org.radixware.kernel.designer.common.dialogs.components.ComponentTitledBorder;
import org.radixware.kernel.designer.common.general.editors.OpenInfo;


public class AdsReportCsvExportPanel extends javax.swing.JPanel {
    private final JCheckBox cbExportEnabled;
    private final AdsReportCsvExportColumnsPanel csvExportPanel;
    private final JPanel emptyPanel=new JPanel();
    private AdsReportClassDef report;
    private final CsvDelimiterPanel delimiterPanel;

    /** Creates new form AdsReportCsvExportPanel */
    @SuppressWarnings("deprecation")
    public AdsReportCsvExportPanel() {
        initComponents();
        delimiterPanel=new CsvDelimiterPanel();
        csvExportPanel=new AdsReportCsvExportColumnsPanel();
        final String cbLabel=NbBundle.getMessage(AdsReportCsvExportPanel.class, "AdsReportCsvExportPanel-CheckBox-Label");
        cbExportEnabled = new JCheckBox(cbLabel);
        cbExportEnabled.setBorder(null);         
        cbExportEnabled.addItemListener(new ItemListener() {

            @Override
            public void itemStateChanged(final ItemEvent e) {
                processCheckBox();
            }
        });
        
        this.setBorder(new ComponentTitledBorder(cbExportEnabled, this, new TitledBorder(""))); 
        
    }
    
    public void open(final AdsReportClassDef report,final OpenInfo openInfo){
        this.report=report;
        cbExportEnabled.setEnabled(!report.isReadOnly());
        delimiterPanel.open(report,openInfo);
        csvExportPanel.open(report,openInfo);
        cbExportEnabled.setSelected(report.getCsvInfo().isExportToCsvEnabled());
        processCheckBox();
    }
    
    private void processCheckBox(){    
        final boolean isExportToCsv=cbExportEnabled.isSelected();
        report.getCsvInfo().setIsExportToCsvEnabled(isExportToCsv);
        if(isExportToCsv){           
            removeAll();
            this.add(delimiterPanel); 
            this.add(csvExportPanel);            
        }else{
            removeAll();
            this.add(emptyPanel);
        }        
        revalidate();
        repaint();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
