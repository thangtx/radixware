/*
 * Copyright (c) 2008-2015, Compass Plus Limited. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License,
 * v. 2.0. If a copy of the MPL was not distributed with this file, You can
 * obtain one at http://mozilla.org/MPL/2.0/. This Source Code is distributed
 * WITHOUT ANY WARRANTY; including any implied warranties but not limited to
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * Mozilla Public License, v. 2.0. for more details.
 */

/*
 * AdsReportChartCellEditor.java
 *
 * Created on May 10, 2012, 11:17:35 AM
 */
package org.radixware.kernel.designer.ads.editors.clazz.report.chart;

import java.awt.BorderLayout;
import java.util.Map;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.event.ChangeListener;
import org.openide.util.ChangeSupport;
import org.radixware.kernel.common.defs.ads.clazz.sql.report.AdsReportChartCell;
import org.radixware.kernel.common.defs.ads.clazz.sql.report.AdsReportChartSeries;
import org.radixware.kernel.common.defs.ads.clazz.sql.report.AdsReportClassDef;
import org.radixware.kernel.common.defs.localization.IMultilingualStringDef;
import org.radixware.kernel.common.enums.EReportChartCellType;
import org.radixware.kernel.common.types.Id;



public class AdsReportChartCellEditor extends javax.swing.JPanel {    
    private  SeriesListPanel seriesListPanel;
    private  BaseChartCellEditor seriesEditor;
    
    /** Creates new form AdsReportChartCellEditor */
    public AdsReportChartCellEditor(final AdsReportChartCell cell) {
        super();
        initComponents();
        if(cell!=null){
            open(cell,cell.getOwnerReport(),null);
        }
    }
    
    private void createUi(final AdsReportChartCell cell){
        final JPanel rightPanel=new JPanel();
        rightPanel.setBorder(new EmptyBorder(10,10,10,10));
        if(cell.getChartType()==EReportChartCellType.PIE){
            seriesEditor=new AdsReportPieChartCellEditor();
        }else{
            seriesEditor=new ChartCellPanel();
        }
        rightPanel.setLayout(new BorderLayout());
        rightPanel.add(seriesEditor, BorderLayout.NORTH);
        
        splitter.setRightComponent(rightPanel);
        
        seriesListPanel=new SeriesListPanel(this);
        seriesListPanel.setBorder(new EmptyBorder(10,10,10,10));
        splitter.setLeftComponent(seriesListPanel);        
    }

    
    void selectSeries(final AdsReportChartSeries series){
        seriesEditor.selectSeries(series);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        splitter = new javax.swing.JSplitPane();

        setPreferredSize(new java.awt.Dimension(700, 450));
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));
        add(splitter);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSplitPane splitter;
    // End of variables declaration//GEN-END:variables

  private final ChangeSupport changeSupport = new ChangeSupport(this);

    public void removeChangeListener(final ChangeListener listener) {
        changeSupport.removeChangeListener(listener);
    }

    public void fireChange() {
        changeSupport.fireChange();
    }

    public void addChangeListener(final ChangeListener listener) {
        changeSupport.addChangeListener(listener);
    }
    
    public final  void open(final AdsReportChartCell cell,final AdsReportClassDef report,final Map<Id,IMultilingualStringDef> mlStrings) {
        createUi(cell);
        seriesEditor.open(cell, report, mlStrings);
        seriesListPanel.open(cell);
    }

    boolean isComplete() {
        return true;
    }
}
