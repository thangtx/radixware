/*
 * Copyright (c) 2008-2015, Compass Plus Limited. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License,
 * v. 2.0. If a copy of the MPL was not distributed with this file, You can
 * obtain one at http://mozilla.org/MPL/2.0/. This Source Code is distributed
 * WITHOUT ANY WARRANTY; including any implied warranties but not limited to
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * Mozilla Public License, v. 2.0. for more details.
 */

package org.radixware.kernel.designer.ads.editors.clazz.report;

import java.awt.Dialog;
import java.awt.Dimension;
import java.awt.Rectangle;
import java.math.BigDecimal;
import javax.swing.JFormattedTextField;
import javax.swing.JPanel;
import javax.swing.JSpinner.DefaultEditor;
import javax.swing.SpinnerNumberModel;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.text.NumberFormatter;
import org.openide.DialogDescriptor;
import org.openide.DialogDisplayer;
import org.openide.util.NbBundle;
import org.radixware.kernel.common.defs.ads.clazz.sql.report.AdsReportForm;
import org.radixware.kernel.common.utils.events.IRadixEventListener;
import org.radixware.kernel.common.utils.events.RadixEvent;
import org.radixware.kernel.common.utils.events.RadixEventSource;
import org.radixware.kernel.designer.ads.editors.clazz.report.diagram.AdsReportFormDiagramOptions;
import org.radixware.kernel.designer.common.dialogs.components.BigDecimalSpinnerModel;
import org.radixware.kernel.designer.common.dialogs.components.CheckedBigDecimalSpinnerEditor;
import org.radixware.kernel.designer.common.dialogs.components.state.StateAbstractDialog;
import org.radixware.kernel.designer.common.dialogs.components.state.StateManager;
import org.radixware.kernel.designer.common.dialogs.utils.ModalDisplayer;


public class GridSettingsDialog extends JPanel {
    private static final double MIN_GRID_SIZE = 0.1;
    private final RadixEventSource<IRadixEventListener<RadixEvent>, RadixEvent> changeSupport = new RadixEventSource<>();
    /**
     * Creates new form GridSettingsDialog
     */
    public GridSettingsDialog() {
        initComponents();
    }

    public void showDialog(final AdsReportForm form) {
        showGridCheckBox.setSelected(form.isShowGrid());
        snapToGridCheckBox.setSelected(form.isSnapToGrid());
        gridSizeSpinner.setModel(new BigDecimalSpinnerModel(form.getGridSizeMm(), MIN_GRID_SIZE, Math.min(form.getPageHeightMm(), form.getPageWidthMm()), 0.1));
        gridSizeSpinner.setEditor(new CheckedBigDecimalSpinnerEditor(gridSizeSpinner));
        final ModalDisplayer displayer = new ModalDisplayer(this,  NbBundle.getMessage(GridSettingsDialog.class, "GridSettings"));
        if (displayer.showModal()){
            form.setShowGrid(showGridCheckBox.isSelected());
            form.setSnapToGrid(snapToGridCheckBox.isSelected());
            form.setGridSizeMm(getCurrentGridSize());
            changeSupport.fireEvent(new RadixEvent());
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        showGridCheckBox = new javax.swing.JCheckBox();
        snapToGridCheckBox = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        gridSizeSpinner = new javax.swing.JSpinner();

        jTextField1.setText(org.openide.util.NbBundle.getMessage(GridSettingsDialog.class, "GridSettingsDialog.jTextField1.text")); // NOI18N

        showGridCheckBox.setText(org.openide.util.NbBundle.getMessage(GridSettingsDialog.class, "GridSettingsDialog.showGridCheckBox.text")); // NOI18N
        showGridCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showGridCheckBoxActionPerformed(evt);
            }
        });

        snapToGridCheckBox.setText(org.openide.util.NbBundle.getMessage(GridSettingsDialog.class, "GridSettingsDialog.snapToGridCheckBox.text")); // NOI18N
        snapToGridCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                snapToGridCheckBoxActionPerformed(evt);
            }
        });

        jLabel1.setText(org.openide.util.NbBundle.getMessage(GridSettingsDialog.class, "GridSettingsDialog.jLabel1.text")); // NOI18N

        gridSizeSpinner.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        gridSizeSpinner.setDoubleBuffered(true);
        gridSizeSpinner.setMinimumSize(new java.awt.Dimension(100, 20));
        gridSizeSpinner.setName(""); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(5, 5, 5)
                        .addComponent(gridSizeSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(showGridCheckBox)
                            .addComponent(snapToGridCheckBox))
                        .addGap(0, 110, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(showGridCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(snapToGridCheckBox)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(gridSizeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void showGridCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showGridCheckBoxActionPerformed

    }//GEN-LAST:event_showGridCheckBoxActionPerformed

    private void snapToGridCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_snapToGridCheckBoxActionPerformed

    }//GEN-LAST:event_snapToGridCheckBoxActionPerformed

    protected double getCurrentGridSize() {
        return ((BigDecimal) gridSizeSpinner.getModel().getValue()).doubleValue();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner gridSizeSpinner;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JCheckBox showGridCheckBox;
    private javax.swing.JCheckBox snapToGridCheckBox;
    // End of variables declaration//GEN-END:variables

}
