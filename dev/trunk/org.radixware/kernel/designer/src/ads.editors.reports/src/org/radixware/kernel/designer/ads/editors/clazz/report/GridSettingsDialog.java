/*
 * Copyright (c) 2008-2015, Compass Plus Limited. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License,
 * v. 2.0. If a copy of the MPL was not distributed with this file, You can
 * obtain one at http://mozilla.org/MPL/2.0/. This Source Code is distributed
 * WITHOUT ANY WARRANTY; including any implied warranties but not limited to
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * Mozilla Public License, v. 2.0. for more details.
 */

package org.radixware.kernel.designer.ads.editors.clazz.report;

import java.awt.Dialog;
import java.awt.Dimension;
import java.awt.Rectangle;
import org.openide.DialogDescriptor;
import org.openide.DialogDisplayer;
import org.openide.util.NbBundle;
import org.radixware.kernel.designer.ads.editors.clazz.report.diagram.AdsReportFormDiagramOptions;


public class GridSettingsDialog extends javax.swing.JPanel {

    private static Rectangle bounds = null;

    /** Creates new form GridSettingsDialog */
    protected GridSettingsDialog() {
        initComponents();

        showGridCheckBox.setSelected(AdsReportFormDiagramOptions.getDefault().isShowGrid());
        snapToGridCheckBox.setSelected(AdsReportFormDiagramOptions.getDefault().isSnapToGrid());
    }

    public static void showDialog() {
        final GridSettingsDialog netParamsDialog = new GridSettingsDialog();
        final DialogDescriptor dialogDescriptor = new DialogDescriptor(netParamsDialog,
                NbBundle.getMessage(GridSettingsDialog.class, "GridSettings"));
        dialogDescriptor.setOptions(new Object[] { DialogDescriptor.CLOSED_OPTION } );
        dialogDescriptor.setHelpCtx(null);
        dialogDescriptor.setValid(true);
        final Dialog dialog = DialogDisplayer.getDefault().createDialog(dialogDescriptor);
        dialog.setPreferredSize(new Dimension(320, 240));
        dialog.setResizable(false);
        if (bounds != null){
            dialog.setBounds(bounds);
        }
        dialog.setVisible(true);
        bounds = dialog.getBounds();
        dialog.dispose();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        showGridCheckBox = new javax.swing.JCheckBox();
        snapToGridCheckBox = new javax.swing.JCheckBox();

        showGridCheckBox.setText(org.openide.util.NbBundle.getMessage(GridSettingsDialog.class, "GridSettingsDialog.showGridCheckBox.text")); // NOI18N
        showGridCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showGridCheckBoxActionPerformed(evt);
            }
        });

        snapToGridCheckBox.setText(org.openide.util.NbBundle.getMessage(GridSettingsDialog.class, "GridSettingsDialog.snapToGridCheckBox.text")); // NOI18N
        snapToGridCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                snapToGridCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(showGridCheckBox)
                    .addComponent(snapToGridCheckBox))
                .addContainerGap(124, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(showGridCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(snapToGridCheckBox)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void showGridCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showGridCheckBoxActionPerformed
        AdsReportFormDiagramOptions.getDefault().setShowGrid(showGridCheckBox.isSelected());
    }//GEN-LAST:event_showGridCheckBoxActionPerformed

    private void snapToGridCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_snapToGridCheckBoxActionPerformed
        AdsReportFormDiagramOptions.getDefault().setSnapToGrid(snapToGridCheckBox.isSelected());
    }//GEN-LAST:event_snapToGridCheckBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox showGridCheckBox;
    private javax.swing.JCheckBox snapToGridCheckBox;
    // End of variables declaration//GEN-END:variables

}
