/*
 * Copyright (c) 2008-2015, Compass Plus Limited. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License,
 * v. 2.0. If a copy of the MPL was not distributed with this file, You can
 * obtain one at http://mozilla.org/MPL/2.0/. This Source Code is distributed
 * WITHOUT ANY WARRANTY; including any implied warranties but not limited to
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * Mozilla Public License, v. 2.0. for more details.
 */

package org.radixware.kernel.designer.ads.editors.clazz.report;

import org.openide.util.NbBundle;
import org.radixware.kernel.common.defs.ads.AdsDefinitionIcon;
import org.radixware.kernel.common.defs.ads.clazz.sql.report.AdsReportBand;
import org.radixware.kernel.common.defs.ads.clazz.sql.report.AdsReportGroupBand;
import org.radixware.kernel.designer.common.editors.RadixObjectEditor;
import org.radixware.kernel.designer.common.editors.RadixObjectModalEditor;
import org.radixware.kernel.designer.common.general.editors.IEditorFactory;
import org.radixware.kernel.designer.common.annotations.registrators.EditorFactoryRegistration;
import org.radixware.kernel.designer.common.editors.jml.JmlEditor;
import org.radixware.kernel.designer.common.general.editors.OpenInfo;
import org.radixware.kernel.common.resources.RadixWareIcons;


class AdsReportBandEditor extends RadixObjectModalEditor<AdsReportBand> {

    private enum ETab {CONDITION, APPEARANCE, ADDING};

    private final AdsReportBandAppearanceEditor appearanceEditor;
    private final JmlEditor addingJmlEditor = new JmlEditor();
    private JmlEditor jmlEditor = null;
    private static ETab tab = ETab.APPEARANCE;
    private volatile boolean init = false;

    /** Creates new form AdsReportBandEditor */
    protected AdsReportBandEditor(final AdsReportBand band) {
        super(band);
        init = true;
        initComponents();
        
        appearanceEditor = new AdsReportBandAppearanceEditor(band);

        if (band instanceof AdsReportGroupBand) {
            jmlEditor = new JmlEditor();
            tabbedPane.addTab(NbBundle.getBundle(AdsReportClassEditor.class).getString("TAB_CONDITION"),
                RadixWareIcons.JAVA.JAVA.getIcon(), jmlEditor);
            //conditionJmlEditor.open(((AdsReportGroupBand)band).getOwnerGroup().getCondition());
        }
        tabbedPane.addTab(NbBundle.getBundle(AdsReportClassEditor.class).getString("TAB_APPEARANCE"),
                AdsDefinitionIcon.COLOR_SCHEME.getIcon(), appearanceEditor);
        tabbedPane.addTab(NbBundle.getBundle(AdsReportClassEditor.class).getString("TAB_ADDING"),
                RadixWareIcons.JAVA.JAVA.getIcon(), addingJmlEditor);

        //addingJmlEditor.open(band.getOnAdding());

        switch (tab) {
            case CONDITION:
                tabbedPane.setSelectedComponent(jmlEditor != null ? jmlEditor : appearanceEditor);
                break;
            case APPEARANCE:
                tabbedPane.setSelectedComponent(appearanceEditor);
                break;
            case ADDING:
                tabbedPane.setSelectedComponent(addingJmlEditor);
                break;
        }

        this.setComplete(true);
        init = false;
    }

    @Override
    public boolean open(final OpenInfo openInfo) {
        if (jmlEditor != null) {
            jmlEditor.open(((AdsReportGroupBand)getRadixObject()).getOwnerGroup().getCondition(), openInfo);
        }
        addingJmlEditor.open(getRadixObject().getOnAdding(), openInfo);
        return super.open(openInfo);
    }

    @Override
    public boolean isCancelable() {
        return false;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabbedPane = new javax.swing.JTabbedPane();

        tabbedPane.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tabbedPaneStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tabbedPaneStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tabbedPaneStateChanged
        if (init)
            return;
        if (tabbedPane.getSelectedComponent() == jmlEditor) {
            tab = ETab.CONDITION;
        } else if (tabbedPane.getSelectedComponent() == appearanceEditor) {
            tab = ETab.APPEARANCE;
        } else if (tabbedPane.getSelectedComponent() == addingJmlEditor) {
            tab = ETab.ADDING;
        }
    }//GEN-LAST:event_tabbedPaneStateChanged

    @Override
    protected void apply() {
//        appearanceEditor.apply();
    }
    
    @Override
    public void update() {
        //
    }
    
    @EditorFactoryRegistration
    public static final class Factory implements IEditorFactory<AdsReportBand> {

        @Override
        public RadixObjectEditor<AdsReportBand> newInstance(final AdsReportBand band) {
            return new AdsReportBandEditor(band);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane tabbedPane;
    // End of variables declaration//GEN-END:variables

}
