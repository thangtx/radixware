package org.radixware.kernel.designer.ads.localization.dialog;


import java.awt.Component;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListCellRenderer;
import javax.swing.DefaultListModel;
import javax.swing.JCheckBox;
import javax.swing.JList;
import javax.swing.ListModel;
import javax.swing.ListSelectionModel;
import org.radixware.kernel.common.enums.EMultilingualStringKind;

public class StringTypePanel extends javax.swing.JPanel {

    /**
     * Creates new form StringTypePanel
     */
    public StringTypePanel() {
        initComponents();
        
        stringTypeList.setCellRenderer(new StringTypeCellRender());
        stringTypeList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        stringTypeList.addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent e) {
              int index = stringTypeList.getSelectedIndex();
              if (index != -1) {
                JCheckBox checkbox = (JCheckBox) stringTypeList.getModel().getElementAt(index);
                checkbox.setSelected(!checkbox.isSelected());
                repaint();
              }
            }
        });
    }
    
    public void open(List<EMultilingualStringKind> types){
        DefaultListModel listModel = new DefaultListModel();
        for (EMultilingualStringKind value : EMultilingualStringKind.values()) {
            listModel.addElement(new StringTypeCheckBox(value, types != null ? types.contains(value) : false));
        }
        stringTypeList.setBackground(getBackground());
        stringTypeList.setModel(listModel);
    }
    
    public List<EMultilingualStringKind> getTypes(){
        List<EMultilingualStringKind> types = new ArrayList<>();
        ListModel model = stringTypeList.getModel();
        for (int i = 0; i < model.getSize(); i++){
            Object value = model.getElementAt(i);
            if (value instanceof StringTypeCheckBox){
                StringTypeCheckBox stringTypeCheckBox = (StringTypeCheckBox)value;
                if (stringTypeCheckBox.isSelected()){
                    types.add(stringTypeCheckBox.getValue());
                }
            }
        }
        return types;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        stringTypeList = new javax.swing.JList();

        setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(StringTypePanel.class, "StringTypePanel.border.outsideBorder.title")), javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5))); // NOI18N
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));

        jScrollPane1.setBorder(null);
        jScrollPane1.setViewportView(stringTypeList);

        add(jScrollPane1);
    }// </editor-fold>//GEN-END:initComponents

    private class StringTypeCheckBox extends JCheckBox {

        final EMultilingualStringKind kind;

        public StringTypeCheckBox(EMultilingualStringKind kind, boolean selected) {
            super(kind == null ? "" : "" + kind.toString(), selected);
            this.kind = kind;
        }

        public EMultilingualStringKind getValue() {
            return kind;
        }

    }

    private class StringTypeCellRender extends DefaultListCellRenderer {

        public StringTypeCellRender() {
        }

        @Override
        public Component getListCellRendererComponent(JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
            if (value instanceof JCheckBox) {
                JCheckBox checkBox = (JCheckBox) value;
                return checkBox;
            } else {
                return super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList stringTypeList;
    // End of variables declaration//GEN-END:variables
}
