/*
 * Copyright (c) 2008-2015, Compass Plus Limited. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License,
 * v. 2.0. If a copy of the MPL was not distributed with this file, You can
 * obtain one at http://mozilla.org/MPL/2.0/. This Source Code is distributed
 * WITHOUT ANY WARRANTY; including any implied warranties but not limited to
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * Mozilla Public License, v. 2.0. for more details.
 */

package org.radixware.kernel.designer.common.editors.jml.editors;

import org.radixware.kernel.common.enums.ETaskTagBehavior;
import org.radixware.kernel.common.enums.ETaskTagPriority;
import org.radixware.kernel.common.enums.ETaskTagType;
import org.radixware.kernel.common.scml.ITaskTag;
import org.radixware.kernel.common.scml.Scml.Tag;
import org.radixware.kernel.designer.common.dialogs.scmlnb.tags.TagEditor;


public class TaskEditor<T extends Tag & ITaskTag> extends TagEditor<T> {

    /** Creates new form MergePanel */
    public TaskEditor() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelType = new javax.swing.JLabel();
        labelPriority = new javax.swing.JLabel();
        labelAssigne = new javax.swing.JLabel();
        textAssigne = new javax.swing.JTextField();
        scrollPane = new javax.swing.JScrollPane();
        textNotes = new javax.swing.JTextArea();
        labelNotes = new javax.swing.JLabel();
        labelDueDate = new javax.swing.JLabel();
        labelControlDate = new javax.swing.JLabel();
        labelBehaviour = new javax.swing.JLabel();
        textType = new javax.swing.JComboBox();
        textPriority = new javax.swing.JComboBox();
        textBehaviour = new javax.swing.JComboBox();
        textDueDate = new org.jdesktop.swingx.JXDatePicker();
        textControlDate = new org.jdesktop.swingx.JXDatePicker();

        setMinimumSize(new java.awt.Dimension(360, 260));
        setPreferredSize(new java.awt.Dimension(360, 260));

        labelType.setText(org.openide.util.NbBundle.getMessage(TaskEditor.class, "TaskEditor.labelType.text")); // NOI18N

        labelPriority.setText(org.openide.util.NbBundle.getMessage(TaskEditor.class, "TaskEditor.labelPriority.text")); // NOI18N

        labelAssigne.setText(org.openide.util.NbBundle.getMessage(TaskEditor.class, "TaskEditor.labelAssigne.text")); // NOI18N

        textNotes.setColumns(20);
        textNotes.setRows(5);
        scrollPane.setViewportView(textNotes);

        labelNotes.setText(org.openide.util.NbBundle.getMessage(TaskEditor.class, "TaskEditor.labelNotes.text")); // NOI18N

        labelDueDate.setText(org.openide.util.NbBundle.getMessage(TaskEditor.class, "TaskEditor.labelDueDate.text")); // NOI18N

        labelControlDate.setText(org.openide.util.NbBundle.getMessage(TaskEditor.class, "TaskEditor.labelControlDate.text")); // NOI18N

        labelBehaviour.setText(org.openide.util.NbBundle.getMessage(TaskEditor.class, "TaskEditor.labelBehaviour.text")); // NOI18N

        textType.setModel(new javax.swing.DefaultComboBoxModel(ETaskTagType.values()));

        textPriority.setModel(new javax.swing.DefaultComboBoxModel(ETaskTagPriority.values()));

        textBehaviour.setModel(new javax.swing.DefaultComboBoxModel(ETaskTagBehavior.values()));

        textControlDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textControlDateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(scrollPane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(labelType)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textType, 0, 93, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelPriority)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textPriority, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelAssigne)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textAssigne, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE))
                    .addComponent(labelNotes, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelBehaviour)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textBehaviour, 0, 253, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelDueDate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textDueDate, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelControlDate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textControlDate, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(58, 58, 58)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelType)
                    .addComponent(labelPriority)
                    .addComponent(textType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textPriority, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelAssigne)
                    .addComponent(textAssigne, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelNotes)
                .addGap(1, 1, 1)
                .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDueDate)
                    .addComponent(textDueDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelControlDate)
                    .addComponent(textControlDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textBehaviour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelBehaviour))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void textControlDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textControlDateActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_textControlDateActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel labelAssigne;
    private javax.swing.JLabel labelBehaviour;
    private javax.swing.JLabel labelControlDate;
    private javax.swing.JLabel labelDueDate;
    private javax.swing.JLabel labelNotes;
    private javax.swing.JLabel labelPriority;
    private javax.swing.JLabel labelType;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JTextField textAssigne;
    private javax.swing.JComboBox textBehaviour;
    private org.jdesktop.swingx.JXDatePicker textControlDate;
    private org.jdesktop.swingx.JXDatePicker textDueDate;
    private javax.swing.JTextArea textNotes;
    private javax.swing.JComboBox textPriority;
    private javax.swing.JComboBox textType;
    // End of variables declaration//GEN-END:variables

    @Override
    public void afterOpen() {
        ITaskTag tag = getObject();
        textType.setSelectedItem(tag.getType());
        textPriority.setSelectedItem(tag.getPriority());
        textBehaviour.setSelectedItem(tag.getBehavior());
        textAssigne.setText(tag.getAssigne());
        textNotes.setText(tag.getNotes());
        textDueDate.setDate(tag.getDueDate());
        textControlDate.setDate(tag.getControlDate());
    }

    @Override
    public void applyChanges() {
        ITaskTag tag = getObject();
        tag.setType((ETaskTagType) textType.getSelectedItem());
        tag.setPriority((ETaskTagPriority) textPriority.getSelectedItem());
        tag.setBehavior((ETaskTagBehavior) textBehaviour.getSelectedItem());
        tag.setAssigne(textAssigne.getText());
        tag.setNotes(textNotes.getText());
        tag.setDueDate(textDueDate.getDate());
        tag.setControlDate(textControlDate.getDate());
    }

    @Override
    public String getTitle() {
        return "Insert Task Tag";
    }

    @Override
    protected boolean tagDefined() {
        return true;
    }

    @Override
    public void setReadOnly(boolean readOnly) {
        final boolean editable = !readOnly;
        textType.setEnabled(editable);
        textPriority.setEnabled(editable);
        textBehaviour.setEnabled(editable);
        textAssigne.setEditable(editable);
        textNotes.setEditable(editable);
        textDueDate.setEditable(editable);
        textControlDate.setEditable(editable);
    }
}
