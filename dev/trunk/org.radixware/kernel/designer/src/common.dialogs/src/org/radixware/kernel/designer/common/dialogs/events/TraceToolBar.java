/*
 * Copyright (c) 2008-2015, Compass Plus Limited. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License,
 * v. 2.0. If a copy of the MPL was not distributed with this file, You can
 * obtain one at http://mozilla.org/MPL/2.0/. This Source Code is distributed
 * WITHOUT ANY WARRANTY; including any implied warranties but not limited to
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * Mozilla Public License, v. 2.0. for more details.
 */

/*
 * TraceToolBar.java
 *
 * Created on Jun 11, 2009, 5:03:00 PM
 */

package org.radixware.kernel.designer.common.dialogs.events;

import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JToolBar;
import javax.swing.Timer;
import org.openide.util.NbBundle;
import org.radixware.kernel.common.enums.EEventSeverity;
import org.radixware.kernel.common.resources.RadixWareIcons;


public class TraceToolBar extends JToolBar {

    private final Timer timer;
    private final TraceTable traceTable;
    private final EEventSeverity[] severities = {
        EEventSeverity.DEBUG,
        EEventSeverity.EVENT,
        EEventSeverity.WARNING,
        EEventSeverity.ERROR,
        EEventSeverity.NONE
    };

    /** Creates new form BeanForm */
    public TraceToolBar(TraceTable traceTable) {
        initComponents();
        this.traceTable = traceTable;

//        this.setBorder(new EmptyBorder(3, 0, 3, 0));

        clearButton.setIcon(RadixWareIcons.DELETE.CLEAR.getIcon());
        clearButton.setToolTipText(NbBundle.getBundle(TraceToolBar.class).getString("HINT_CLEAR"));

        severityComboBox.removeAllItems();
        for (EEventSeverity severity : severities)
            severityComboBox.addItem(severity.getName() + "    ");
        severityComboBox.setSelectedIndex(0);

        timer = new Timer(500, new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                timer.stop();
                TraceToolBar.this.traceTable.setStringFilter(findTextField.getText());
            }
        });
    }

//    @Override
//    public BaselineResizeBehavior getBaselineResizeBehavior() {
//        return getParent().getBaselineResizeBehavior();
//    }

    @Override
    public Dimension getPreferredSize() {
        Dimension dimp = getParent().getSize();
        Dimension dimf = findTextField.getPreferredSize();
//        Dimension dimc = severityComboBox.getPreferredSize();
        Dimension self = super.getPreferredSize();
//        severityComboBox.setPreferredSize(new Dimension(140, dimc.height));
        textFieldPanel.setPreferredSize(new Dimension(dimp.width - 260, dimf.height));
        return new Dimension(dimp.width, self.height);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        severityComboBox = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        textFieldPanel = new javax.swing.JPanel();
        findTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        clearButton = new javax.swing.JButton();

        setFloatable(false);

        jLabel3.setText(org.openide.util.NbBundle.getMessage(TraceToolBar.class, "TraceToolBar.jLabel3.text")); // NOI18N
        jLabel3.setMinimumSize(new java.awt.Dimension(10, 0));
        jLabel3.setPreferredSize(new java.awt.Dimension(10, 0));
        add(jLabel3);

        jLabel1.setText(org.openide.util.NbBundle.getMessage(TraceToolBar.class, "TraceToolBar.jLabel1.text")); // NOI18N
        add(jLabel1);

        jLabel4.setText(org.openide.util.NbBundle.getMessage(TraceToolBar.class, "TraceToolBar.jLabel4.text")); // NOI18N
        jLabel4.setMinimumSize(new java.awt.Dimension(5, 0));
        jLabel4.setPreferredSize(new java.awt.Dimension(5, 0));
        add(jLabel4);

        severityComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        severityComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                severityComboBoxItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(severityComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, 109, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(severityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        add(jPanel1);

        jLabel5.setText(org.openide.util.NbBundle.getMessage(TraceToolBar.class, "TraceToolBar.jLabel5.text")); // NOI18N
        jLabel5.setMinimumSize(new java.awt.Dimension(15, 0));
        jLabel5.setPreferredSize(new java.awt.Dimension(15, 0));
        add(jLabel5);

        jLabel2.setText(org.openide.util.NbBundle.getMessage(TraceToolBar.class, "TraceToolBar.jLabel2.text")); // NOI18N
        add(jLabel2);

        jLabel6.setText(org.openide.util.NbBundle.getMessage(TraceToolBar.class, "TraceToolBar.jLabel6.text")); // NOI18N
        jLabel6.setMinimumSize(new java.awt.Dimension(5, 0));
        jLabel6.setPreferredSize(new java.awt.Dimension(5, 0));
        add(jLabel6);

        findTextField.setColumns(24);
        findTextField.setText(org.openide.util.NbBundle.getMessage(TraceToolBar.class, "TraceToolBar.findTextField.text")); // NOI18N
        findTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                findTextFieldKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout textFieldPanelLayout = new javax.swing.GroupLayout(textFieldPanel);
        textFieldPanel.setLayout(textFieldPanelLayout);
        textFieldPanelLayout.setHorizontalGroup(
            textFieldPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(findTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
        );
        textFieldPanelLayout.setVerticalGroup(
            textFieldPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(findTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        add(textFieldPanel);

        jLabel7.setText(org.openide.util.NbBundle.getMessage(TraceToolBar.class, "TraceToolBar.jLabel7.text")); // NOI18N
        jLabel7.setMinimumSize(new java.awt.Dimension(10, 0));
        jLabel7.setPreferredSize(new java.awt.Dimension(10, 0));
        add(jLabel7);

        clearButton.setText(org.openide.util.NbBundle.getMessage(TraceToolBar.class, "TraceToolBar.clearButton.text")); // NOI18N
        clearButton.setFocusable(false);
        clearButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        clearButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });
        add(clearButton);
    }// </editor-fold>//GEN-END:initComponents

    private void severityComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_severityComboBoxItemStateChanged
        if (severityComboBox.getSelectedIndex() != -1)
            traceTable.setSeverityFilter(severities[severityComboBox.getSelectedIndex()]);
}//GEN-LAST:event_severityComboBoxItemStateChanged

    private void findTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_findTextFieldKeyTyped
        if (timer.isRunning())
            timer.restart();
        else
            timer.start();
}//GEN-LAST:event_findTextFieldKeyTyped

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        traceTable.clear();
}//GEN-LAST:event_clearButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearButton;
    private javax.swing.JTextField findTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox severityComboBox;
    private javax.swing.JPanel textFieldPanel;
    // End of variables declaration//GEN-END:variables

}
