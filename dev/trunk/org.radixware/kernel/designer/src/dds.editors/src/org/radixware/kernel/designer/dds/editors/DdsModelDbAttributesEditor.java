/*
 * Copyright (c) 2008-2015, Compass Plus Limited. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License,
 * v. 2.0. If a copy of the MPL was not distributed with this file, You can
 * obtain one at http://mozilla.org/MPL/2.0/. This Source Code is distributed
 * WITHOUT ANY WARRANTY; including any implied warranties but not limited to
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * Mozilla Public License, v. 2.0. for more details.
 */

package org.radixware.kernel.designer.dds.editors;

import java.awt.Dimension;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import org.radixware.kernel.common.defs.dds.DdsModelDef;
import org.radixware.kernel.common.defs.dds.utils.DbNameUtils;
import org.radixware.kernel.designer.common.annotations.registrators.EditorFactoryRegistration;
import org.radixware.kernel.designer.common.editors.RadixObjectEditor;
import org.radixware.kernel.designer.common.editors.RadixObjectModalEditor;
import org.radixware.kernel.designer.common.general.editors.IEditorFactory;
import org.radixware.kernel.designer.common.general.editors.OpenInfo;

/**
 * DDS Model settins editor.
 */
public class DdsModelDbAttributesEditor extends RadixObjectModalEditor<DdsModelDef.DbAttributes> implements ChangeListener {

    protected DdsModelDbAttributesEditor(DdsModelDef.DbAttributes dbAttributes) {
        super(dbAttributes);
        initComponents();

        this.setMaximumSize(new Dimension(1000, this.getPreferredSize().height));

        this.edDbNamePrefix.addChangeListener(this);
        this.edDefaultTablespaceForTables.addChangeListener(this);
        this.edDefaultTablespaceForIndices.addChangeListener(this);
    }

    DdsModelDef.DbAttributes getDbAttributes() {
        return super.getRadixObject();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        edDbNamePrefix = new org.radixware.kernel.designer.dds.editors.DbNameEditPanel();
        edDefaultTablespaceForTables = new org.radixware.kernel.designer.dds.editors.DbNameEditPanel();
        lbDnNamePrefix = new javax.swing.JLabel();
        lbDefaultTablespaceForTables = new javax.swing.JLabel();
        lbDefaultTablespaceForIndices = new javax.swing.JLabel();
        edDefaultTablespaceForIndices = new org.radixware.kernel.designer.dds.editors.DbNameEditPanel();

        org.openide.awt.Mnemonics.setLocalizedText(lbDnNamePrefix, org.openide.util.NbBundle.getMessage(DdsModelDbAttributesEditor.class, "DdsModelDbAttributesEditor.lbDnNamePrefix.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lbDefaultTablespaceForTables, org.openide.util.NbBundle.getMessage(DdsModelDbAttributesEditor.class, "DdsModelDbAttributesEditor.lbDefaultTablespaceForTables.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lbDefaultTablespaceForIndices, org.openide.util.NbBundle.getMessage(DdsModelDbAttributesEditor.class, "DdsModelDbAttributesEditor.lbDefaultTablespaceForIndices.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbDefaultTablespaceForIndices)
                    .addComponent(lbDefaultTablespaceForTables)
                    .addComponent(lbDnNamePrefix))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(edDbNamePrefix, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                    .addComponent(edDefaultTablespaceForTables, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                    .addComponent(edDefaultTablespaceForIndices, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbDnNamePrefix)
                    .addComponent(edDbNamePrefix, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbDefaultTablespaceForTables)
                    .addComponent(edDefaultTablespaceForTables, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbDefaultTablespaceForIndices)
                    .addComponent(edDefaultTablespaceForIndices, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.radixware.kernel.designer.dds.editors.DbNameEditPanel edDbNamePrefix;
    private org.radixware.kernel.designer.dds.editors.DbNameEditPanel edDefaultTablespaceForIndices;
    private org.radixware.kernel.designer.dds.editors.DbNameEditPanel edDefaultTablespaceForTables;
    private javax.swing.JLabel lbDefaultTablespaceForIndices;
    private javax.swing.JLabel lbDefaultTablespaceForTables;
    private javax.swing.JLabel lbDnNamePrefix;
    // End of variables declaration//GEN-END:variables
    private boolean wasChanged = false;

    @Override
    public boolean open(OpenInfo openInfo) {
        DdsModelDef.DbAttributes dbAttributes = getDbAttributes();

        this.edDbNamePrefix.setDbName(dbAttributes.getDbNamePrefix());
        this.edDefaultTablespaceForTables.setDbName(dbAttributes.getDefaultTablespaceForTables());
        this.edDefaultTablespaceForIndices.setDbName(dbAttributes.getDefaultTablespaceForIndices());

        update();

        wasChanged = false;
        return super.open(openInfo);
    }

    @Override
    public void update() {
        updateState();
    }

    private void updateState() {
        DdsModelDef.DbAttributes dbAttributes = getDbAttributes();

        final boolean editable = !dbAttributes.getOwnerModel().isReadOnly();
        this.edDbNamePrefix.setEditable(editable);
        this.edDefaultTablespaceForTables.setEditable(editable);
        this.edDefaultTablespaceForIndices.setEditable(editable);
        setComplete(true);
    }

    @Override
    protected void apply() {
        if (wasChanged) {
            DdsModelDef.DbAttributes dbAttributes = getDbAttributes();
            dbAttributes.setDbNamePrefix(edDbNamePrefix.getDbName());
            dbAttributes.setDefaultTablespaceForTables(edDefaultTablespaceForTables.getDbName());
            dbAttributes.setDefaultTablespaceForIndices(edDefaultTablespaceForIndices.getDbName());
            DbNameUtils.updateAutoDbNames(dbAttributes.getOwnerModel());
        }
    }

    @Override
    public void stateChanged(ChangeEvent e) {
        wasChanged = true;
    }

    @EditorFactoryRegistration
    public static final class Factory implements IEditorFactory<DdsModelDef.DbAttributes> {

        @Override
        public RadixObjectEditor newInstance(DdsModelDef.DbAttributes dbAttributes) {
            return new DdsModelDbAttributesEditor(dbAttributes);
        }
    }

    @Override
    public String getTitle() {
        return "Database Attributes Editor";
    }
}
