/*
 * Copyright (c) 2008-2015, Compass Plus Limited. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License,
 * v. 2.0. If a copy of the MPL was not distributed with this file, You can
 * obtain one at http://mozilla.org/MPL/2.0/. This Source Code is distributed
 * WITHOUT ANY WARRANTY; including any implied warranties but not limited to
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * Mozilla Public License, v. 2.0. for more details.
 */

package org.radixware.kernel.designer.dds.editors;


import org.radixware.kernel.common.defs.dds.DdsAccessPartitionFamilyDef;
import org.radixware.kernel.designer.common.annotations.registrators.EditorFactoryRegistration;
import org.radixware.kernel.designer.common.editors.RadixObjectEditor;
import org.radixware.kernel.designer.common.general.editors.IEditorFactory;
import org.radixware.kernel.designer.common.general.editors.OpenInfo;

/**
 * DdsColumnTemplateDef editor.
 */
public final class DdsAccessPartitionFamilyEditor extends RadixObjectEditor<DdsAccessPartitionFamilyDef> {

    private final DdsApfPanel apfEditorPanel;

    protected DdsAccessPartitionFamilyEditor(DdsAccessPartitionFamilyDef ddsAccessPartitionFamily) {
        super(ddsAccessPartitionFamily);
        initComponents();

        apfEditorPanel = new DdsApfPanel();
        this.add(apfEditorPanel);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    private DdsAccessPartitionFamilyDef getAccessPartitionFamily() {
        return getRadixObject();
    }

    @Override
    public boolean open(OpenInfo openInfo) {
        DdsAccessPartitionFamilyDef apf = getAccessPartitionFamily();
        apfEditorPanel.open(apf);
        update();
        return super.open(openInfo);
    }

    @Override
    public void update() {
        apfEditorPanel.update();
    }

    @EditorFactoryRegistration
    public static final class Factory implements IEditorFactory<DdsAccessPartitionFamilyDef> {

        @Override
        public DdsAccessPartitionFamilyEditor newInstance(DdsAccessPartitionFamilyDef ddsAccessPartitionFamily) {
            return new DdsAccessPartitionFamilyEditor(ddsAccessPartitionFamily);
        }
    }
}
