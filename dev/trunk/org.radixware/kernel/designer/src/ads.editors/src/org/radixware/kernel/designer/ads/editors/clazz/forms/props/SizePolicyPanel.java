/*
 * Copyright (c) 2008-2015, Compass Plus Limited. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License,
 * v. 2.0. If a copy of the MPL was not distributed with this file, You can
 * obtain one at http://mozilla.org/MPL/2.0/. This Source Code is distributed
 * WITHOUT ANY WARRANTY; including any implied warranties but not limited to
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * Mozilla Public License, v. 2.0. for more details.
 */

/*
 * MergePanel.java
 *
 * Created on 6 Ноябрь 2008 г., 14:25
 */
package org.radixware.kernel.designer.ads.editors.clazz.forms.props;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import javax.swing.BorderFactory;
import javax.swing.JPanel;
import org.openide.explorer.propertysheet.PropertyEnv;
import org.openide.util.Exceptions;
import org.radixware.kernel.common.defs.RadixObject;
import org.radixware.kernel.common.defs.ads.ui.AdsUIProperty;
import org.radixware.kernel.common.defs.ads.ui.enums.ESizePolicy;

public class SizePolicyPanel extends JPanel implements PropertyChangeListener {

    private PropertyEnv env;
    private SizePolicyEditor editor;

    SizePolicyPanel(SizePolicyEditor editor, PropertyEnv env) {
        this.env = env;
        this.editor = editor;

        env.setState(PropertyEnv.STATE_NEEDS_VALIDATION);
        env.addPropertyChangeListener(this);

        setLayout(new java.awt.BorderLayout());
        setBorder(BorderFactory.createEmptyBorder(12, 12, 0, 11));

        initComponents();

        AdsUIProperty.SizePolicyProperty prop = getProperty();
        textH.setSelectedItem(prop.hSizeType);
        textV.setSelectedItem(prop.vSizeType);

        boolean isReadOnly = !((UIPropertySupport) editor.getSource()).canWrite();
        textH.setEnabled(!isReadOnly);
        textV.setEnabled(!isReadOnly);
    }

    private AdsUIProperty.SizePolicyProperty getProperty() {
        return (AdsUIProperty.SizePolicyProperty) editor.getValue();
    }

    private RadixObject getNode() {
        return ((UIPropertySupport) editor.getSource()).getNode();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelH = new javax.swing.JLabel();
        labelV = new javax.swing.JLabel();
        textH = new javax.swing.JComboBox();
        textV = new javax.swing.JComboBox();

        setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.SystemColor.inactiveCaption));
        setMinimumSize(new java.awt.Dimension(200, 140));
        setPreferredSize(new java.awt.Dimension(320, 260));

        labelH.setText(org.openide.util.NbBundle.getMessage(SizePolicyPanel.class, "SizePolicyPanel.labelH.text")); // NOI18N

        labelV.setText(org.openide.util.NbBundle.getMessage(SizePolicyPanel.class, "SizePolicyPanel.labelV.text")); // NOI18N

        textH.setModel(new javax.swing.DefaultComboBoxModel(ESizePolicy.values()));

        textV.setModel(new javax.swing.DefaultComboBoxModel(ESizePolicy.values()));
        textV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textVActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelH)
                    .addComponent(labelV))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textV, 0, 216, Short.MAX_VALUE)
                    .addComponent(textH, 0, 216, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelH)
                    .addComponent(textH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelV)
                    .addComponent(textV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(171, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void textVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textVActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_textVActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel labelH;
    private javax.swing.JLabel labelV;
    private javax.swing.JComboBox textH;
    private javax.swing.JComboBox textV;
    // End of variables declaration//GEN-END:variables

    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        if (PropertyEnv.PROP_STATE.equals(evt.getPropertyName()) && evt.getNewValue() == PropertyEnv.STATE_VALID) {
            AdsUIProperty.SizePolicyProperty prop = getProperty();
            prop.hSizeType = (ESizePolicy) textH.getSelectedItem();
            prop.vSizeType = (ESizePolicy) textV.getSelectedItem();
            editor.setValue(prop);
            try {
                ((UIPropertySupport) editor.getSource()).setValue(prop);
            } catch (Exception ex) {
                Exceptions.printStackTrace(ex);
            }
        }
    }
}
