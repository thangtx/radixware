/*
 * Copyright (c) 2008-2015, Compass Plus Limited. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License,
 * v. 2.0. If a copy of the MPL was not distributed with this file, You can
 * obtain one at http://mozilla.org/MPL/2.0/. This Source Code is distributed
 * WITHOUT ANY WARRANTY; including any implied warranties but not limited to
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * Mozilla Public License, v. 2.0. for more details.
 */

/*
 * TypeArgumentsOwnerPropertiesPanel.java
 *
 * Created on 16.09.2009, 10:54:41
 */

package org.radixware.kernel.designer.ads.editors.clazz.simple;

import org.radixware.kernel.common.defs.ads.clazz.AdsClassDef;
import org.radixware.kernel.common.enums.EClassType;
import org.radixware.kernel.common.enums.ERuntimeEnvironmentType;


public class TypeArgumentsOwnerPropertiesPanel extends javax.swing.JPanel {

    //private ChooseEnvComboBoxModel envModel = new ChooseEnvComboBoxModel();
    /** Creates new form TypeArgumentsOwnerPropertiesPanel */
    public TypeArgumentsOwnerPropertiesPanel() {
        initComponents();
//        envBox.addActionListener(new ActionListener() {
//
//            @Override
//            public void actionPerformed(ActionEvent e) {
//                TypeArgumentsOwnerPropertiesPanel.this.onEnvironmentChange();
//            }
//
//        });
//        envBox.setModel(new EnvironmentComboBoxModel());
    }

    private AdsClassDef definition;
    private boolean isUpdate = false;

    public void open(AdsClassDef definition){
        this.definition = definition;
        EClassType classType = definition.getClassDefType();
        assert(classType == EClassType.DYNAMIC ||
               classType == EClassType.INTERFACE ||
               classType == EClassType.EXCEPTION);
        update();
    }

    public void update(){
        isUpdate = true;
        final boolean readonly = definition.isReadOnly();
        typeArgumentsEditor.open(definition, definition.getTypeArguments(), readonly);
//        envModel.setCurrentEnv(definition.getUsageEnvironment());
//        envBox.getModel().setSelectedItem(definition.getUsageEnvironment());
//        envBox.setEnabled(!readonly);
        isUpdate = false;
    }

//    private void onEnvironmentChange(){
//        if (!isUpdate){
//            definition.setUsageEnvironment(ERuntimeEnvironmentType.getForName(envBox.getSelectedItem().toString()));
//        }
//    }

    public void setReadonly(boolean readonly){
        typeArgumentsEditor.setReadonly(readonly);
//        envBox.setEnabled(!readonly);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        typeArgumentsEditor = new org.radixware.kernel.designer.common.dialogs.components.TypeArgumentsEditor();

        setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(TypeArgumentsOwnerPropertiesPanel.class, "GeneralPanel-TypeArguments"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(typeArgumentsEditor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(typeArgumentsEditor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.radixware.kernel.designer.common.dialogs.components.TypeArgumentsEditor typeArgumentsEditor;
    // End of variables declaration//GEN-END:variables

}
