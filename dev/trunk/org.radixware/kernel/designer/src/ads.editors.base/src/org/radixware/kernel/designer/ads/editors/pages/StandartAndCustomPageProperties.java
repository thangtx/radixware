/*
 * Copyright (c) 2008-2015, Compass Plus Limited. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License,
 * v. 2.0. If a copy of the MPL was not distributed with this file, You can
 * obtain one at http://mozilla.org/MPL/2.0/. This Source Code is distributed
 * WITHOUT ANY WARRANTY; including any implied warranties but not limited to
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * Mozilla Public License, v. 2.0. for more details.
 */

/*
 * StandartPageProps.java
 *
 * Created on 07.09.2009, 10:57:50
 */
package org.radixware.kernel.designer.ads.editors.pages;

import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import org.radixware.kernel.common.defs.ads.clazz.presentation.AdsEditorPageDef;
import org.radixware.kernel.common.enums.EEditorPageType;


public class StandartAndCustomPageProperties extends javax.swing.JPanel {

    /** Creates new form StandartPageProps */
    public StandartAndCustomPageProperties() {
        initComponents();
    }
    private AdsEditorPageDef page;

    public void open(final AdsEditorPageDef page) {
        this.page = page;

        if (page.getType().equals(EEditorPageType.STANDARD)) {
            UsedPropertiesTable usedTable = new UsedPropertiesTable(page);
            usedTable.addRemoveListener(new ChangeListener() {

                @Override
                public void stateChanged(ChangeEvent e) {
                    chooser.update();
                }
            });
            chooser.open(usedTable, new AvailableAdsEditorPageDefPropertiesList(page));
        }
        update();
    }

    public void update() {
        final boolean readonly = page.isReadOnly();

        chooser.setVisible(page.getType().equals(EEditorPageType.STANDARD));
        if (chooser.isVisible()){
            chooser.setReadonly(readonly);
            chooser.update();
        }
        
        titleAndIcon.open(page);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chooser = new org.radixware.kernel.designer.common.dialogs.components.RadixObjectChooserPanel();
        titleAndIcon = new org.radixware.kernel.designer.ads.editors.pages.TitleAndIconPanel();

        javax.swing.GroupLayout chooserLayout = new javax.swing.GroupLayout(chooser);
        chooser.setLayout(chooserLayout);
        chooserLayout.setHorizontalGroup(
            chooserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 376, Short.MAX_VALUE)
        );
        chooserLayout.setVerticalGroup(
            chooserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 176, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout titleAndIconLayout = new javax.swing.GroupLayout(titleAndIcon);
        titleAndIcon.setLayout(titleAndIconLayout);
        titleAndIconLayout.setHorizontalGroup(
            titleAndIconLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 376, Short.MAX_VALUE)
        );
        titleAndIconLayout.setVerticalGroup(
            titleAndIconLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(titleAndIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(chooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleAndIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.radixware.kernel.designer.common.dialogs.components.RadixObjectChooserPanel chooser;
    private org.radixware.kernel.designer.ads.editors.pages.TitleAndIconPanel titleAndIcon;
    // End of variables declaration//GEN-END:variables
}
