/*
 * Copyright (c) 2008-2015, Compass Plus Limited. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License,
 * v. 2.0. If a copy of the MPL was not distributed with this file, You can
 * obtain one at http://mozilla.org/MPL/2.0/. This Source Code is distributed
 * WITHOUT ANY WARRANTY; including any implied warranties but not limited to
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * Mozilla Public License, v. 2.0. for more details.
 */

/*
 * AdsClassCatalogCreatureSetupStep1Visual.java
 *
 * Created on Jul 17, 2009, 11:20:17 AM
 */
package org.radixware.kernel.designer.ads.editors.creation;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import org.openide.util.ChangeSupport;


public class AdsClassCatalogCreatureSetupStep1Visual extends javax.swing.JPanel {

    /** Creates new form AdsClassCatalogCreatureSetupStep1Visual */
    public AdsClassCatalogCreatureSetupStep1Visual() {
        initComponents();
        chCreateVirtual.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                if (creature != null) {
                    creature.createVirtual = true;
                }
            }
        });
        chCreateOverwrite.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                if (creature != null) {
                    creature.createVirtual = false;
                }
            }
        });
        nameEditPanel1.addChangeListener(new ChangeListener() {

            @Override
            public void stateChanged(ChangeEvent e) {
                if(creature != null){
                    creature.name = nameEditPanel1.getCurrentName();
                    fireChange();
                }
            }
        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        nameEditPanel1 = new org.radixware.kernel.designer.common.dialogs.components.NameEditPanel();
        jLabel1 = new javax.swing.JLabel();
        chCreateVirtual = new javax.swing.JRadioButton();
        chCreateOverwrite = new javax.swing.JRadioButton();

        jLabel1.setText(org.openide.util.NbBundle.getMessage(AdsClassCatalogCreatureSetupStep1Visual.class, "AdsClassCatalogCreatureSetupStep1Visual.jLabel1.text")); // NOI18N

        buttonGroup1.add(chCreateVirtual);
        chCreateVirtual.setText(org.openide.util.NbBundle.getMessage(AdsClassCatalogCreatureSetupStep1Visual.class, "AdsClassCatalogCreatureSetupStep1Visual.chCreateVirtual.text")); // NOI18N

        buttonGroup1.add(chCreateOverwrite);
        chCreateOverwrite.setText(org.openide.util.NbBundle.getMessage(AdsClassCatalogCreatureSetupStep1Visual.class, "AdsClassCatalogCreatureSetupStep1Visual.chCreateOverwrite.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chCreateOverwrite)
                    .addComponent(chCreateVirtual)
                    .addComponent(nameEditPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 558, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameEditPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chCreateVirtual)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chCreateOverwrite)
                .addContainerGap(207, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton chCreateOverwrite;
    private javax.swing.JRadioButton chCreateVirtual;
    private javax.swing.JLabel jLabel1;
    private org.radixware.kernel.designer.common.dialogs.components.NameEditPanel nameEditPanel1;
    // End of variables declaration//GEN-END:variables
    private final ChangeSupport changeSupport = new ChangeSupport(this);

    public void removeChangeListener(ChangeListener listener) {
        changeSupport.removeChangeListener(listener);
    }

    public void fireChange() {
        changeSupport.fireChange();
    }

    public void addChangeListener(ChangeListener listener) {
        changeSupport.addChangeListener(listener);
    }
    AdsClassCatalogCreature creature = null;

    public void open(AdsClassCatalogCreature creature) {
        this.creature = creature;
        nameEditPanel1.setCurrentName(creature.name);
        if (creature.createVirtual) {
            chCreateVirtual.setSelected(true);
        } else {
            chCreateOverwrite.setSelected(true);
        }
    }

    boolean isComplete() {
        if (nameEditPanel1.isComplete()) {
            return true;
        } else {
            return false;
        }
    }
}
