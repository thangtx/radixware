/*
 * Copyright (c) 2008-2015, Compass Plus Limited. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License,
 * v. 2.0. If a copy of the MPL was not distributed with this file, You can
 * obtain one at http://mozilla.org/MPL/2.0/. This Source Code is distributed
 * WITHOUT ANY WARRANTY; including any implied warranties but not limited to
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * Mozilla Public License, v. 2.0. for more details.
 */

/*
 * AdsPresentationCreatureStepPanel.java
 *
 * Created on 01.06.2010, 10:14:06
 */

package org.radixware.kernel.designer.ads.editors.creation;

import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import org.openide.util.ChangeSupport;
import org.radixware.kernel.common.defs.Definition;
import org.radixware.kernel.common.defs.ExtendableDefinitions;
import org.radixware.kernel.common.defs.ads.clazz.IAdsPresentableClass;
import org.radixware.kernel.common.defs.ads.clazz.presentation.AdsEditorPresentationDef;
import org.radixware.kernel.common.defs.ads.clazz.presentation.AdsSelectorPresentationDef;
import org.radixware.kernel.common.defs.ads.clazz.presentation.ClassPresentations;
import org.radixware.kernel.common.defs.ads.clazz.presentation.EntityObjectPresentations;
import org.radixware.kernel.common.types.Id;
import org.radixware.kernel.designer.ads.editors.presentations.BasePresentationListRenderer;


public class AdsPresentationCreatureStepPanel extends javax.swing.JPanel {

    private AdsPresentationCreature creature;
    /** Creates new form AdsPresentationCreatureStepPanel */
    public AdsPresentationCreatureStepPanel() {
        initComponents();
        baseEditor.setComboMode();
        baseEditor.setComboBoxRenderer(new BasePresentationListRenderer());
        baseEditor.addChangeListener(new ChangeListener() {

            @Override
            public void stateChanged(ChangeEvent e) {
                Id newId = baseEditor.getDefinitionId();
                if (creature != null){
                    creature.setBasePresentation(newId);
                    changeSupport.fireChange();
                }
            }
        });
        nameEditor.addChangeListener(new ChangeListener() {

            @Override
            public void stateChanged(ChangeEvent e) {
                String name = nameEditor.getCurrentName();
                if (creature != null){
                    creature.setName(name);
                    changeSupport.fireChange();
                }
            }
        });
    }

    public void open(AdsPresentationCreature creature){
       this.creature = creature;
       nameEditor.setCurrentName(creature.getName());
       Definition owner = creature.getContainer().getOwnerDefinition();
       if (owner instanceof IAdsPresentableClass){
           ClassPresentations presentations = ((IAdsPresentableClass) owner).getPresentations();
           if (presentations instanceof EntityObjectPresentations){
               EntityObjectPresentations entityBased = (EntityObjectPresentations) presentations;
               int type = creature.getType();
               if (type == AdsPresentationCreature.EDITOR_PRESENTATION){
                   ExtendableDefinitions<AdsEditorPresentationDef> editors = entityBased.getEditorPresentations();
                   baseEditor.setComboBoxValues(editors.get(ExtendableDefinitions.EScope.ALL), true);
               } else {
                   ExtendableDefinitions<AdsSelectorPresentationDef> selectors = entityBased.getSelectorPresentations();
                   baseEditor.setComboBoxValues(selectors.get(ExtendableDefinitions.EScope.ALL), true);
               }
           }
       }
       baseEditor.open(null, null);
       nameEditor.requestFocusInWindow();
    }

    public boolean isComplete(){
        return nameEditor.isComplete();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nameEditor = new org.radixware.kernel.designer.common.dialogs.components.NameEditPanel();
        baseEditor = new org.radixware.kernel.designer.common.dialogs.components.DefinitionLinkEditPanel();

        jLabel1.setText(org.openide.util.NbBundle.getMessage(AdsPresentationCreatureStepPanel.class, "Name-Label")); // NOI18N

        jLabel2.setText(org.openide.util.NbBundle.getMessage(AdsPresentationCreatureStepPanel.class, "AdsPresentationStep")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameEditor, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                    .addComponent(baseEditor, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nameEditor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(baseEditor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(222, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.radixware.kernel.designer.common.dialogs.components.DefinitionLinkEditPanel baseEditor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private org.radixware.kernel.designer.common.dialogs.components.NameEditPanel nameEditor;
    // End of variables declaration//GEN-END:variables

    private final ChangeSupport changeSupport = new ChangeSupport(this);

    public void removeChangeListener(ChangeListener listener) {
        changeSupport.removeChangeListener(listener);
    }

    public void addChangeListener(ChangeListener listener) {
        changeSupport.addChangeListener(listener);
    }


}
