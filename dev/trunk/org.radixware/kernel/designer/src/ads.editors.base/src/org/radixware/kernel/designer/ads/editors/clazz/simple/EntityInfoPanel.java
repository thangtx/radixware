/*
 * Copyright (c) 2008-2015, Compass Plus Limited. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License,
 * v. 2.0. If a copy of the MPL was not distributed with this file, You can
 * obtain one at http://mozilla.org/MPL/2.0/. This Source Code is distributed
 * WITHOUT ANY WARRANTY; including any implied warranties but not limited to
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * Mozilla Public License, v. 2.0. for more details.
 */

/*
 * EntityPanel.java
 *
 * Created on Apr 22, 2009, 11:39:15 AM
 */
package org.radixware.kernel.designer.ads.editors.clazz.simple;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import org.radixware.kernel.common.defs.ads.clazz.entity.AdsEntityBasedClassDef;
import org.radixware.kernel.common.defs.ads.clazz.entity.AdsEntityObjectClassDef;
import org.radixware.kernel.common.defs.dds.DdsTableDef;
import org.radixware.kernel.designer.common.general.editors.EditorsManager;
import org.radixware.kernel.designer.common.general.nodes.NodesManager;
import org.radixware.kernel.common.resources.RadixWareIcons;


public class EntityInfoPanel extends javax.swing.JPanel {

    private JButton gotoObjectButton1, selectInExplorerButton1;
    private JButton gotoObjectButton2, selectInExplorerButton2;
    private AdsEntityBasedClassDef adsEntityBasedClassDef;
    private DdsTableDef ddsTableDef;
    private AdsEntityObjectClassDef basis;

    /**
     * Creates new form EntityPanel
     */
    public EntityInfoPanel() {
        super();
        initComponents();

        gotoObjectButton1 = tableExtendableTextField.addButton();
        gotoObjectButton1.setIcon(RadixWareIcons.ARROW.GO_TO_OBJECT.getIcon());
        gotoObjectButton1.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (ddsTableDef != null) {
                    EditorsManager.getDefault().open(ddsTableDef);
                }
            }
        });

        selectInExplorerButton1 = tableExtendableTextField.addButton();
        selectInExplorerButton1.setIcon(RadixWareIcons.TREE.SELECT_IN_TREE.getIcon());
        selectInExplorerButton1.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (ddsTableDef != null) {
                    NodesManager.selectInProjects(ddsTableDef);
                }
            }
        });

        gotoObjectButton2 = basisExtendableTextField.addButton();
        gotoObjectButton2.setIcon(RadixWareIcons.ARROW.GO_TO_OBJECT.getIcon());
        gotoObjectButton2.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (basis != null) {
                    EditorsManager.getDefault().open(basis);
                }
            }
        });

        selectInExplorerButton2 = basisExtendableTextField.addButton();
        selectInExplorerButton2.setIcon(RadixWareIcons.TREE.SELECT_IN_TREE.getIcon());
        selectInExplorerButton2.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (basis != null) {
                    NodesManager.selectInProjects(basis);
                }
            }
        });
    }

    public void open(AdsEntityBasedClassDef adsEntityBasedClassDef) {
        this.adsEntityBasedClassDef = adsEntityBasedClassDef;
        update();
    }

    public void update() {

        this.ddsTableDef = adsEntityBasedClassDef.findTable(adsEntityBasedClassDef);
        if (ddsTableDef != null) {
            tableExtendableTextField.setValue(ddsTableDef.getQualifiedName());
        } else {
            tableExtendableTextField.setValue("");
        }

        this.basis = adsEntityBasedClassDef.findBasis();
        if (basis != null) {
            basisExtendableTextField.setValue(basis.getQualifiedName());
        } else {
            basisExtendableTextField.setValue("");
        }
    }

    public void setReadonly(boolean readonly) {
        tableExtendableTextField.setReadOnly(readonly);
        basisExtendableTextField.setReadOnly(readonly);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tableExtendableTextField = new org.radixware.kernel.common.components.ExtendableTextField(true);
        entityLabel = new javax.swing.JLabel();
        basisLabel = new javax.swing.JLabel();
        basisExtendableTextField = new org.radixware.kernel.common.components.ExtendableTextField(true);

        setMaximumSize(null);

        entityLabel.setText(org.openide.util.NbBundle.getMessage(EntityInfoPanel.class, "LinkedEntityPanel-Title")); // NOI18N

        basisLabel.setText(org.openide.util.NbBundle.getMessage(EntityInfoPanel.class, "EntityInfoPanel.basisLabel.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(entityLabel)
                    .addComponent(basisLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(basisExtendableTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)
                    .addComponent(tableExtendableTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tableExtendableTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(entityLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(basisExtendableTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(basisLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.radixware.kernel.common.components.ExtendableTextField basisExtendableTextField;
    private javax.swing.JLabel basisLabel;
    private javax.swing.JLabel entityLabel;
    private org.radixware.kernel.common.components.ExtendableTextField tableExtendableTextField;
    // End of variables declaration//GEN-END:variables
}
