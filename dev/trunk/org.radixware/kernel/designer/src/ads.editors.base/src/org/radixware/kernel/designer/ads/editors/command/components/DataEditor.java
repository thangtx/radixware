/*
 * Copyright (c) 2008-2015, Compass Plus Limited. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License,
 * v. 2.0. If a copy of the MPL was not distributed with this file, You can
 * obtain one at http://mozilla.org/MPL/2.0/. This Source Code is distributed
 * WITHOUT ANY WARRANTY; including any implied warranties but not limited to
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * Mozilla Public License, v. 2.0. for more details.
 */

/*
 * DataEditor.java
 *
 * Created on 18.05.2009, 18:24:18
 */

package org.radixware.kernel.designer.ads.editors.command.components;

import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import org.radixware.kernel.common.defs.ads.command.AdsCommandDef;


public class DataEditor extends javax.swing.JPanel {

    private AdsCommandDef command;

    /** Creates new form DataEditor */
    public DataEditor() {
        initComponents();
    }
    
    public final void addInTypeChangeListener(ChangeListener l) {
        inTypeEditor.addChangeListener(l);
    }

    public final void removeInTypeChangeListener(ChangeListener l) {
        inTypeEditor.removeChangeListener(l);
    }

    
    private void setupListeners(){
        ChangeListener inTypeEditorListener = new ChangeListener(){

            @Override
            public void stateChanged(ChangeEvent e) {
                if (!isUpdate){
                if (inTypeEditor.getCurrentDataType().equals(AdsCommandDataPanel.FORM_ACTION)){
                    outTypeEditor.selectDataType(AdsCommandDataPanel.FORM_ACTION);
                    outTypeEditor.update();
                    outTypeEditor.setChecksReadonly(true);
                }else{
                    //outTypeEditor.selectDataType(AdsCommandDataPanel.NONE_ACTION);
                    //outTypeEditor.update();
                    outTypeEditor.setChecksReadonly(false);
                }
                }
            }

        };
        inTypeEditor.addChangeListener(inTypeEditorListener);
    }

    public void open(final AdsCommandDef command){
        this.command = command;
        inTypeEditor.open(command, AdsCommandDataPanel.IN_EDITOR);
        outTypeEditor.open(command, AdsCommandDataPanel.OUT_EDITOR);
        update();
        setupListeners();
    }

    private boolean isUpdate = false;
    public void update(){
        isUpdate = true;
        inTypeEditor.update();
        outTypeEditor.update();
        outTypeEditor.setChecksReadonly(inTypeEditor.getCurrentDataType().equals(AdsCommandDataPanel.FORM_ACTION));
        isUpdate = false;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        inTypeEditor = new org.radixware.kernel.designer.ads.editors.command.components.AdsCommandDataPanel();
        jPanel2 = new javax.swing.JPanel();
        outTypeEditor = new org.radixware.kernel.designer.ads.editors.command.components.AdsCommandDataPanel();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(DataEditor.class, "AdsCommand-InDataTip"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(inTypeEditor, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(inTypeEditor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(DataEditor.class, "AdsCommand-OutDataTip"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(outTypeEditor, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(outTypeEditor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.radixware.kernel.designer.ads.editors.command.components.AdsCommandDataPanel inTypeEditor;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private org.radixware.kernel.designer.ads.editors.command.components.AdsCommandDataPanel outTypeEditor;
    // End of variables declaration//GEN-END:variables

}
