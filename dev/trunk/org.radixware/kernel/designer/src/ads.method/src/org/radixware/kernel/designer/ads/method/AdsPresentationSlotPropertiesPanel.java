/*
 * Copyright (c) 2008-2015, Compass Plus Limited. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License,
 * v. 2.0. If a copy of the MPL was not distributed with this file, You can
 * obtain one at http://mozilla.org/MPL/2.0/. This Source Code is distributed
 * WITHOUT ANY WARRANTY; including any implied warranties but not limited to
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * Mozilla Public License, v. 2.0. for more details.
 */

/*
 * AdsPresentationSlotPropertiesPanel.java
 *
 * Created on 22.09.2009, 15:09:27
 */
package org.radixware.kernel.designer.ads.method;

import java.util.Set;
import org.radixware.kernel.common.defs.ads.clazz.members.AdsPresentationSlotMethodDef;
import org.radixware.kernel.common.defs.ads.ui.AdsUIConnection;
import org.radixware.kernel.common.defs.ads.ui.AdsUIItemDef;
import org.radixware.kernel.common.defs.ads.ui.AdsWidgetDef;


public class AdsPresentationSlotPropertiesPanel extends javax.swing.JPanel {

    /** Creates new form AdsPresentationSlotPropertiesPanel */
    public AdsPresentationSlotPropertiesPanel() {
        initComponents();
    }
    private AdsPresentationSlotMethodDef slot;

    public void open(final AdsPresentationSlotMethodDef slot) {
        this.slot = slot;
        update();
    }

    public void update() {
        if (slot != null) {
            int idx = 0;
            String signals = "", widgets = "";
            Set<AdsUIConnection> conns = slot.findUIConnections();
            if (conns != null) {
                for (AdsUIConnection c : conns) {
                    AdsUIItemDef w = c.getSender();
                    if (w == null) {
                        continue;
                    }
                    signals += c.getSignalName();
                    widgets += w.getName();
                    if (++idx < conns.size()) {
                        signals += ", ";
                        widgets += ", ";
                    }
                }
            }
            signalName.setText(signals);
            widgetID.setText(widgets);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        signalName = new javax.swing.JTextField();
        widgetID = new javax.swing.JTextField();

        jLabel1.setText(org.openide.util.NbBundle.getMessage(AdsPresentationSlotPropertiesPanel.class, "PresentationSlot-Signal")); // NOI18N

        jLabel2.setText(org.openide.util.NbBundle.getMessage(AdsPresentationSlotPropertiesPanel.class, "PresentationSlot-WidgetId")); // NOI18N

        signalName.setEditable(false);

        widgetID.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(widgetID, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(signalName, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(widgetID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(signalName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField signalName;
    private javax.swing.JTextField widgetID;
    // End of variables declaration//GEN-END:variables
}
