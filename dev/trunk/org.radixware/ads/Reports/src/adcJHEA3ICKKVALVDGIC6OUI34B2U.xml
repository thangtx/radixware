<?xml version="1.0" encoding="UTF-8"?>
<AdsDefinition xmlns="http://schemas.radixware.org/adsdef.xsd" xmlns:xsc="http://schemas.radixware.org/xscml.xsd" FormatVersion="0">
  <AdsClassDefinition Id="adcJHEA3ICKKVALVDGIC6OUI34B2U" Name="ReportPreview" Type="3" Environment="server">
    <AccessRules IsPublished="false">
      <Transparence Extendable="false"/>
    </AccessRules>
    <Headers>
      <Src Name="HeaderadcJHEA3ICKKVALVDGIC6OUI34B2U"/>
    </Headers>
    <Bodies>
      <Src Name="BodyadcJHEA3ICKKVALVDGIC6OUI34B2U">
        <xsc:Item>
          <xsc:Java>private static final String MTH_OPEN_DYNANIC = "mth_report_open_dynamic______";</xsc:Java>
        </xsc:Item>
      </Src>
    </Bodies>
    <MethodGroup Id="cmgS6EJ7DORKZA5VD4RBPY5WWUSGA" Name="Root"/>
    <PropertyGroup Id="cpgOFHIEGDSUBF7ZNFHQBYDNE7LSI" Name="Root"/>
    <Properties/>
    <Methods>
      <Method Id="mthAK2Z4XDFTNGVPDCL2U2EIXMJPQ" Name="preview" Nature="0" IsReflectiveCallable="true" IsOverride="false" isDescriptionInherited="false">
        <AccessRules IsPublished="false" IsStatic="true"/>
        <Parameters>
          <Parameter Name="reportId" Id="mprPATNMYDUN5BF7GLISRUUSHMTSQ">
            <Type TypeId="21"/>
          </Parameter>
          <Parameter Name="reportLayerUri" Id="mprLQMQS44LJRDHZN3Z46VDU2BZOI">
            <Type TypeId="21"/>
          </Parameter>
          <Parameter Name="exportFormat" Id="mprQXCFP5BEHVDA7CTGQJ6RD3R6YM">
            <Type TypeId="21"/>
          </Parameter>
          <Parameter Name="reportJar" Id="mprZG2OGBBTEZDSPNWTMP22ONIASU">
            <Type TypeId="22"/>
          </Parameter>
          <Parameter Name="testDataZip" Id="mprLVBV4OQ22VGJPLL6SX3MARNBOE">
            <Type TypeId="22"/>
          </Parameter>
          <Parameter Name="exportLocale" Id="mprGBVGJSROL5ANRMDZZ2VGVFKFHQ">
            <Type TypeId="21"/>
          </Parameter>
        </Parameters>
        <ReturnType TypeId="22"/>
        <ThrownExceptions>
          <Exception TypeId="411" Path="axc5VQBE2IIHJBXJMAHO52JXIWLDY"/>
        </ThrownExceptions>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>if (testDataZip == null) {
    throw new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axc5VQBE2IIHJBXJMAHO52JXIWLDY mthRZJDWAVA7NCPJFWPBFLCU3JKBY" Invoke="true">
                <xsc:Presentation>ReportGenerationException</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>("Report preview test data not found");
}

if (reportJar == null) {
    throw new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axc5VQBE2IIHJBXJMAHO52JXIWLDY mthRZJDWAVA7NCPJFWPBFLCU3JKBY" Invoke="true">
                <xsc:Presentation>ReportGenerationException</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>("Report binaries not found");
}

if (reportLayerUri != null
        &amp;&amp; !</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="pdcArte______________________">
                <xsc:Presentation>Arte::Arte</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="pdcArte______________________ mthJ22YS76JKFBLHMS32FAYSH3QNI" Invoke="true">
                <xsc:Presentation>getDefManager</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>().getReleaseCache().getRelease().getRevisionMeta().getAllLayersSortedFromBottom().contains(reportLayerUri)) {
    throw new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axc5VQBE2IIHJBXJMAHO52JXIWLDY mthRZJDWAVA7NCPJFWPBFLCU3JKBY" Invoke="true">
                <xsc:Presentation>ReportGenerationException</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>("Report layer '" + reportLayerUri + "' doesn't exists on server");
}

if (!org.radixware.kernel.common.utils.Utils.emptyOrNull(exportLocale)) {
    </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21">
                <xsc:Presentation>Str</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> language = exportLocale;
    if (exportLocale.contains("_")) {
        </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21">
                <xsc:Presentation>Str</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> localeParts[] = exportLocale.split("_");
        language = localeParts[0];

        java.util.Locale locale = new java.util.Locale(localeParts[0], localeParts[1]);
        </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="pdcArte______________________">
                <xsc:Presentation>Arte::Arte</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="pdcArte______________________ mthX22GMFYBKNC6RGIHJSGRQQ7K2A" Invoke="true">
                <xsc:Presentation>getInstance</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>().setClientLocale(locale);
    }
    </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="pdcArte______________________">
                <xsc:Presentation>Arte::Arte</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="pdcArte______________________ mthX22GMFYBKNC6RGIHJSGRQQ7K2A" Invoke="true">
                <xsc:Presentation>getInstance</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>().setClientLanguage(</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21" Path="acs2G44GBNBE5D7RO2QHQSVRZNLG4">
                <xsc:Presentation>Common::Language</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.getForValue(language));
}

</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="adcJHEA3ICKKVALVDGIC6OUI34B2U">
                <xsc:Presentation>ReportPreview</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="adcJHEA3ICKKVALVDGIC6OUI34B2U adcJDVKLI72FFFBVB6B3Z23NZMQ6Y">
                <xsc:Presentation>ReportPreviewEnvironment</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> env = new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJHEA3ICKKVALVDGIC6OUI34B2U adcJDVKLI72FFFBVB6B3Z23NZMQ6Y mthS4VUDT6WPZEIVOJEROU4JSP7RQ" Invoke="true">
                <xsc:Presentation>ReportPreviewEnvironment</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(reportJar, testDataZip);
try {
    </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="pdcReport____________________">
                <xsc:Presentation>Types::Report</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.setPreviewEnvironment(env);
    </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="pdcReport____________________">
                <xsc:Presentation>Types::Report</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> report = (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="pdcReport____________________">
                <xsc:Presentation>Types::Report</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>) env.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJHEA3ICKKVALVDGIC6OUI34B2U adcJDVKLI72FFFBVB6B3Z23NZMQ6Y mthBGWE5ME3QRHB7LGCNPOJMRE454" Invoke="true">
                <xsc:Presentation>findReportClassById</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="adcKDF543XQWZEI5DORWHNFIYCZ2A">
                <xsc:Presentation>Types::Id.Factory</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcKDF543XQWZEI5DORWHNFIYCZ2A mthGFAPI2TPWZEJHN436UQMWZIPZM" Invoke="true">
                <xsc:Presentation>loadFrom</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(reportId)).newInstance();

    </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21" Path="acs4NSZFZYJC5AHVA3VWFI5QA3ECE">
                <xsc:Presentation>ReportExportFormat</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> format = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJHEA3ICKKVALVDGIC6OUI34B2U mthYQQ5JQPGYJDALFPJCNFSU3SW5M" Invoke="true">
                <xsc:Presentation>getFormatForString</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(exportFormat);

    java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
    java.util.Map&lt;</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="adcELH54EKVCJAATNTLFHHCSVHPZU">
                <xsc:Presentation>Types::Id</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>, java.lang.Object> parameters = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJHEA3ICKKVALVDGIC6OUI34B2U mthUZM3QLBOUZCUDNQHUZ7ASAUX2Y" Invoke="true">
                <xsc:Presentation>isReportRequireParameters</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(report) ? env.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJHEA3ICKKVALVDGIC6OUI34B2U adcJDVKLI72FFFBVB6B3Z23NZMQ6Y mthY72W5O5I35BXNC4BSG7YUE7GSE" Invoke="true">
                <xsc:Presentation>getReportParameters</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(report) : null;

    </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="adcJHEA3ICKKVALVDGIC6OUI34B2U">
                <xsc:Presentation>ReportPreview</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="adcJHEA3ICKKVALVDGIC6OUI34B2U adcJCQNMJQR3JGTVGF5EAYMZPORWU">
                <xsc:Presentation>ReportPreviewFileController</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> controller = new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJHEA3ICKKVALVDGIC6OUI34B2U adcJCQNMJQR3JGTVGF5EAYMZPORWU mthBGZBRKEFYZG3DBTQVJ7CEXTEII" Invoke="true">
                <xsc:Presentation>ReportPreviewFileController</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(format);

    </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="adcD6SBHW5LD5D6HCWXWMAPL6A3CI">
                <xsc:Presentation>ReportExportParameters</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> exportParameters = new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcD6SBHW5LD5D6HCWXWMAPL6A3CI mthCN3UXCD5TJBCLI7BUODSAOPYUA" Invoke="true">
                <xsc:Presentation>ReportExportParameters</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(controller);
    exportParameters.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcD6SBHW5LD5D6HCWXWMAPL6A3CI mthPNW2EOFK3VAD5H2OIUV7MY3H7I" Invoke="true">
                <xsc:Presentation>setExportFormat</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(format);
    exportParameters.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcD6SBHW5LD5D6HCWXWMAPL6A3CI mthLX25YSOMABBDNHIJSFH2E37SXI" Invoke="true">
                <xsc:Presentation>setParamId2Value</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(parameters);
    exportParameters.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcD6SBHW5LD5D6HCWXWMAPL6A3CI mthPOZPTHINVZGCLGLVJDXVE7CPDA" Invoke="true">
                <xsc:Presentation>setColumnSettings</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(env.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJHEA3ICKKVALVDGIC6OUI34B2U adcJDVKLI72FFFBVB6B3Z23NZMQ6Y mthUGCVZMS5LFHNHIBISMH4VGQDNU" Invoke="true">
                <xsc:Presentation>getReportColumnsSettings</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(report));

    report.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="pdcReport____________________ mth5YK3XAASPZAR7MTAAYCYUUXXX4" Invoke="true">
                <xsc:Presentation>export</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(exportParameters);
    </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJHEA3ICKKVALVDGIC6OUI34B2U mthLL4A3QXU25HUJAD67P77K3IYHI" Invoke="true">
                <xsc:Presentation>addDirToZip</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(controller.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aicJMKRUZ3AI5HQLJTVZYWCM6NVKM mthNMVOW6LIMVH3LA5FQV52TIFPOI" Invoke="true">
                <xsc:Presentation>getDirectory</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(), baos);
    controller.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJHEA3ICKKVALVDGIC6OUI34B2U adcJCQNMJQR3JGTVGF5EAYMZPORWU mth4CVL5JYCPNGW3PMSTDX72AO6JM" Invoke="true">
                <xsc:Presentation>deleteDirectory</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();

    return </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="22">
                <xsc:Presentation>Bin</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.wrap(baos.toByteArray());
} catch (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="axcVN3PK4FIINBOLIFTWXCBTA6UHI">
                <xsc:Presentation>Exceptions::Exception</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> e) {
    </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="pdcTrace_____________________">
                <xsc:Presentation>Arte::Trace</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="pdcTrace_____________________ mthP66N3O2SRPNRDCISABIFNQAABA" Invoke="true">
                <xsc:Presentation>warning</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="pdcTrace_____________________">
                <xsc:Presentation>Arte::Trace</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="pdcTrace_____________________ mthI2EAXRIFRTNRDCISABIFNQAABA" Invoke="true">
                <xsc:Presentation>exceptionStackToString</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(e), </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="acsTNLJBZADHTNRDIPGABQAQNO6EY aciA5UFXOQYZVGD3HR3MME5ZDOC5U" Invoke="true">
                <xsc:Presentation>Arte::EventSource:ArteReports</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>);
    throw new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axc5VQBE2IIHJBXJMAHO52JXIWLDY mth2JQDRI4TABBWHDAE6KAZ4S7CXU" Invoke="true">
                <xsc:Presentation>ReportGenerationException</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>("Report preview can not be generated", e);
} finally {
    env.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcJHEA3ICKKVALVDGIC6OUI34B2U adcJDVKLI72FFFBVB6B3Z23NZMQ6Y mthUSMGZVXNEZDOXPQX2HB4FIF4DQ" Invoke="true">
                <xsc:Presentation>close</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();
    </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="pdcReport____________________">
                <xsc:Presentation>Types::Report</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.setPreviewEnvironment(null);
}</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthUZM3QLBOUZCUDNQHUZ7ASAUX2Y" Name="isReportRequireParameters" Nature="0" IsOverride="false" isDescriptionInherited="false">
        <AccessRules Access="2" IsPublished="false" IsStatic="true"/>
        <Parameters>
          <Parameter Name="report" Id="mprH66B4SVO7BDMZC6U7UVH3EJASU">
            <Type TypeId="411" Path="pdcReport____________________"/>
          </Parameter>
        </Parameters>
        <ReturnType TypeId="401" extStr="boolean"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>java.lang.reflect.Method[] methods = report.getClass().getDeclaredMethods();
for (java.lang.reflect.Method method : methods) {
    if (method.getName().equals(MTH_OPEN_DYNANIC) &amp;&amp; method.getParameterTypes().length > 0) {
        return true;
    }
}

return false;</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthLL4A3QXU25HUJAD67P77K3IYHI" Name="addDirToZip" Nature="0" IsOverride="false" isDescriptionInherited="false">
        <AccessRules Access="2" IsPublished="false" IsStatic="true"/>
        <Parameters>
          <Parameter Name="dir" Id="mprLLOSG6SWOZATJCQGFMHFSCIG7E">
            <Type TypeId="400" extStr="java.io.File"/>
          </Parameter>
          <Parameter Name="zipBaseOutputStream" Id="mprG3X655XVPNHBRJNPRRLCBQOYYU">
            <Type TypeId="400" extStr="java.io.OutputStream"/>
          </Parameter>
        </Parameters>
        <ThrownExceptions>
          <Exception TypeId="411" Path="axcQCUC62Q7YVHN5KRZY6KMNCRGKU"/>
          <Exception TypeId="411" Path="axcT6PDWQP2FRBGJJE4ZJYCMR2CDM"/>
        </ThrownExceptions>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>try (java.util.zip.ZipOutputStream zos = new java.util.zip.ZipOutputStream(zipBaseOutputStream)) {
    for (java.io.File file : dir.listFiles()) {
        if (!file.isDirectory()) {
            try (java.io.FileInputStream fis = new java.io.FileInputStream(file)) {
                java.util.zip.ZipEntry entry = new java.util.zip.ZipEntry(file.getName());
                zos.putNextEntry(entry);
                org.radixware.kernel.common.utils.FileUtils.copyStream(fis, zos);
                zos.closeEntry();
            }
        }
    }
}</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthYQQ5JQPGYJDALFPJCNFSU3SW5M" Name="getFormatForString" Nature="0" IsOverride="false" isDescriptionInherited="false">
        <AccessRules Access="2" IsPublished="false" IsStatic="true"/>
        <Parameters>
          <Parameter Name="exportFormatString" Id="mprLKUOQERIXZBQVNSCTZONVFHWVM">
            <Type TypeId="21"/>
          </Parameter>
        </Parameters>
        <ReturnType TypeId="21" Path="acs4NSZFZYJC5AHVA3VWFI5QA3ECE"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>for (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21" Path="acs4NSZFZYJC5AHVA3VWFI5QA3ECE">
                <xsc:Presentation>ReportExportFormat</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> format : </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21" Path="acs4NSZFZYJC5AHVA3VWFI5QA3ECE">
                <xsc:Presentation>ReportExportFormat</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.values()) {
    if (format.getName().equals(exportFormatString)) {
        return format;                
    }
    
    if (format == </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="acs4NSZFZYJC5AHVA3VWFI5QA3ECE aciIL3YBS33E5GHDLWOROHNBPAC5M" Invoke="true">
                <xsc:Presentation>ReportExportFormat:XLS</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> &amp;&amp; exportFormatString.equals("XLS")) {
        return format;
    }
}

return </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="acs4NSZFZYJC5AHVA3VWFI5QA3ECE aciL63KG5SUZRCGBAIMS6WUX5IHAY" Invoke="true">
                <xsc:Presentation>ReportExportFormat:PDF</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>;</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
    </Methods>
    <InnerClasses>
      <Clazz Id="adcIMU5HSNUZBHUHNQYB7ISMWHQ2M" Name="ReportPreviewClassLoader" Type="3" Environment="server">
        <AccessRules Access="2" IsPublished="false" IsStatic="true">
          <Transparence Extendable="false"/>
        </AccessRules>
        <Headers>
          <Src Name="HeaderadcIMU5HSNUZBHUHNQYB7ISMWHQ2M"/>
        </Headers>
        <Bodies>
          <Src Name="BodyadcIMU5HSNUZBHUHNQYB7ISMWHQ2M"/>
        </Bodies>
        <MethodGroup Id="cmgJGVFDQQW5JDQLBHJSUX2RPLPTA" Name="Root">
          <Group Id="cmgU3HFVXRUEFEHLPVTE7BJBLTKIU" Name="Methods" Members="mthV7CXA75LCRA3FCBFOOHRYPNOPE mthF4OQYIOGO5HC3GFJ3TFMUHVTYU mthVQN47T3WCFAHZGAAF5I3ACO3AE"/>
        </MethodGroup>
        <PropertyGroup Id="cpg5EBHKZYIPJEKDM27HEG7B3QMSI" Name="Root">
          <Group Id="cpgCECGB35EMBD35NJFJCTUF56FNE" Name="Properties" Members="prdYTEHOONB2FHPBD4R6LQHRQYZXA"/>
        </PropertyGroup>
        <Properties>
          <Property Id="prdYTEHOONB2FHPBD4R6LQHRQYZXA" Name="reportJar" Nature="2" IsConst="false" IsOverride="false" isDescriptionInherited="false">
            <AccessRules Access="2" IsFinal="true" IsPublished="false"/>
            <Type TypeId="400" extStr="java.io.File"/>
          </Property>
        </Properties>
        <Methods>
          <Method Id="mthV7CXA75LCRA3FCBFOOHRYPNOPE" Name="findClass" Nature="0" IsOverride="true" isDescriptionInherited="true">
            <AccessRules Access="1"/>
            <Parameters>
              <Parameter Name="name" Id="mpr6RTOEVHVAFB7ZPU4FXXJLOHB6A">
                <Type TypeId="21"/>
              </Parameter>
            </Parameters>
            <ReturnType TypeId="400" extStr="java.lang.Class">
              <xsc:GenericArguments>
                <xsc:Argument Alias="?"/>
              </xsc:GenericArguments>
            </ReturnType>
            <ThrownExceptions>
              <Exception TypeId="400" extStr="java.lang.ClassNotFoundException"/>
            </ThrownExceptions>
            <Sources>
              <Src>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="21">
                    <xsc:Presentation>Str</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java> classFileName = name.replace(".", "/") + ".class";
org.radixware.kernel.common.repository.fs.JarFileDataProvider provider = org.radixware.kernel.common.repository.fs.JarFileDataProvider.getInstance(</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="adcJHEA3ICKKVALVDGIC6OUI34B2U adcIMU5HSNUZBHUHNQYB7ISMWHQ2M prdYTEHOONB2FHPBD4R6LQHRQYZXA" Invoke="true">
                    <xsc:Presentation>reportJar</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>);

if (provider.entryExists(classFileName)) {
    try {
        byte[] bytes = provider.getEntryData(classFileName);
        return defineClass(name, bytes, 0, bytes.length);
    } catch (</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="411" Path="axcT6PDWQP2FRBGJJE4ZJYCMR2CDM">
                    <xsc:Presentation>Exceptions::IOException</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java> e) {
        </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="411" Path="pdcTrace_____________________">
                    <xsc:Presentation>Arte::Trace</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>.</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="pdcTrace_____________________ mthP66N3O2SRPNRDCISABIFNQAABA" Invoke="true">
                    <xsc:Presentation>warning</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>(</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="411" Path="pdcTrace_____________________">
                    <xsc:Presentation>Arte::Trace</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>.</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="pdcTrace_____________________ mthI2EAXRIFRTNRDCISABIFNQAABA" Invoke="true">
                    <xsc:Presentation>exceptionStackToString</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>(e), </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="acsTNLJBZADHTNRDIPGABQAQNO6EY aciA5UFXOQYZVGD3HR3MME5ZDOC5U" Invoke="true">
                    <xsc:Presentation>Arte::EventSource:ArteReports</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>);
    }
}

return null;</xsc:Java>
                </xsc:Item>
              </Src>
            </Sources>
          </Method>
          <Method Id="mthF4OQYIOGO5HC3GFJ3TFMUHVTYU" Name="loadClass" Nature="0" IsOverride="true" isDescriptionInherited="true">
            <AccessRules Access="1"/>
            <Parameters>
              <Parameter Name="name" Id="mprUPIVBFTTTBCFVDX5WRHBJJBSZU">
                <Type TypeId="21"/>
              </Parameter>
              <Parameter Name="resolve" Id="mpr5AC6UBMCEJDJZJJIAF3PLCKIEY">
                <Type TypeId="401" extStr="boolean"/>
              </Parameter>
            </Parameters>
            <ReturnType TypeId="400" extStr="java.lang.Class">
              <xsc:GenericArguments>
                <xsc:Argument Alias="?"/>
              </xsc:GenericArguments>
            </ReturnType>
            <ThrownExceptions>
              <Exception TypeId="400" extStr="java.lang.ClassNotFoundException"/>
            </ThrownExceptions>
            <Sources>
              <Src>
                <xsc:Item>
                  <xsc:Java>Class c = findLoadedClass(name);
if (c == null) {
    c = </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="adcJHEA3ICKKVALVDGIC6OUI34B2U adcIMU5HSNUZBHUHNQYB7ISMWHQ2M mthV7CXA75LCRA3FCBFOOHRYPNOPE" Invoke="true">
                    <xsc:Presentation>findClass</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>(name);
    
    if (c == null) {
        c = getParent().</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="adc24UFWM6B2VDGRCDSIN2BKCHP3Y mthF4OQYIOGO5HC3GFJ3TFMUHVTYU" Invoke="true">
                    <xsc:Presentation>loadClass</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>(name);
    }
}

if (resolve) {
    resolveClass(c);
}

return c;</xsc:Java>
                </xsc:Item>
              </Src>
            </Sources>
          </Method>
          <Method Id="mthVQN47T3WCFAHZGAAF5I3ACO3AE" Name="ReportPreviewClassLoader" Nature="0" IsConstructor="true" IsOverride="false" isDescriptionInherited="false">
            <AccessRules IsPublished="false"/>
            <Parameters>
              <Parameter Name="reportJar" Id="mprP4IA3P7RRBBSRJW2KTHNRSN2KE">
                <Type TypeId="400" extStr="java.io.File"/>
              </Parameter>
            </Parameters>
            <Sources>
              <Src>
                <xsc:Item>
                  <xsc:Java>super(</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="411" Path="adcJHEA3ICKKVALVDGIC6OUI34B2U adcIMU5HSNUZBHUHNQYB7ISMWHQ2M">
                    <xsc:Presentation>ReportPreviewClassLoader</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>.class.getClassLoader());
</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="adcJHEA3ICKKVALVDGIC6OUI34B2U adcIMU5HSNUZBHUHNQYB7ISMWHQ2M prdYTEHOONB2FHPBD4R6LQHRQYZXA" Invoke="true">
                    <xsc:Presentation>reportJar</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java> = reportJar;</xsc:Java>
                </xsc:Item>
              </Src>
            </Sources>
          </Method>
        </Methods>
        <Extends TypeId="411" Path="adc24UFWM6B2VDGRCDSIN2BKCHP3Y"/>
      </Clazz>
      <Clazz Id="adcJDVKLI72FFFBVB6B3Z23NZMQ6Y" Name="ReportPreviewEnvironment" Type="3" Environment="server">
        <AccessRules Access="2" IsPublished="false" IsStatic="true">
          <Transparence Extendable="false"/>
        </AccessRules>
        <Headers>
          <Src Name="HeaderadcJDVKLI72FFFBVB6B3Z23NZMQ6Y"/>
        </Headers>
        <Bodies>
          <Src Name="BodyadcJDVKLI72FFFBVB6B3Z23NZMQ6Y">
            <xsc:Item>
              <xsc:Java>private java.io.File tmpDir;
private java.io.File reportJarFile;
private final java.util.Map&lt;</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="adcELH54EKVCJAATNTLFHHCSVHPZU">
                <xsc:Presentation>Types::Id</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>, </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="2">
                <xsc:Presentation>Int</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>> executionNumbers = new java.util.HashMap&lt;</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="adcELH54EKVCJAATNTLFHHCSVHPZU">
                <xsc:Presentation>Types::Id</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>, </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="2">
                <xsc:Presentation>Int</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>>();</xsc:Java>
            </xsc:Item>
          </Src>
        </Bodies>
        <MethodGroup Id="cmgH6EEGZ2PFZDW7FUHSGIYAJLMEE" Name="Root">
          <Group Id="cmgXMYR3NT5NBFKHM3BLXS7MIYCRM" Name="Methods" Members="mthUSMGZVXNEZDOXPQX2HB4FIF4DQ mthBGWE5ME3QRHB7LGCNPOJMRE454 mthQYCKE5W545BS3LYITE5TL5I3C4 mthS4VUDT6WPZEIVOJEROU4JSP7RQ mth2AQXB6RZA5DELDV3HLDHG7QFLY mthY72W5O5I35BXNC4BSG7YUE7GSE mthBQJAPDFZIFGVLOPQRSNCEEWDUI mthTTOFCMI5BBF2LDZOP6C2AHCC2Y mthFHLWOPXQJ5CH3EWYDYRS3XY7MA mthUGCVZMS5LFHNHIBISMH4VGQDNU"/>
        </MethodGroup>
        <PropertyGroup Id="cpgG5A6CHQVQBG3XHPQXYVDHGX7DQ" Name="Root">
          <Group Id="cpg5JXKHINZCFDFJE5LSTCWQ7TNOM" Name="Constants" Members="prdXUXSGY2IEVAXXMI7W6Y7ACWSUE prdQCOAPMPKPNCRDI4OFCX7O3DOIM"/>
        </PropertyGroup>
        <Properties>
          <Property Id="prdXUXSGY2IEVAXXMI7W6Y7ACWSUE" Name="TMP_DIR_NAME" Nature="2" IsConst="true" IsOverride="false" isDescriptionInherited="false">
            <AccessRules Access="2" IsFinal="true" IsPublished="false"/>
            <Type TypeId="21"/>
            <InitialValue>
              <ValAsStr>REPORT_PREVIEW_DATA</ValAsStr>
            </InitialValue>
          </Property>
          <Property Id="prdQCOAPMPKPNCRDI4OFCX7O3DOIM" Name="REPORT_JAR_NAME" Nature="2" IsConst="true" IsOverride="false" isDescriptionInherited="false">
            <AccessRules Access="2" IsFinal="true" IsPublished="false"/>
            <Type TypeId="21"/>
            <InitialValue>
              <ValAsStr>report.jar</ValAsStr>
            </InitialValue>
          </Property>
        </Properties>
        <Methods>
          <Method Id="mthBGWE5ME3QRHB7LGCNPOJMRE454" Name="findReportClassById" Nature="0" IsOverride="true" isDescriptionInherited="true">
            <AccessRules/>
            <Parameters>
              <Parameter Name="reportId" Id="mprT7EFFJPOGRD3LA6XIHKXPZ26U4">
                <Type TypeId="400" extStr="org.radixware.kernel.common.types.Id"/>
              </Parameter>
            </Parameters>
            <ReturnType TypeId="400" extStr="java.lang.Class">
              <xsc:GenericArguments>
                <xsc:Argument Alias="?"/>
              </xsc:GenericArguments>
            </ReturnType>
            <Sources>
              <Src>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="21">
                    <xsc:Presentation>Str</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java> reportClassFileName = reportId.</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="adcELH54EKVCJAATNTLFHHCSVHPZU mthCX6FRHR4VNG37LJWH7N6THCMMA" Invoke="true">
                    <xsc:Presentation>toString</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>() + ".class";

org.radixware.kernel.common.repository.fs.JarFileDataProvider provider = org.radixware.kernel.common.repository.fs.JarFileDataProvider.getInstance(reportJarFile);
for (org.radixware.kernel.common.repository.fs.JarFileDataProvider.IJarEntry entry : provider.entries()) {
    if (entry.getName().endsWith(reportClassFileName)) {
        </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="21">
                    <xsc:Presentation>Str</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java> reportClassName = entry.getName().substring(0, entry.getName().lastIndexOf(".class")).replace("/", ".");
        </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="411" Path="adcJHEA3ICKKVALVDGIC6OUI34B2U">
                    <xsc:Presentation>ReportPreview</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>.</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="411" Path="adcJHEA3ICKKVALVDGIC6OUI34B2U adcIMU5HSNUZBHUHNQYB7ISMWHQ2M">
                    <xsc:Presentation>ReportPreviewClassLoader</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java> loader = new </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="411" Path="adcJHEA3ICKKVALVDGIC6OUI34B2U">
                    <xsc:Presentation>ReportPreview</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>.</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="411" Path="adcJHEA3ICKKVALVDGIC6OUI34B2U adcIMU5HSNUZBHUHNQYB7ISMWHQ2M">
                    <xsc:Presentation>ReportPreviewClassLoader</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>(reportJarFile);        
        try {
            return loader.</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="adcJHEA3ICKKVALVDGIC6OUI34B2U adcIMU5HSNUZBHUHNQYB7ISMWHQ2M mthF4OQYIOGO5HC3GFJ3TFMUHVTYU" Invoke="true">
                    <xsc:Presentation>loadClass</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>(reportClassName, true);
        } catch (</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="411" Path="axcGC2AUW56ZNDNJLQFIP4I5NQLPM">
                    <xsc:Presentation>Exceptions::ClassNotFoundException</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java> e) {
            throw new </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="axcUKJZUDCC3NGXJMLCNT7H2KELIY mthQHUOMHDMXJEY7KFTIG64PE3RGU" Invoke="true">
                    <xsc:Presentation>DefinitionNotFoundError</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>(reportId, e);
        }
    }
}

throw new </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="axcUKJZUDCC3NGXJMLCNT7H2KELIY mthEXJCQTGPIFFMPHED2AJFJWV66E" Invoke="true">
                    <xsc:Presentation>DefinitionNotFoundError</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>(reportId);</xsc:Java>
                </xsc:Item>
              </Src>
            </Sources>
          </Method>
          <Method Id="mthQYCKE5W545BS3LYITE5TL5I3C4" Name="getTestResultSet" Nature="0" IsOverride="true" isDescriptionInherited="true">
            <AccessRules/>
            <Parameters>
              <Parameter Name="reportInstance" Id="mprX7CXOGTOOVHSRPTF5WHLL7LQW4">
                <Type TypeId="400" extStr="org.radixware.kernel.server.types.Report"/>
              </Parameter>
            </Parameters>
            <ReturnType TypeId="400" extStr="java.sql.ResultSet"/>
            <Sources>
              <Src>
                <xsc:Item>
                  <xsc:Java>java.util.Map&lt;</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="2">
                    <xsc:Presentation>Int</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>, </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="21">
                    <xsc:Presentation>Str</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>> fieldIndex2ColName = new java.util.HashMap&lt;</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="2">
                    <xsc:Presentation>Int</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>, </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="21">
                    <xsc:Presentation>Str</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>>();
for (java.lang.reflect.Field field : reportInstance.getClass().getDeclaredFields()) {
    if (java.util.regex.Pattern.matches("\\$field_prf.*_index", field.getName())) {
        try {                        
            </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="21">
                    <xsc:Presentation>Str</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java> fieldName = field.getName();
            </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="21">
                    <xsc:Presentation>Str</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java> strFieldId = field.getName().substring(fieldName.indexOf("_") + 1, fieldName.lastIndexOf("_"));
            </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="21">
                    <xsc:Presentation>Str</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java> columnName = reportInstance.getRadMeta().</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="adcB72UJA5VUBF67BJLQSMCSA6L7Y mthQD3WYMEL65FVHKRXSKTN3P2FRE" Invoke="true">
                    <xsc:Presentation>getPropById</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>(</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="411" Path="adcKDF543XQWZEI5DORWHNFIYCZ2A">
                    <xsc:Presentation>Types::Id.Factory</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>.</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="adcKDF543XQWZEI5DORWHNFIYCZ2A mthZCNI2JK4DFGNLEBCLZZCIM34TA" Invoke="true">
                    <xsc:Presentation>loadFrom</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>(strFieldId)).getName();                        
            
            field.setAccessible(true);                                    
            fieldIndex2ColName.put(field.getInt(reportInstance), columnName);
            field.setAccessible(false);
        } catch (java.lang.IllegalAccessException e) {
            </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="411" Path="pdcTrace_____________________">
                    <xsc:Presentation>Arte::Trace</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>.</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="pdcTrace_____________________ mthP66N3O2SRPNRDCISABIFNQAABA" Invoke="true">
                    <xsc:Presentation>warning</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>(</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="411" Path="pdcTrace_____________________">
                    <xsc:Presentation>Arte::Trace</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>.</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="pdcTrace_____________________ mthI2EAXRIFRTNRDCISABIFNQAABA" Invoke="true">
                    <xsc:Presentation>exceptionStackToString</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>(e), </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="acsTNLJBZADHTNRDIPGABQAQNO6EY aciA5UFXOQYZVGD3HR3MME5ZDOC5U" Invoke="true">
                    <xsc:Presentation>Arte::EventSource:ArteReports</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>);
        }
    }
}

java.util.List&lt;</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="2">
                    <xsc:Presentation>Int</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>> sortedKeys = new java.util.ArrayList&lt;</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="2">
                    <xsc:Presentation>Int</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>>(fieldIndex2ColName.keySet());
java.util.Collections.sort(sortedKeys);

</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="21">
                    <xsc:Presentation>Str</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>[] columnNames = new </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="21">
                    <xsc:Presentation>Str</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>[fieldIndex2ColName.size()];
for (int i = 0; i &lt; columnNames.length; i++) {
    columnNames[i] = fieldIndex2ColName.get(sortedKeys.get(i));
} 

try {
   java.io.FileInputStream reportPreviewDataStream = new java.io.FileInputStream(</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="adcJHEA3ICKKVALVDGIC6OUI34B2U adcJDVKLI72FFFBVB6B3Z23NZMQ6Y mth2AQXB6RZA5DELDV3HLDHG7QFLY" Invoke="true">
                    <xsc:Presentation>getReportPreviewDataFile</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>(reportInstance.getId()));   
   
   java.util.Map&lt;org.radixware.kernel.common.utils.ResultSetOptions, Object> options = new java.util.HashMap&lt;org.radixware.kernel.common.utils.ResultSetOptions, Object>();
   options.put(org.radixware.kernel.common.utils.ResultSetOptions.RSO_COLUMN_NAMES, columnNames);
   options.put(org.radixware.kernel.common.utils.ResultSetOptions.RSO_USE_FIRST_ROW_AS_COLUMN_NAMES, true);
   options.put(org.radixware.kernel.common.utils.ResultSetOptions.RSO_LOB_PROVIDER, new </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="adcJHEA3ICKKVALVDGIC6OUI34B2U adcVEYIJHMLKREPBI7ORLEYMV3TVE mthJ2WAQNTJJRE5RCAGQOPZHBRYWI" Invoke="true">
                    <xsc:Presentation>ReportPreviewLobProvider</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>(tmpDir.getAbsolutePath()));
   
   return org.radixware.kernel.common.utils.ResultSetFactory.buildScrollableResultSet(org.radixware.kernel.common.utils.ResultSetContentType.XLSX, reportPreviewDataStream, options);
} catch (</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="411" Path="axcQCUC62Q7YVHN5KRZY6KMNCRGKU">
                    <xsc:Presentation>Exceptions::FileNotFoundException</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java> | </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="411" Path="axcG6PZC4JQPBAI5C7ZFKWL4SWGKA">
                    <xsc:Presentation>Exceptions::SQLException</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java> e) {
    </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="411" Path="pdcTrace_____________________">
                    <xsc:Presentation>Arte::Trace</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>.</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="pdcTrace_____________________ mthP66N3O2SRPNRDCISABIFNQAABA" Invoke="true">
                    <xsc:Presentation>warning</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>(</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="411" Path="pdcTrace_____________________">
                    <xsc:Presentation>Arte::Trace</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>.</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="pdcTrace_____________________ mthI2EAXRIFRTNRDCISABIFNQAABA" Invoke="true">
                    <xsc:Presentation>exceptionStackToString</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>(e), </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="acsTNLJBZADHTNRDIPGABQAQNO6EY aciA5UFXOQYZVGD3HR3MME5ZDOC5U" Invoke="true">
                    <xsc:Presentation>Arte::EventSource:ArteReports</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>);
    throw new </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="axcXJP5J6GEPZCERMRA74CCVXC3HI mthHOYU36JZCFA5XBIMXRF7UQTUSI" Invoke="true">
                    <xsc:Presentation>RuntimeException</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>("Can't get test result set for report '" + </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="adcJHEA3ICKKVALVDGIC6OUI34B2U adcJDVKLI72FFFBVB6B3Z23NZMQ6Y mthTTOFCMI5BBF2LDZOP6C2AHCC2Y" Invoke="true">
                    <xsc:Presentation>getReportPreviewDataFileName</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>(reportInstance.getId()) + "'", e);    
}</xsc:Java>
                </xsc:Item>
              </Src>
            </Sources>
          </Method>
          <Method Id="mthUSMGZVXNEZDOXPQX2HB4FIF4DQ" Name="close" Nature="0" IsOverride="true" isDescriptionInherited="true">
            <AccessRules/>
            <Sources>
              <Src>
                <xsc:Item>
                  <xsc:Java>if (!org.radixware.kernel.common.utils.FileUtils.deleteDirectory(tmpDir)) {
    </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="411" Path="pdcTrace_____________________">
                    <xsc:Presentation>Arte::Trace</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>.</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="pdcTrace_____________________ mthP66N3O2SRPNRDCISABIFNQAABA" Invoke="true">
                    <xsc:Presentation>warning</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>("Unable to delete report preview temporary directory \"" + tmpDir.getAbsoluteFile() + "\"", </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="acsTNLJBZADHTNRDIPGABQAQNO6EY aciA5UFXOQYZVGD3HR3MME5ZDOC5U" Invoke="true">
                    <xsc:Presentation>Arte::EventSource:ArteReports</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>);
}</xsc:Java>
                </xsc:Item>
              </Src>
            </Sources>
          </Method>
          <Method Id="mthS4VUDT6WPZEIVOJEROU4JSP7RQ" Name="ReportPreviewEnvironment" Nature="0" IsConstructor="true" IsOverride="false" isDescriptionInherited="false">
            <AccessRules IsPublished="false"/>
            <Parameters>
              <Parameter Name="reportJar" Id="mprKJNZ4VGEEZFK7P3CYRGWWO7H6E">
                <Type TypeId="22"/>
              </Parameter>
              <Parameter Name="testDataZip" Id="mprWWW2GH42NNHPJK5OP3QWNPRLEM">
                <Type TypeId="22"/>
              </Parameter>
            </Parameters>
            <Sources>
              <Src>
                <xsc:Item>
                  <xsc:Java>try {
    tmpDir = java.io.File.createTempFile(</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="adcJHEA3ICKKVALVDGIC6OUI34B2U adcJDVKLI72FFFBVB6B3Z23NZMQ6Y prdXUXSGY2IEVAXXMI7W6Y7ACWSUE" Invoke="true">
                    <xsc:Presentation>TMP_DIR_NAME</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>, "");
    if (tmpDir.exists()) {
        org.radixware.kernel.common.utils.FileUtils.deleteDirectory(tmpDir);
    }
    tmpDir.mkdir();

//  Unzip reportJar
    reportJarFile = new java.io.File(tmpDir, </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="adcJHEA3ICKKVALVDGIC6OUI34B2U adcJDVKLI72FFFBVB6B3Z23NZMQ6Y prdQCOAPMPKPNCRDI4OFCX7O3DOIM" Invoke="true">
                    <xsc:Presentation>REPORT_JAR_NAME</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>);
    if (!reportJarFile.exists()) {
        reportJarFile.createNewFile();
    }

    java.io.ByteArrayInputStream bais = new java.io.ByteArrayInputStream(reportJar.get());
    java.io.FileOutputStream reportJarFos = new java.io.FileOutputStream(reportJarFile);
    try (java.util.zip.ZipInputStream zis = new java.util.zip.ZipInputStream(bais)) {
        java.util.zip.ZipEntry entry = zis.getNextEntry();
        if (entry != null) {
            org.radixware.kernel.common.utils.FileUtils.copyStream(zis, reportJarFos);
        }
    } finally {
        reportJarFos.close();
    }
    
//  Unzip testData 
    bais = new java.io.ByteArrayInputStream(testDataZip.get());
    try (java.util.zip.ZipInputStream zis = new java.util.zip.ZipInputStream(bais)) {
        java.util.zip.ZipEntry entry = zis.getNextEntry();

        while (entry != null) {
            java.io.File tmpFile = new java.io.File(tmpDir, entry.getName());
            if (!tmpFile.exists()) {
                tmpFile.createNewFile();
            }

            try (java.io.FileOutputStream fos = new java.io.FileOutputStream(tmpFile)) {
                org.radixware.kernel.common.utils.FileUtils.copyStream(zis, fos);
            }
            entry = zis.getNextEntry();
        }
    }
} catch (</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="411" Path="axcT6PDWQP2FRBGJJE4ZJYCMR2CDM">
                    <xsc:Presentation>Exceptions::IOException</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java> e) {
    </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="411" Path="pdcTrace_____________________">
                    <xsc:Presentation>Arte::Trace</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>.</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="pdcTrace_____________________ mthP66N3O2SRPNRDCISABIFNQAABA" Invoke="true">
                    <xsc:Presentation>warning</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>(</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="411" Path="pdcTrace_____________________">
                    <xsc:Presentation>Arte::Trace</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>.</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="pdcTrace_____________________ mthI2EAXRIFRTNRDCISABIFNQAABA" Invoke="true">
                    <xsc:Presentation>exceptionStackToString</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>(e), </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="acsTNLJBZADHTNRDIPGABQAQNO6EY aciA5UFXOQYZVGD3HR3MME5ZDOC5U" Invoke="true">
                    <xsc:Presentation>Arte::EventSource:ArteReports</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>);
}</xsc:Java>
                </xsc:Item>
              </Src>
            </Sources>
          </Method>
          <Method Id="mth2AQXB6RZA5DELDV3HLDHG7QFLY" Name="getReportPreviewDataFile" Nature="0" IsOverride="false" isDescriptionInherited="false">
            <AccessRules Access="2" IsFinal="true" IsPublished="false"/>
            <Parameters>
              <Parameter Name="reportId" Id="mprKOVRKDMNWZE5NJWOCMUFSYLO2Q">
                <Type TypeId="411" Path="adcELH54EKVCJAATNTLFHHCSVHPZU"/>
              </Parameter>
            </Parameters>
            <ReturnType TypeId="400" extStr="java.io.File"/>
            <ThrownExceptions>
              <Exception TypeId="411" Path="axcQCUC62Q7YVHN5KRZY6KMNCRGKU"/>
            </ThrownExceptions>
            <Sources>
              <Src>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="21">
                    <xsc:Presentation>Str</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java> reportPreviewDataFileName = </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="adcJHEA3ICKKVALVDGIC6OUI34B2U adcJDVKLI72FFFBVB6B3Z23NZMQ6Y mthTTOFCMI5BBF2LDZOP6C2AHCC2Y" Invoke="true">
                    <xsc:Presentation>getReportPreviewDataFileName</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>(reportId) + ".xlsx";
java.io.File result = new java.io.File(tmpDir, reportPreviewDataFileName);

if (!result.exists()) {
    result = new java.io.File(tmpDir, reportId.</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="adcELH54EKVCJAATNTLFHHCSVHPZU mthCX6FRHR4VNG37LJWH7N6THCMMA" Invoke="true">
                    <xsc:Presentation>toString</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>() + ".xlsx");
    if (!result.exists()) {
        throw new </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="axcQCUC62Q7YVHN5KRZY6KMNCRGKU mthUP7IHWC7AZGOFD57YCI33SGCTE" Invoke="true">
                    <xsc:Presentation>FileNotFoundException</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>("Preview data for report '" + reportPreviewDataFileName + "' not found.");
    }
}

return result;

</xsc:Java>
                </xsc:Item>
              </Src>
            </Sources>
          </Method>
          <Method Id="mthY72W5O5I35BXNC4BSG7YUE7GSE" Name="getReportParameters" Nature="0" IsOverride="false" isDescriptionInherited="false">
            <AccessRules IsPublished="false"/>
            <Parameters>
              <Parameter Name="report" Id="mprIP3K6GMTCVDGTP76MS66RM2FBU">
                <Type TypeId="411" Path="pdcReport____________________"/>
              </Parameter>
            </Parameters>
            <ReturnType TypeId="400" extStr="java.util.Map">
              <xsc:GenericArguments>
                <xsc:Argument Alias="?">
                  <xsc:Type TypeId="411" Path="adcELH54EKVCJAATNTLFHHCSVHPZU"/>
                </xsc:Argument>
                <xsc:Argument Alias="?">
                  <xsc:Type TypeId="400" extStr="java.lang.Object"/>
                </xsc:Argument>
              </xsc:GenericArguments>
            </ReturnType>
            <ThrownExceptions>
              <Exception TypeId="411" Path="axcQCUC62Q7YVHN5KRZY6KMNCRGKU"/>
            </ThrownExceptions>
            <Sources>
              <Src>
                <xsc:Item>
                  <xsc:Java>try {
    java.io.File paramsFile = </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="adcJHEA3ICKKVALVDGIC6OUI34B2U adcJDVKLI72FFFBVB6B3Z23NZMQ6Y mthBQJAPDFZIFGVLOPQRSNCEEWDUI" Invoke="true">
                    <xsc:Presentation>getReportParametersFile</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>(report.getId());    
    </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="451" Path="xsdPYPQ5263TRFAVOUN4WRU4ZOPQ4" extStr="ParametersBindingDocument">
                    <xsc:Presentation>ReportsXsd:ParametersBindingDocument</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java> xParamsBindingDoc = </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="451" Path="xsdPYPQ5263TRFAVOUN4WRU4ZOPQ4" extStr="ParametersBindingDocument.Factory">
                    <xsc:Presentation>ReportsXsd:ParametersBindingDocument.Factory</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>.parse(paramsFile);
    
    final java.util.Map&lt;</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="411" Path="adcELH54EKVCJAATNTLFHHCSVHPZU">
                    <xsc:Presentation>Types::Id</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>, Object> paramId2Value = new java.util.HashMap&lt;</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="411" Path="adcELH54EKVCJAATNTLFHHCSVHPZU">
                    <xsc:Presentation>Types::Id</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>, Object>();
    if (xParamsBindingDoc != null &amp;&amp; xParamsBindingDoc.ParametersBinding != null) {
        java.util.List&lt;</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="451" Path="xsdPYPQ5263TRFAVOUN4WRU4ZOPQ4" extStr="ParametersBindingType.ParameterBinding">
                    <xsc:Presentation>ReportsXsd:ParametersBindingType.ParameterBinding</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>> xParamBindings = xParamsBindingDoc.ParametersBinding.getParameterBindingList();
        if (xParamBindings != null) {
            for (</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="451" Path="xsdPYPQ5263TRFAVOUN4WRU4ZOPQ4" extStr="ParametersBindingType.ParameterBinding">
                    <xsc:Presentation>ReportsXsd:ParametersBindingType.ParameterBinding</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java> xParamBinding : xParamBindings) {
                final </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="411" Path="adcELH54EKVCJAATNTLFHHCSVHPZU">
                    <xsc:Presentation>Types::Id</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java> parameterId = xParamBinding.ParameterId;
                final Object paramValue;
                paramValue = </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="411" Path="adcD6JQG2D5NBDCZN3T6Q3OY5G56Q">
                    <xsc:Presentation>ReportsServerUtils</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>.</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="adcD6JQG2D5NBDCZN3T6Q3OY5G56Q mth4ATAR5KP3VDFTPER44OASZQKJI" Invoke="true">
                    <xsc:Presentation>loadParamFromXml</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>(report, parameterId, xParamBinding.Value);
                paramId2Value.put(parameterId, paramValue);
            }
        }
    }
    return paramId2Value;
} catch (</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="411" Path="axcT6PDWQP2FRBGJJE4ZJYCMR2CDM">
                    <xsc:Presentation>Exceptions::IOException</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java> | </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="411" Path="axcCOEVNNRGS5DITM72ZNKZFX6EIU">
                    <xsc:Presentation>Exceptions::XmlException</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java> e) {    
    throw new </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="axcQCUC62Q7YVHN5KRZY6KMNCRGKU mthUP7IHWC7AZGOFD57YCI33SGCTE" Invoke="true">
                    <xsc:Presentation>FileNotFoundException</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>("Can not get report parameters. Reason: " + </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="411" Path="pdcTrace_____________________">
                    <xsc:Presentation>Arte::Trace</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>.</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="pdcTrace_____________________ mthI2EAXRIFRTNRDCISABIFNQAABA" Invoke="true">
                    <xsc:Presentation>exceptionStackToString</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>(e));
}</xsc:Java>
                </xsc:Item>
              </Src>
            </Sources>
          </Method>
          <Method Id="mthBQJAPDFZIFGVLOPQRSNCEEWDUI" Name="getReportParametersFile" Nature="0" IsOverride="false" isDescriptionInherited="false">
            <AccessRules Access="2" IsFinal="true" IsPublished="false"/>
            <Parameters>
              <Parameter Name="reportId" Id="mprKOVRKDMNWZE5NJWOCMUFSYLO2Q">
                <Type TypeId="411" Path="adcELH54EKVCJAATNTLFHHCSVHPZU"/>
              </Parameter>
            </Parameters>
            <ReturnType TypeId="400" extStr="java.io.File"/>
            <ThrownExceptions>
              <Exception TypeId="411" Path="axcQCUC62Q7YVHN5KRZY6KMNCRGKU"/>
            </ThrownExceptions>
            <Sources>
              <Src>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="21">
                    <xsc:Presentation>Str</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java> reportPreviewDataFileName = </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="adcJHEA3ICKKVALVDGIC6OUI34B2U adcJDVKLI72FFFBVB6B3Z23NZMQ6Y mthTTOFCMI5BBF2LDZOP6C2AHCC2Y" Invoke="true">
                    <xsc:Presentation>getReportPreviewDataFileName</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>(reportId) + "_params.xml";
java.io.File result = new java.io.File(tmpDir, reportPreviewDataFileName);

if (!result.exists()) {
    result = new java.io.File(tmpDir, reportId.</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="adcELH54EKVCJAATNTLFHHCSVHPZU mthCX6FRHR4VNG37LJWH7N6THCMMA" Invoke="true">
                    <xsc:Presentation>toString</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>() + "_params.xml");
    if (!result.exists()) {
        throw new </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="axcQCUC62Q7YVHN5KRZY6KMNCRGKU mthUP7IHWC7AZGOFD57YCI33SGCTE" Invoke="true">
                    <xsc:Presentation>FileNotFoundException</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>("Parameters file for report '" + reportPreviewDataFileName + "' not found.");
    }
}

return result;

</xsc:Java>
                </xsc:Item>
              </Src>
            </Sources>
          </Method>
          <Method Id="mthTTOFCMI5BBF2LDZOP6C2AHCC2Y" Name="getReportPreviewDataFileName" Nature="0" IsOverride="false" isDescriptionInherited="false">
            <AccessRules Access="2" IsFinal="true" IsPublished="false"/>
            <Parameters>
              <Parameter Name="reportId" Id="mprDGZDAGWCSFANTCTQL62I5T7TAM">
                <Type TypeId="411" Path="adcELH54EKVCJAATNTLFHHCSVHPZU"/>
              </Parameter>
            </Parameters>
            <ReturnType TypeId="21"/>
            <Sources>
              <Src>
                <xsc:Item>
                  <xsc:Java>java.lang.Integer executionNumber;
if (executionNumbers.containsKey(reportId)) {
    executionNumber = executionNumbers.get(reportId).intValue() + 1;
} else {
    executionNumber = 0;
}
executionNumbers.put(reportId, executionNumber);

return reportId.</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="adcELH54EKVCJAATNTLFHHCSVHPZU mthCX6FRHR4VNG37LJWH7N6THCMMA" Invoke="true">
                    <xsc:Presentation>toString</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>() + "_" + executionNumber;</xsc:Java>
                </xsc:Item>
              </Src>
            </Sources>
          </Method>
          <Method Id="mthFHLWOPXQJ5CH3EWYDYRS3XY7MA" Name="getReportColumnsFile" Nature="0" IsOverride="false" isDescriptionInherited="false">
            <AccessRules Access="2" IsFinal="true" IsPublished="false"/>
            <Parameters>
              <Parameter Name="reportId" Id="mprKOVRKDMNWZE5NJWOCMUFSYLO2Q">
                <Type TypeId="411" Path="adcELH54EKVCJAATNTLFHHCSVHPZU"/>
              </Parameter>
            </Parameters>
            <ReturnType TypeId="400" extStr="java.io.File"/>
            <Sources>
              <Src>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="21">
                    <xsc:Presentation>Str</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java> reportPreviewDataFileName = </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="adcJHEA3ICKKVALVDGIC6OUI34B2U adcJDVKLI72FFFBVB6B3Z23NZMQ6Y mthTTOFCMI5BBF2LDZOP6C2AHCC2Y" Invoke="true">
                    <xsc:Presentation>getReportPreviewDataFileName</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>(reportId) + "_columns.xml";
java.io.File result = new java.io.File(tmpDir, reportPreviewDataFileName);

if (!result.exists()) {
    result = new java.io.File(tmpDir, reportId.</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="adcELH54EKVCJAATNTLFHHCSVHPZU mthCX6FRHR4VNG37LJWH7N6THCMMA" Invoke="true">
                    <xsc:Presentation>toString</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>() + "_columns.xml");
    if (!result.exists()) {
        return null;
    }
}

return result;

</xsc:Java>
                </xsc:Item>
              </Src>
            </Sources>
          </Method>
          <Method Id="mthUGCVZMS5LFHNHIBISMH4VGQDNU" Name="getReportColumnsSettings" Nature="0" IsOverride="false" isDescriptionInherited="false">
            <AccessRules IsPublished="false"/>
            <Parameters>
              <Parameter Name="report" Id="mprADJU7R4KXZDD7E2EM4C3TPYINQ">
                <Type TypeId="411" Path="pdcReport____________________"/>
              </Parameter>
            </Parameters>
            <ReturnType TypeId="451" Path="xsdPYPQ5263TRFAVOUN4WRU4ZOPQ4" extStr="ColumnSettings"/>
            <ThrownExceptions>
              <Exception TypeId="411" Path="axcQCUC62Q7YVHN5KRZY6KMNCRGKU"/>
            </ThrownExceptions>
            <Sources>
              <Src>
                <xsc:Item>
                  <xsc:Java>try {
    java.io.File columnsFile = </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="adcJHEA3ICKKVALVDGIC6OUI34B2U adcJDVKLI72FFFBVB6B3Z23NZMQ6Y mthFHLWOPXQJ5CH3EWYDYRS3XY7MA" Invoke="true">
                    <xsc:Presentation>getReportColumnsFile</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>(report.getId());
    if (columnsFile == null) {
        return null;
    }
    
    </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="451" Path="xsdPYPQ5263TRFAVOUN4WRU4ZOPQ4" extStr="ColumnSettingsDocument">
                    <xsc:Presentation>ReportsXsd:ColumnSettingsDocument</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java> xColumnSettingsDocument = </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="451" Path="xsdPYPQ5263TRFAVOUN4WRU4ZOPQ4" extStr="ColumnSettingsDocument.Factory">
                    <xsc:Presentation>ReportsXsd:ColumnSettingsDocument.Factory</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>.parse(columnsFile);
    return xColumnSettingsDocument == null ? null : xColumnSettingsDocument.ColumnSettings;
} catch (</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="411" Path="axcT6PDWQP2FRBGJJE4ZJYCMR2CDM">
                    <xsc:Presentation>Exceptions::IOException</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java> | </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="411" Path="axcCOEVNNRGS5DITM72ZNKZFX6EIU">
                    <xsc:Presentation>Exceptions::XmlException</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java> e) {    
    throw new </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="axcQCUC62Q7YVHN5KRZY6KMNCRGKU mthUP7IHWC7AZGOFD57YCI33SGCTE" Invoke="true">
                    <xsc:Presentation>FileNotFoundException</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>("Can not parse report columns settings file. Reason: " + </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="411" Path="pdcTrace_____________________">
                    <xsc:Presentation>Arte::Trace</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>.</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="pdcTrace_____________________ mthI2EAXRIFRTNRDCISABIFNQAABA" Invoke="true">
                    <xsc:Presentation>exceptionStackToString</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>(e));
}</xsc:Java>
                </xsc:Item>
              </Src>
            </Sources>
          </Method>
        </Methods>
        <Implements>
          <Interface TypeId="411" Path="aicUJUGYU6NTZAWZFMLO4X44NW4KY"/>
        </Implements>
      </Clazz>
      <Clazz Id="adcJCQNMJQR3JGTVGF5EAYMZPORWU" Name="ReportPreviewFileController" Type="3" Environment="server">
        <AccessRules Access="2" IsPublished="false" IsStatic="true">
          <Transparence Extendable="false"/>
        </AccessRules>
        <Headers>
          <Src Name="HeaderadcJCQNMJQR3JGTVGF5EAYMZPORWU"/>
        </Headers>
        <Bodies>
          <Src Name="BodyadcJCQNMJQR3JGTVGF5EAYMZPORWU">
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21" Path="acs4NSZFZYJC5AHVA3VWFI5QA3ECE">
                <xsc:Presentation>ReportExportFormat</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> exportFormat;
java.io.File dir;
int fileNumber = 1;</xsc:Java>
            </xsc:Item>
          </Src>
        </Bodies>
        <MethodGroup Id="cmgDXXXOITHANHX5IN6W7XD7OVC4Q" Name="Root"/>
        <PropertyGroup Id="cpgD3HP355EBBD6RKC2RQJTHAXPNQ" Name="Root"/>
        <Properties/>
        <Methods>
          <Method Id="mthMMHPPAI5T5EFHOO5OTAQN4DSWI" Name="adjustFileName" Nature="0" IsOverride="true" isDescriptionInherited="true">
            <AccessRules/>
            <Parameters>
              <Parameter Name="report" Id="mprAJ2ZEDNI2BG5FCI5QGOQNAVITA">
                <Type TypeId="400" extStr="org.radixware.kernel.server.types.Report"/>
              </Parameter>
              <Parameter Name="fileName" Id="mprJX2A5J3255GRTK3LABRASXMHPI">
                <Type TypeId="21"/>
              </Parameter>
            </Parameters>
            <ReturnType TypeId="21"/>
            <ThrownExceptions>
              <Exception TypeId="411" Path="axc5VQBE2IIHJBXJMAHO52JXIWLDY"/>
            </ThrownExceptions>
            <Sources>
              <Src>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="21">
                    <xsc:Presentation>Str</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java> ext = exportFormat == </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="acs4NSZFZYJC5AHVA3VWFI5QA3ECE aciIL3YBS33E5GHDLWOROHNBPAC5M" Invoke="true">
                    <xsc:Presentation>ReportExportFormat:XLS</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java> ? ".xls" : "." + exportFormat.getExt();
</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="21">
                    <xsc:Presentation>Str</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java> fileNumber = !report.isMultyFile() ? "" : </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:TypeDeclaration TypeId="21">
                    <xsc:Presentation>Str</xsc:Presentation>
                  </xsc:TypeDeclaration>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>.valueOf(fileNumber++);

return report.getId().</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="adcELH54EKVCJAATNTLFHHCSVHPZU mthCX6FRHR4VNG37LJWH7N6THCMMA" Invoke="true">
                    <xsc:Presentation>toString</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>() + "_" + fileNumber + ext;</xsc:Java>
                </xsc:Item>
              </Src>
            </Sources>
          </Method>
          <Method Id="mthHCFFTVMPBFBMVJOMMDZMTW4LWU" Name="afterCloseFile" Nature="0" IsOverride="true" isDescriptionInherited="true">
            <AccessRules/>
            <Parameters>
              <Parameter Name="report" Id="mprA77LJSSNKFGUZGH43Y4R5ISQJA">
                <Type TypeId="400" extStr="org.radixware.kernel.server.types.Report"/>
              </Parameter>
              <Parameter Name="file" Id="mprEOPPLXXW5NESBG76PJPPP43YOI">
                <Type TypeId="400" extStr="java.io.File"/>
              </Parameter>
            </Parameters>
            <ThrownExceptions>
              <Exception TypeId="411" Path="axc5VQBE2IIHJBXJMAHO52JXIWLDY"/>
            </ThrownExceptions>
            <Sources>
              <Src/>
            </Sources>
          </Method>
          <Method Id="mthPQ6T4E3WPFELTDJAEYHOVJIXMU" Name="afterCreateFile" Nature="0" IsOverride="true" isDescriptionInherited="true">
            <AccessRules/>
            <Parameters>
              <Parameter Name="report" Id="mprJGTPRTPKYFEBJF7QYCMJE4SQZU">
                <Type TypeId="400" extStr="org.radixware.kernel.server.types.Report"/>
              </Parameter>
              <Parameter Name="file" Id="mprBTT2FSNIBJDNDHOXOH3SZC77II">
                <Type TypeId="400" extStr="java.io.File"/>
              </Parameter>
              <Parameter Name="outputStream" Id="mpr4SS43J6N3VD4VAYV3UT4B2KZV4">
                <Type TypeId="400" extStr="java.io.OutputStream"/>
              </Parameter>
            </Parameters>
            <ThrownExceptions>
              <Exception TypeId="411" Path="axc5VQBE2IIHJBXJMAHO52JXIWLDY"/>
            </ThrownExceptions>
            <Sources>
              <Src/>
            </Sources>
          </Method>
          <Method Id="mthEQWZZHVBAZGUTNKSUVXAIQ4ZPI" Name="beforeCloseFile" Nature="0" IsOverride="true" isDescriptionInherited="true">
            <AccessRules/>
            <Parameters>
              <Parameter Name="report" Id="mprWI4ZU7M7JRA55PT5V5LKY3OXKU">
                <Type TypeId="400" extStr="org.radixware.kernel.server.types.Report"/>
              </Parameter>
              <Parameter Name="file" Id="mprAQH6WEZ2DVFE7CZO7UP63IEJRQ">
                <Type TypeId="400" extStr="java.io.File"/>
              </Parameter>
              <Parameter Name="outputStream" Id="mprVM5ZXHNY6NCT7CEWIHY3UXC63U">
                <Type TypeId="400" extStr="java.io.OutputStream"/>
              </Parameter>
            </Parameters>
            <ThrownExceptions>
              <Exception TypeId="411" Path="axc5VQBE2IIHJBXJMAHO52JXIWLDY"/>
            </ThrownExceptions>
            <Sources>
              <Src/>
            </Sources>
          </Method>
          <Method Id="mthNMVOW6LIMVH3LA5FQV52TIFPOI" Name="getDirectory" Nature="0" IsOverride="true" isDescriptionInherited="true">
            <AccessRules/>
            <ReturnType TypeId="400" extStr="java.io.File"/>
            <ThrownExceptions>
              <Exception TypeId="411" Path="axc5VQBE2IIHJBXJMAHO52JXIWLDY"/>
            </ThrownExceptions>
            <Sources>
              <Src>
                <xsc:Item>
                  <xsc:Java>return dir;</xsc:Java>
                </xsc:Item>
              </Src>
            </Sources>
          </Method>
          <Method Id="mthBGZBRKEFYZG3DBTQVJ7CEXTEII" Name="ReportPreviewFileController" Nature="0" IsConstructor="true" IsOverride="false" isDescriptionInherited="false">
            <AccessRules IsPublished="false"/>
            <Parameters>
              <Parameter Name="exportFormat" Id="mprJRKAHAKJZRGJHJ4UDOVJIY7IJ4">
                <Type TypeId="21" Path="acs4NSZFZYJC5AHVA3VWFI5QA3ECE"/>
              </Parameter>
            </Parameters>
            <ThrownExceptions>
              <Exception TypeId="411" Path="axcT6PDWQP2FRBGJJE4ZJYCMR2CDM"/>
            </ThrownExceptions>
            <Sources>
              <Src>
                <xsc:Item>
                  <xsc:Java>this.exportFormat = exportFormat;
dir = java.nio.file.Files.createTempDirectory("ReportPreviewFileControllerTmp").toFile();</xsc:Java>
                </xsc:Item>
              </Src>
            </Sources>
          </Method>
          <Method Id="mth4CVL5JYCPNGW3PMSTDX72AO6JM" Name="deleteDirectory" Nature="0" IsOverride="false" isDescriptionInherited="false">
            <AccessRules IsPublished="false"/>
            <ThrownExceptions>
              <Exception TypeId="411" Path="axcT6PDWQP2FRBGJJE4ZJYCMR2CDM"/>
            </ThrownExceptions>
            <Sources>
              <Src>
                <xsc:Item>
                  <xsc:Java>org.apache.commons.io.FileUtils.deleteDirectory(dir);</xsc:Java>
                </xsc:Item>
              </Src>
            </Sources>
          </Method>
        </Methods>
        <Implements>
          <Interface TypeId="411" Path="aicJMKRUZ3AI5HQLJTVZYWCM6NVKM"/>
        </Implements>
      </Clazz>
      <Clazz Id="adcVEYIJHMLKREPBI7ORLEYMV3TVE" Name="ReportPreviewLobProvider" Type="3" Environment="server">
        <AccessRules IsPublished="false" IsStatic="true">
          <Transparence Extendable="false"/>
        </AccessRules>
        <Headers>
          <Src Name="HeaderadcVEYIJHMLKREPBI7ORLEYMV3TVE"/>
        </Headers>
        <Bodies>
          <Src Name="BodyadcVEYIJHMLKREPBI7ORLEYMV3TVE">
            <xsc:Item>
              <xsc:Java>private java.net.URL previewDataDirPath;</xsc:Java>
            </xsc:Item>
          </Src>
        </Bodies>
        <MethodGroup Id="cmg24UKRI5VTRDHHDBRPZJLDG5FDQ" Name="Root"/>
        <PropertyGroup Id="cpg74S4OJ3DFNGN7HO3DYYYAEO5JA" Name="Root"/>
        <Properties/>
        <Methods>
          <Method Id="mthWXNA6U7G5BBLZAUMKKZIQ3CHOQ" Name="canGetBlobContent" Nature="0" IsOverride="true" isDescriptionInherited="true">
            <AccessRules/>
            <Parameters>
              <Parameter Name="blobReference" Id="mprBJJG6EGXUVC7DC4Q77TYX62KII">
                <Type TypeId="21"/>
              </Parameter>
            </Parameters>
            <ReturnType TypeId="401" extStr="boolean"/>
            <Sources>
              <Src>
                <xsc:Item>
                  <xsc:Java>boolean defaultResult = org.radixware.kernel.common.utils.FakeResultSet.DEFAULT_LOB_PROVIDER.canGetBlobContent(blobReference);
if (defaultResult == false) {
    defaultResult = org.radixware.kernel.common.utils.FakeResultSet.DEFAULT_LOB_PROVIDER.canGetBlobContent(previewDataDirPath + "/" + blobReference);
}

return defaultResult;</xsc:Java>
                </xsc:Item>
              </Src>
            </Sources>
          </Method>
          <Method Id="mthVRAEMTHN5NEU7PPSPE5BZFI36U" Name="canGetClobContent" Nature="0" IsOverride="true" isDescriptionInherited="true">
            <AccessRules/>
            <Parameters>
              <Parameter Name="clobReference" Id="mprYG5YLSZADBCSZJR23YDG4Y5PNU">
                <Type TypeId="21"/>
              </Parameter>
            </Parameters>
            <ReturnType TypeId="401" extStr="boolean"/>
            <Sources>
              <Src>
                <xsc:Item>
                  <xsc:Java>return true;</xsc:Java>
                </xsc:Item>
              </Src>
            </Sources>
          </Method>
          <Method Id="mthLN3KD5DIR5HXVOBOCX3I5WGM3Y" Name="getBlobContent" Nature="0" IsOverride="true" isDescriptionInherited="true">
            <AccessRules/>
            <Parameters>
              <Parameter Name="blobReference" Id="mprIM3PAJFNUZBWVHMLVX6LPOD54M">
                <Type TypeId="21"/>
              </Parameter>
            </Parameters>
            <ReturnType TypeId="401" extStr="byte" Dimension="1"/>
            <ThrownExceptions>
              <Exception TypeId="400" extStr="java.sql.SQLException"/>
            </ThrownExceptions>
            <Sources>
              <Src>
                <xsc:Item>
                  <xsc:Java>boolean canGetBlob = org.radixware.kernel.common.utils.FakeResultSet.DEFAULT_LOB_PROVIDER.canGetBlobContent(blobReference);
if (!canGetBlob) {
    return org.radixware.kernel.common.utils.FakeResultSet.DEFAULT_LOB_PROVIDER.getBlobContent(previewDataDirPath + "/" + blobReference);
} else {
    return org.radixware.kernel.common.utils.FakeResultSet.DEFAULT_LOB_PROVIDER.getBlobContent(blobReference);
}</xsc:Java>
                </xsc:Item>
              </Src>
            </Sources>
          </Method>
          <Method Id="mthCDS72QE4T5G7RECEZYPN5OBE6Q" Name="getClobContent" Nature="0" IsOverride="true" isDescriptionInherited="true">
            <AccessRules/>
            <Parameters>
              <Parameter Name="clobReference" Id="mprBJ2PCJXIFVD3JB2RYCHRXM2IVI">
                <Type TypeId="21"/>
              </Parameter>
            </Parameters>
            <ReturnType TypeId="401" extStr="char" Dimension="1"/>
            <ThrownExceptions>
              <Exception TypeId="400" extStr="java.sql.SQLException"/>
            </ThrownExceptions>
            <Sources>
              <Src>
                <xsc:Item>
                  <xsc:Java>return clobReference == null ? null : clobReference.toCharArray();</xsc:Java>
                </xsc:Item>
              </Src>
            </Sources>
          </Method>
          <Method Id="mthJ2WAQNTJJRE5RCAGQOPZHBRYWI" Name="ReportPreviewLobProvider" Nature="0" IsConstructor="true" IsOverride="false" isDescriptionInherited="false">
            <AccessRules IsPublished="false"/>
            <Parameters>
              <Parameter Name="previewDataDirPath" Id="mprRW3O6UTQJNDUHCLNT4VFLFYZVI">
                <Type TypeId="21"/>
              </Parameter>
            </Parameters>
            <ThrownExceptions>
              <Exception TypeId="411" Path="axcQCUC62Q7YVHN5KRZY6KMNCRGKU"/>
            </ThrownExceptions>
            <Sources>
              <Src>
                <xsc:Item>
                  <xsc:Java>try {
    this.previewDataDirPath = new java.io.File(previewDataDirPath).toURI().toURL();
} catch (java.net.MalformedURLException ex) {
    throw new </xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="axcQCUC62Q7YVHN5KRZY6KMNCRGKU mthDBS6N5QXIZDCBIVZQAWRAEQ4PI" Invoke="true">
                    <xsc:Presentation>FileNotFoundException</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>(ex.</xsc:Java>
                </xsc:Item>
                <xsc:Item>
                  <xsc:IdReference Path="axc6XYNZ22YSZEKDKWH2SWRGBTC6I mthAIARN4PFVBD6HJZSJNZIXYNYAY" Invoke="true">
                    <xsc:Presentation>getMessage</xsc:Presentation>
                  </xsc:IdReference>
                </xsc:Item>
                <xsc:Item>
                  <xsc:Java>());
}</xsc:Java>
                </xsc:Item>
              </Src>
            </Sources>
          </Method>
        </Methods>
        <Implements>
          <Interface TypeId="411" Path="aicMS7MZLTMCJF5TMMSJSMMVIHU64"/>
        </Implements>
      </Clazz>
    </InnerClasses>
  </AdsClassDefinition>
</AdsDefinition>