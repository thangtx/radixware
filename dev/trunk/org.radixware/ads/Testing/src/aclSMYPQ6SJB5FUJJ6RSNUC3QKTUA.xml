<?xml version="1.0" encoding="UTF-8"?>
<AdsDefinition xmlns="http://schemas.radixware.org/adsdef.xsd" xmlns:xsc="http://schemas.radixware.org/xscml.xsd" FormatVersion="6">
  <AdsClassDefinition Id="aclSMYPQ6SJB5FUJJ6RSNUC3QKTUA" Name="TestCase.UserDefBin" Type="2" ClientEnvironment="explorer">
    <AccessRules/>
    <Headers>
      <Src Name="HeaderadcWPVK47VR6NGJ5OKX2SKS5Z7BEA">
        <xsc:Item>
          <xsc:Java>import java.io.*;
import java.util.*;
import org.radixware.kernel.common.utils.FileUtils;
import java.util.jar.*;</xsc:Java>
        </xsc:Item>
      </Src>
    </Headers>
    <Bodies>
      <Src Name="Bodyadc7W7F3RFKTJCYPMB7KTAZFIMRKM"/>
    </Bodies>
    <MethodGroup Id="cmgLUAKTXIJWNHKJDBIWQ7ZBAL6DE" Name="Root"/>
    <PropertyGroup Id="cpgKYSYUB7AXVC4XCCOZSRSD3MT5A" Name="Root"/>
    <Properties>
      <Property Id="prdPZLU2WS7ZFGJXPXB35KVAME3UA" Name="stmtClear" Nature="2" IsConst="false" IsOverride="false">
        <AccessRules Access="1" IsPublished="false"/>
        <Type TypeId="411" Path="pdcSqlStatement______________"/>
        <Presentation InheritanceMask="4" IsPresentable="false">
          <Editing IsDuplicatesEnabled="true"/>
        </Presentation>
        <GetterSources>
          <Src>
            <xsc:Item>
              <xsc:Java>if (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aclSMYPQ6SJB5FUJJ6RSNUC3QKTUA prdPZLU2WS7ZFGJXPXB35KVAME3UA" Invoke="true" extStr="#STD_PROP_VALUE#"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> == null) {
    </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aclSMYPQ6SJB5FUJJ6RSNUC3QKTUA prdPZLU2WS7ZFGJXPXB35KVAME3UA" Invoke="true" extStr="#STD_PROP_VALUE#"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="pdcSqlStatement______________"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="pdcSqlStatement______________ mthUW3PTWPGO7OBDCPUABIFNQAABA" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(
        "DECLARE PRAGMA AUTONOMOUS_TRANSACTION; " +
        "BEGIN " +
        "DELETE FROM " + </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="tblWAAAXLAWGJCZXBWRNF3DFYCYSQ" dbName="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> + "; " +
        "COMMIT; END;", 
        false
    );
}
return </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aclSMYPQ6SJB5FUJJ6RSNUC3QKTUA prdPZLU2WS7ZFGJXPXB35KVAME3UA" Invoke="true" extStr="#STD_PROP_VALUE#"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>;</xsc:Java>
            </xsc:Item>
          </Src>
        </GetterSources>
      </Property>
    </Properties>
    <Methods>
      <Method Id="mthG2ORZGNH27NRDISQAAAAAAAAAA" Name="execute" Nature="0" IsOverride="true">
        <AccessRules/>
        <ReturnType TypeId="2" Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>class Checker extends ClassLoader {

    private </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="aecWAAAXLAWGJCZXBWRNF3DFYCYSQ"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> userDef = null;
    private Map&lt;</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>, byte[]> runtime = new HashMap&lt;</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>, byte[]>();
    private </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> mainClassName = null;
//    private </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="451"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> src = null;

    public Checker(</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="aecWAAAXLAWGJCZXBWRNF3DFYCYSQ"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> userDef) {
        super(Checker.class.getClassLoader());
        this.userDef = userDef;
        
//        try {
//            src = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="451"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.Factory.parse(userDef.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aecWAAAXLAWGJCZXBWRNF3DFYCYSQ colWFZ2Q3FUUJECZKKYRHKY6UL3D4" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.getAsciiStream());
//        } catch (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="axcVN3PK4FIINBOLIFTWXCBTA6UHI"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> e) {
//            </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="pdcTrace_____________________"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="pdcTrace_____________________ mthD6XIGP2SRPNRDCISABIFNQAABA" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>("UserDefTest src parse error " + e.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axc6XYNZ22YSZEKDKWH2SWRGBTC6I mthAIARN4PFVBD6HJZSJNZIXYNYAY" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>() + ", classGuid = " + userDef.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aecWAAAXLAWGJCZXBWRNF3DFYCYSQ col5NZZZYWZQFBKBAZXH5LWJJVO4Y" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>, </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="acsTNLJBZADHTNRDIPGABQAQNO6EY aciBDR6OQMDWJHFRBABRQBE26DNYU" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>);
//        }
        
        try {
            InputStream in = userDef.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aecWAAAXLAWGJCZXBWRNF3DFYCYSQ colOVZGHZPHH5HD3AXBWHXN4NKK3U" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.getBinaryStream(1, userDef.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aecWAAAXLAWGJCZXBWRNF3DFYCYSQ colOVZGHZPHH5HD3AXBWHXN4NKK3U" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.length());
            JarInputStream jarIn = new JarInputStream(in);
            
            try {
                JarEntry entry;
                while ((entry = jarIn.getNextJarEntry()) != null) {
                    if (entry.getName().endsWith(userDef.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aecWAAAXLAWGJCZXBWRNF3DFYCYSQ col5NZZZYWZQFBKBAZXH5LWJJVO4Y" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> + ".class")) {
                        mainClassName = entry.getName().substring(0, entry.getName().length()-6).replace('/', '.');
                    }
                    byte[] bytes = FileUtils.getInputStreamAsByteArray(jarIn, -1);
                    if (bytes == null) {
                        bytes = new byte[0];
                    }
                    runtime.put(entry.getName(), bytes);
                }
            } finally {
                try {
                    jarIn.close();
                } catch (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="axcT6PDWQP2FRBGJJE4ZJYCMR2CDM"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> e) {
                }
            }
        } catch (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="axcVN3PK4FIINBOLIFTWXCBTA6UHI"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> e) {
            </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="pdcTrace_____________________"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="pdcTrace_____________________ mthD6XIGP2SRPNRDCISABIFNQAABA" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>("UserDefTest runtime parse error " + e.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axc6XYNZ22YSZEKDKWH2SWRGBTC6I mthAIARN4PFVBD6HJZSJNZIXYNYAY" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>() + ", classGuid = " + userDef.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aecWAAAXLAWGJCZXBWRNF3DFYCYSQ col5NZZZYWZQFBKBAZXH5LWJJVO4Y" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>, </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="acsTNLJBZADHTNRDIPGABQAQNO6EY aciBDR6OQMDWJHFRBABRQBE26DNYU" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>);            
        }
    }

    @Override
    @SuppressWarnings("deprecation")
    protected Class&lt;?> findClass(String name) throws </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="axcGC2AUW56ZNDNJLQFIP4I5NQLPM"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> {
        if (name.contains(userDef.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aecWAAAXLAWGJCZXBWRNF3DFYCYSQ col5NZZZYWZQFBKBAZXH5LWJJVO4Y" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>)) {
            </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> className = name.replace(".", "/") + ".class";
            byte[] data = runtime.get(className);
            if (data != null) {
                return defineClass(data, 0, data.length);
            } else {
                throw new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="axcGC2AUW56ZNDNJLQFIP4I5NQLPM"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();
            }
        }
        return super.findClass(name);
    }

    public void check() throws LinkageError, ClassNotFoundException {
        final Class&lt;?> c = loadClass(mainClassName);
        this.resolveClass(c);
        c.getDeclaredClasses();
        c.getDeclaredAnnotations();
        c.getDeclaredConstructors();
        c.getDeclaredFields();
        c.getDeclaredMethods();
        c.getDeclaringClass();
    }
}

</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> resultComment = "";
</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="2" Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> result = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4 aci52AUJTYZVPORDJHCAANE2UAFXA" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>;
</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="pdcSqlStatement______________"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> stmtUserDefTest = null;
try {
    stmtUserDefTest = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="pdcSqlStatement______________"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="pdcSqlStatement______________ mthUW3PTWPGO7OBDCPUABIFNQAABA" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(
        "select " + </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="tblWAAAXLAWGJCZXBWRNF3DFYCYSQ col5NZZZYWZQFBKBAZXH5LWJJVO4Y" dbName="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> + " from " + </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="tblWAAAXLAWGJCZXBWRNF3DFYCYSQ" dbName="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>, false);
    
    </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="pdcResultSet_________________"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> rsUserDefTest = stmtUserDefTest.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="pdcSqlStatement______________ mthK5ULGFQYYDNRDCKAABIFNQAABA" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();
    while (rsUserDefTest.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="pdcCursor____________________ mthBNNDZ4NDINDL3IT3X6TOSIN7TQ" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>()) {
        </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="2"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> sectionId = null;
        try {
            sectionId = Arte.Cache.enterSection();
            
            final </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> classGuid = rsUserDefTest.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="pdcResultSet_________________ mthM66IMD27YXNRDCKEABIFNQAABA" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(1);
            final </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="aecWAAAXLAWGJCZXBWRNF3DFYCYSQ"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> udef = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="aecWAAAXLAWGJCZXBWRNF3DFYCYSQ"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aecWAAAXLAWGJCZXBWRNF3DFYCYSQ mth_loadByPK_________________" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(classGuid, false);
        
            </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aecHW4OSVMS27NRDISQAAAAAAAAAA mthUX5AEZVK27NRDISQAAAAAAAAAA" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>("Run test class " + classGuid + ", name = " + udef.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aecWAAAXLAWGJCZXBWRNF3DFYCYSQ colXLVXKDULRNERFEGFHJHQL44CVI" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>);
//            System.out.println("Run test class " + classGuid + ", name = " + udef.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aecWAAAXLAWGJCZXBWRNF3DFYCYSQ colXLVXKDULRNERFEGFHJHQL44CVI" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>);
        
            udef.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aecWAAAXLAWGJCZXBWRNF3DFYCYSQ colE56SYUVICRAFDNXO7GHXE7JMNU" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="adcQ46YBRNDL7ORDI2YABIFNQAABA"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcQ46YBRNDL7ORDI2YABIFNQAABA mthZHWRDW5DL7ORDI2YABIFNQAABA" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();
            udef.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aecWAAAXLAWGJCZXBWRNF3DFYCYSQ col4OLGV3PUYREWPDSB77JIZG2BMA" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> = true;
            udef.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aecWAAAXLAWGJCZXBWRNF3DFYCYSQ colALIOUH62Y5FKZPLFBDCUCU6VHM" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> = null;
            
            try {
                new Checker(udef).check();
            } catch (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="axc6XYNZ22YSZEKDKWH2SWRGBTC6I"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> e) {
                udef.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aecWAAAXLAWGJCZXBWRNF3DFYCYSQ col4OLGV3PUYREWPDSB77JIZG2BMA" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> = false;
                udef.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aecWAAAXLAWGJCZXBWRNF3DFYCYSQ colALIOUH62Y5FKZPLFBDCUCU6VHM" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> = e.Class.Name + " - " + e.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axc6XYNZ22YSZEKDKWH2SWRGBTC6I mthAIARN4PFVBD6HJZSJNZIXYNYAY" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();
                resultComment += "Test failed on class " + classGuid + ", name = " + udef.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aecWAAAXLAWGJCZXBWRNF3DFYCYSQ colXLVXKDULRNERFEGFHJHQL44CVI" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> + ": " + e.Class.Name + " - " + e.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axc6XYNZ22YSZEKDKWH2SWRGBTC6I mthAIARN4PFVBD6HJZSJNZIXYNYAY" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>() + "\n\n";
                </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aecHW4OSVMS27NRDISQAAAAAAAAAA mthHPCYBENK27NRDISQAAAAAAAAAA" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>("Test failed on class " + classGuid + ", name = " + udef.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aecWAAAXLAWGJCZXBWRNF3DFYCYSQ colXLVXKDULRNERFEGFHJHQL44CVI" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> + ": " + e.Class.Name + " - " + e.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axc6XYNZ22YSZEKDKWH2SWRGBTC6I mthAIARN4PFVBD6HJZSJNZIXYNYAY" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>());
//                System.out.println("Test failed on class " + classGuid + ", name = " + udef.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aecWAAAXLAWGJCZXBWRNF3DFYCYSQ colXLVXKDULRNERFEGFHJHQL44CVI" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> + ": " + e.Class.Name + " - " + e.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axc6XYNZ22YSZEKDKWH2SWRGBTC6I mthAIARN4PFVBD6HJZSJNZIXYNYAY" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>());
                result = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="acsFRO5RTQOG7NRDJH2ACQMTAIZT4 aci5WAUJTYZVPORDJHCAANE2UAFXA" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>;
            }
            
            udef.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="pdcEntity____________________ mth5A5TVHUCNVHFXIT7FDJ75MILHE" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();
        } finally {
            Arte.Cache.leaveSection(sectionId);
        }
    }
} finally {
    if (stmtUserDefTest != null)
        stmtUserDefTest.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="pdcSqlStatement______________ mthWSWMX4ECYXNRDCKEABIFNQAABA" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();
}

if (!resultComment.isEmpty())
    </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aecHW4OSVMS27NRDISQAAAAAAAAAA prd5AM5QSYIGZBWFFRWMT47NIP5AQ" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> = resultComment;
return result;</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthcmdNQAWTOAQPRANTID7MM45B5OXMA" Name="onCommand_Actualize" Nature="1" IsOverride="false">
        <AccessRules IsPublished="false"/>
        <Parameters>
          <Parameter Name="input" Id="mpr3MUC3ASCLVAQLKUDV22CCE3HGY">
            <Type TypeId="451" Path="xsdYZHBNCK7IZEVZPRPZ72UZ37JTE" extStr="ImportRqDocument"/>
          </Parameter>
          <Parameter Name="newPropValHandlersById" Id="mprH2NTOQMNBNEI5BDCV2GIFSZ63Y">
            <Type TypeId="400" extStr="org.radixware.kernel.server.types.PropValHandlersByIdMap"/>
          </Parameter>
        </Parameters>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:IdReference Path="aclSMYPQ6SJB5FUJJ6RSNUC3QKTUA prdPZLU2WS7ZFGJXPXB35KVAME3UA" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="pdcSqlStatement______________ mthRN5BV6IWYDNRDCKAABIFNQAABA" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();

final Map&lt;</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>, Map&lt;</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>, byte[]>> jars = 
    new HashMap&lt;</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>, Map&lt;</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>, byte[]>>();

for (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="451" Path="xsdYZHBNCK7IZEVZPRPZ72UZ37JTE" extStr="ImportRqDocument.ImportRq.UserDef"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> xDef : input.ImportRq.UserDefList) {
    </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="2"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> sectionId = null;
    try {
        sectionId = Arte.Cache.enterSection();        
        final </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="aecWAAAXLAWGJCZXBWRNF3DFYCYSQ"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> udef = new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="aecWAAAXLAWGJCZXBWRNF3DFYCYSQ"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();
        udef.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="pdcEntity____________________ mthMUQ4NQFMSTNRDDXBABIFNQAAAE" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();
        udef.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aecWAAAXLAWGJCZXBWRNF3DFYCYSQ colXLVXKDULRNERFEGFHJHQL44CVI" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> = xDef.Title;
        udef.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aecWAAAXLAWGJCZXBWRNF3DFYCYSQ col5NZZZYWZQFBKBAZXH5LWJJVO4Y" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> = xDef.ClassGuid;
        udef.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aecWAAAXLAWGJCZXBWRNF3DFYCYSQ colUX2FAXYOEBHFDK4RTQYWPDRPHU" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> = xDef.DefinitionType;
        udef.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aecWAAAXLAWGJCZXBWRNF3DFYCYSQ colB42XVVUXRVFC7LBWNWHH34I67M" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> = xDef.LastModified;
    
// src
        </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="27"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> src = null;
        try {
            src = getArte().getDbConnection().createTemporaryClob();
            </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="pdcFileInResource____________"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> in = new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="pdcFileInResource____________ mthLNZ6KV7C2NE6DAM254AJ3HZLKI" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(getArte(), xDef.SrcFile, </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="acsFIH6I56MHTNRDCGPABIFNQAABA aciEWBEJTYZVPORDJHCAANE2UAFXA" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>);
            OutputStream out = src.setAsciiStream(1L);
            try {
                FileUtils.copyStream(in, out);
            } finally {
                out.close();
                in.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="pdcFileInResource____________ mthMO7RS5D2BRGJJO5LTTBR24K3TQ" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();
            }
        } catch (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="axcVN3PK4FIINBOLIFTWXCBTA6UHI"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> e) {
            throw new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axcTNXCEKEORVFRFDUEZO3MB5REHQ mth5TTUPQZBRBFJPJTYFH3A54IZFY" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(e.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axc6XYNZ22YSZEKDKWH2SWRGBTC6I mthAIARN4PFVBD6HJZSJNZIXYNYAY" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(), e);
        }
        udef.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aecWAAAXLAWGJCZXBWRNF3DFYCYSQ colWFZ2Q3FUUJECZKKYRHKY6UL3D4" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> = src;
//        System.out.println("load src = " + xDef.SrcFile);
    
// runtime
        Map&lt;</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>, byte[]> entries = jars.get(xDef.RuntimeFile);
        if (entries == null) {
            try {
                entries = new HashMap&lt;</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>, byte[]>();        
                </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="pdcFileInResource____________"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> in = new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="pdcFileInResource____________ mthLNZ6KV7C2NE6DAM254AJ3HZLKI" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(getArte(), xDef.RuntimeFile, </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="acsFIH6I56MHTNRDCGPABIFNQAABA aciEWBEJTYZVPORDJHCAANE2UAFXA" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>);
                JarInputStream jarIn = new JarInputStream(in);
        
                try {
                    JarEntry entry;
                    while ((entry = jarIn.getNextJarEntry()) != null) {                    
                        byte[] bytes = FileUtils.getInputStreamAsByteArray(jarIn, (int)entry.Size);
                        if (bytes == null) {
                            bytes = new byte[0];
                        }                
                        entries.put(entry.getName(), bytes);
                    }
                } finally {
                    jarIn.close();
                }
            
                jars.put(xDef.RuntimeFile, entries);
            } catch (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="axcVN3PK4FIINBOLIFTWXCBTA6UHI"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> e) {
                throw new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axcTNXCEKEORVFRFDUEZO3MB5REHQ mth5TTUPQZBRBFJPJTYFH3A54IZFY" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(e.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axc6XYNZ22YSZEKDKWH2SWRGBTC6I mthAIARN4PFVBD6HJZSJNZIXYNYAY" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(), e);
            }
        }
    
        </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="28"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> runtime = null;
        try {
            runtime = getArte().getDbConnection().createTemporaryBlob();        
            OutputStream out = runtime.setBinaryStream(1L);        
            JarOutputStream jarOut = new JarOutputStream(out);
            try {
                for (Map.Entry&lt;</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="21"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>, byte[]> e: entries.entrySet()) {
                    if (!e.getKey().contains(xDef.ClassGuid))
                        continue;
                
                    jarOut.putNextEntry(new JarEntry(e.getKey()));
                    FileUtils.copyStream(new ByteArrayInputStream(e.getValue()), jarOut);
                    jarOut.flush();
                    jarOut.closeEntry();
                }
            } finally {
                jarOut.close();
            }
        } catch (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="axcVN3PK4FIINBOLIFTWXCBTA6UHI"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> e) {
            throw new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axcTNXCEKEORVFRFDUEZO3MB5REHQ mth5TTUPQZBRBFJPJTYFH3A54IZFY" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(e.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axc6XYNZ22YSZEKDKWH2SWRGBTC6I mthAIARN4PFVBD6HJZSJNZIXYNYAY" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(), e);
        }

// runtime
/*
    </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="28"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> runtime = null;
    try {
        runtime = getArte().getDbConnection().createTemporaryBlob();
        
        </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="pdcFileInResource____________"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> in = new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="pdcFileInResource____________ mthLNZ6KV7C2NE6DAM254AJ3HZLKI" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(getArte(), xDef.RuntimeFile, </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="acsFIH6I56MHTNRDCGPABIFNQAABA aciEWBEJTYZVPORDJHCAANE2UAFXA" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>);        
        OutputStream out = runtime.setBinaryStream(1L);
        
        JarInputStream jarIn = new JarInputStream(in);
        JarOutputStream jarOut = new JarOutputStream(out);
        try {
            JarEntry entry;
            while ((entry = jarIn.getNextJarEntry()) != null) {
                if (!entry.getName().contains(xDef.ClassGuid))
                    continue;
                
                jarOut.putNextEntry(new JarEntry(entry.getName()));
                FileUtils.copyStream(jarIn, jarOut);
                jarOut.flush();
                jarOut.closeEntry();
            }
        } finally {
            out.close();
            in.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="pdcFileInResource____________ mthMO7RS5D2BRGJJO5LTTBR24K3TQ" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();
        }
    } catch (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="axcVN3PK4FIINBOLIFTWXCBTA6UHI"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> e) {
        throw new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axcTNXCEKEORVFRFDUEZO3MB5REHQ mth5TTUPQZBRBFJPJTYFH3A54IZFY" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(e.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axc6XYNZ22YSZEKDKWH2SWRGBTC6I mthAIARN4PFVBD6HJZSJNZIXYNYAY" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(), e);
    }
*/    
        udef.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aecWAAAXLAWGJCZXBWRNF3DFYCYSQ colOVZGHZPHH5HD3AXBWHXN4NKK3U" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> = runtime;
//        System.out.println("load runtime = " + xDef.RuntimeFile);
    
        udef.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="pdcEntity____________________ mth7X446DFQSTNRDDXBABIFNQAAAE" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();
        </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aecHW4OSVMS27NRDISQAAAAAAAAAA mthUX5AEZVK27NRDISQAAAAAAAAAA" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>("Loaded class " + udef.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aecWAAAXLAWGJCZXBWRNF3DFYCYSQ col5NZZZYWZQFBKBAZXH5LWJJVO4Y" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> + ", name = " + udef.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aecWAAAXLAWGJCZXBWRNF3DFYCYSQ colXLVXKDULRNERFEGFHJHQL44CVI" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> + ", src = " + xDef.SrcFile);
    } finally {
        Arte.Cache.leaveSection(sectionId);
    }
}</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
    </Methods>
    <Entity EntityId="tblHW4OSVMS27NRDISQAAAAAAAAAA"/>
    <Presentations ObjectTitleId="mlsRUO5DGMEHBHCNKTQXOHXOHYPLE">
      <Commands>
        <Command Id="cmdNQAWTOAQPRANTID7MM45B5OXMA" Name="Actualize" TitleId="mls3JH5I7YNYRBBLDNPP6Y4B3CUMQ" Nature="2" IconId="imgEVEBHW62BFDDBLQVX2YPL7ZERM" IsVisible="true" IsConfirmationRequired="false" Accessibility="0" Scope="3">
          <AccessRules IsPublished="false"/>
          <InType TypeId="451" Path="xsdYZHBNCK7IZEVZPRPZ72UZ37JTE" extStr="ImportRqDocument"/>
        </Command>
      </Commands>
      <ClassCatalogs>
        <ClassCatalog Id="eccKGGFFVPJAHOBDA26AAMPGXSZKU" Name="All">
          <ClassRef TopicId="cctCE37MB2JGQAESF2YAAIFIUYFRE" Order="75.0"/>
        </ClassCatalog>
      </ClassCatalogs>
      <EditorPresentations>
        <EditorPresentation Id="eprUPIMLJXIYFFPFOGKUJZJW25EJE" Name="General" BasePresentationId="eprBMFQWKU227NRDISQAAAAAAAAAA" InheritanceMask="101552" Restrictions="0" EnabledCommandIds="" ReplacedPresentationId="eprBMFQWKU227NRDISQAAAAAAAAAA" RightsInheritanceMode="0" ClientEnvironment="explorer">
          <AccessRules IsPublished="false"/>
          <Model Id="aemUPIMLJXIYFFPFOGKUJZJW25EJE" Name="General:Model" Type="15">
            <AccessRules IsPublished="false"/>
            <Headers>
              <Src Name="HeaderaemUPIMLJXIYFFPFOGKUJZJW25EJE">
                <xsc:Item>
                  <xsc:Java>import com.trolltech.qt.gui.QFileDialog;
import java.io.*;</xsc:Java>
                </xsc:Item>
              </Src>
            </Headers>
            <Bodies>
              <Src Name="BodyaemUPIMLJXIYFFPFOGKUJZJW25EJE"/>
            </Bodies>
            <MethodGroup Id="cmgTHZ2MISN6NCQPKTUHCMVKFVPDE" Name="Root"/>
            <PropertyGroup Id="cpgVC7PQM6JHRCXDOVZ2MZJPNDXPU" Name="Root"/>
            <Properties/>
            <Methods>
              <Method Id="mthcmdNQAWTOAQPRANTID7MM45B5OXMA" Name="onCommand_Actualize" Nature="1" IsOverride="false">
                <AccessRules IsPublished="false"/>
                <Parameters>
                  <Parameter Name="command" Id="mprWXPVKRV4KREKNK7GCHRCPKOJKE">
                    <Type TypeId="411" Path="aclSMYPQ6SJB5FUJJ6RSNUC3QKTUA cmdNQAWTOAQPRANTID7MM45B5OXMA"/>
                  </Parameter>
                </Parameters>
                <Sources>
                  <Src>
                    <xsc:Item>
                      <xsc:Java>final </xsc:Java>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:TypeDeclaration TypeId="451" Path="xsdYZHBNCK7IZEVZPRPZ72UZ37JTE" extStr="ImportRqDocument"/>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:Java> xDoc = </xsc:Java>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:TypeDeclaration TypeId="451" Path="xsdYZHBNCK7IZEVZPRPZ72UZ37JTE" extStr="ImportRqDocument.Factory"/>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:Java>.newInstance();
xDoc.addNewImportRq();

class Loader {
    boolean load(File dir) {
        if (isBranch(dir)) {
            loadBranch(dir);
        } else if (isLayer(dir)) {
            loadLayer(dir);
        } else if (isSegment(dir)) {
            loadSegment(dir);
        } else if (isModule(dir)) {
            loadModule(dir);
        } else
            return false;
        return true;    
    }
    
    private void loadBranch(File dir) {
        for (File file : dir.listFiles()) {
            if (isLayer(file))
                loadLayer(file);
        }
    }
    
    private void loadLayer(File dir) {
        for (File file : dir.listFiles()) {
            if (isSegment(file))
                loadSegment(file);
        }
    }
    
    private void loadSegment(File dir) {
        for (File file : dir.listFiles()) {
            if (isModule(file))
                loadModule(file);
        }
    }
    
    private void loadModule(File dir) {
        </xsc:Java>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:IdReference Path="aclSMYPQ6SJB5FUJJ6RSNUC3QKTUA eprUPIMLJXIYFFPFOGKUJZJW25EJE aemUPIMLJXIYFFPFOGKUJZJW25EJE mth4NUEAUGLXRHULCCSFMQSF4QHQU" Invoke="true"/>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:Java>(xDoc.ImportRq, dir);
    }
    
    private boolean exists(File dir, Str name) {
        if (!dir.isDirectory())
            return false;
        final File file = new File(dir, name);
        return file.exists();
    }

    private boolean isBranch(File dir) {
        return exists(dir, "branch.xml");
    }
    
    private boolean isLayer(File dir) {
        return exists(dir, "layer.xml");
    }
    
    private boolean isSegment(File dir) {
        return dir.isDirectory() &amp;&amp; dir.Name == "uds";
    }
    
    private boolean isModule(File dir) {
        return exists(dir, "module.xml");
    }    
}

final </xsc:Java>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:TypeDeclaration TypeId="21"/>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:Java> dirName = 
    QFileDialog.getExistingDirectory((</xsc:Java>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:TypeDeclaration TypeId="411" Path="adcCZYXFDFN2RFU3C7KEMRBKB76F4"/>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:Java>)</xsc:Java>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:IdReference Path="adc2BBVYOFJVBDTDPNKMVD7H7WLQA mthEUO6VJYY2VF7LDWA6ANU5P4V6M" Invoke="true"/>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:Java>(), </xsc:Java>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:LocalizedString StringId="mlsAD6KXKXUGFFTBGVX6UXR3CRV7A"/>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:Java>, null);
        
if (dirName != null &amp;&amp; !dirName.isEmpty()) {
    final File dir = new File(dirName);
    if (!new Loader().load(dir)) {
        </xsc:Java>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:TypeDeclaration TypeId="411" Path="adcGPNNISYF4NG5NC4NX5ITZORVYQ"/>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:Java>.</xsc:Java>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:IdReference Path="adcGPNNISYF4NG5NC4NX5ITZORVYQ mthRBQCV7YXWNFAFDCE2AZNZCHAAI" Invoke="true"/>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:Java>(</xsc:Java>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:LocalizedString StringId="mlsHA2OMA3OHNC57GM5QNPGBFP6XU"/>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:Java>);
        return;
    }
    
    try {
        command.send(xDoc);
        </xsc:Java>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:TypeDeclaration TypeId="411" Path="adcGPNNISYF4NG5NC4NX5ITZORVYQ"/>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:Java>.</xsc:Java>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:IdReference Path="adcGPNNISYF4NG5NC4NX5ITZORVYQ mthTBZ664HXGRA35JY3GRAKEYBTBA" Invoke="true"/>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:Java>(</xsc:Java>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:LocalizedString StringId="mlsHELYO53C55F25B7PCYWHKZKZO4"/>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:Java>);
    } catch(</xsc:Java>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:TypeDeclaration TypeId="411" Path="axcVN3PK4FIINBOLIFTWXCBTA6UHI"/>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:Java> e) {
        </xsc:Java>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:IdReference Path="adc24D3IJUTHVH7HJZFW2PSATWURU mthDJZSTHREHVDTFB323J3RXPJYNY" Invoke="true"/>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:Java>(e);
    }
}</xsc:Java>
                    </xsc:Item>
                  </Src>
                </Sources>
              </Method>
              <Method Id="mth4NUEAUGLXRHULCCSFMQSF4QHQU" Name="load" Nature="0" IsOverride="false">
                <AccessRules Access="2" IsPublished="false"/>
                <Parameters>
                  <Parameter Name="rq" Id="mprII3JFLZLKZDPPGFE6A52T3YMOU">
                    <Type TypeId="451" Path="xsdYZHBNCK7IZEVZPRPZ72UZ37JTE" extStr="ImportRqDocument.ImportRq"/>
                  </Parameter>
                  <Parameter Name="dir" Id="mprLFQ5OV4LABH3ZOCOFYCQFM2ZMA">
                    <Type TypeId="400" extStr="java.io.File"/>
                  </Parameter>
                </Parameters>
                <Sources>
                  <Src>
                    <xsc:Item>
                      <xsc:Java>final File runtime = new File(dir.AbsolutePath + File.separator + "bin" + File.separator + "server.jar");
if (!runtime.exists())
    return;

final File src = new File(dir, "src");
if (!src.exists() || !src.isDirectory())
    return;

for (File file : src.listFiles()) {
    if (!file.isFile() || !file.Name.endsWith(".xml"))
        continue;
    
    if (file.Name.startsWith(</xsc:Java>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:IdReference Path="acsHL2QKDVQX5FARACANDWKNIZ5OU aciQUVJXH3ULNGTXG64BG53LY673M" Invoke="true"/>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:Java>.Value)) {
        </xsc:Java>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:TypeDeclaration TypeId="451" Path="xsd5NCENQ5IQ3OBDCKEAALOMT5GDM" extStr="AdsDefinitionDocument"/>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:Java> xDoc = null;
        try  {
            xDoc = </xsc:Java>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:TypeDeclaration TypeId="451" Path="xsd5NCENQ5IQ3OBDCKEAALOMT5GDM" extStr="AdsDefinitionDocument"/>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:Java>.Factory.parse(file);
        } catch( </xsc:Java>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:TypeDeclaration TypeId="411" Path="axcVN3PK4FIINBOLIFTWXCBTA6UHI"/>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:Java> e) {
            throw new </xsc:Java>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:IdReference Path="axcTNXCEKEORVFRFDUEZO3MB5REHQ mth5TTUPQZBRBFJPJTYFH3A54IZFY" Invoke="true"/>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:Java>(e.</xsc:Java>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:IdReference Path="axc6XYNZ22YSZEKDKWH2SWRGBTC6I mthAIARN4PFVBD6HJZSJNZIXYNYAY" Invoke="true"/>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:Java>(), e);
        }
    
        if (!xDoc.AdsDefinition.isSetAdsClassDefinition())
            continue;
        
        </xsc:Java>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:TypeDeclaration TypeId="451" Path="xsd5NCENQ5IQ3OBDCKEAALOMT5GDM" extStr="ClassDefinition"/>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:Java> xClassDef = xDoc.AdsDefinition.AdsClassDefinition;            
        </xsc:Java>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:TypeDeclaration TypeId="451" Path="xsdYZHBNCK7IZEVZPRPZ72UZ37JTE" extStr="ImportRqDocument.ImportRq.UserDef"/>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:Java> xDef = rq.addNewUserDef();
        xDef.Title = xClassDef.Name;
        xDef.ClassGuid = xClassDef.Id.</xsc:Java>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:IdReference Path="adcELH54EKVCJAATNTLFHHCSVHPZU mthCX6FRHR4VNG37LJWH7N6THCMMA" Invoke="true"/>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:Java>();
        xDef.DefinitionType = </xsc:Java>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:IdReference Path="acsBZO5RTQOG7NRDJH2ACQMTAIZT4 aciNEKSMFDRCVBWPIY2ZKB7HQXP44" Invoke="true"/>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:Java>;
        xDef.LastModified = </xsc:Java>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:TypeDeclaration TypeId="411" Path="adcQ46YBRNDL7ORDI2YABIFNQAABA"/>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:Java>.</xsc:Java>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:IdReference Path="adcQ46YBRNDL7ORDI2YABIFNQAABA mthZHWRDW5DL7ORDI2YABIFNQAABA" Invoke="true"/>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:Java>();
        xDef.SrcFile = file.AbsolutePath;
        xDef.RuntimeFile = runtime.AbsolutePath;
    } else {
        org.radixware.schemas.udsdef.UdsDefinitionDocument xDoc = null;
        try  {
            xDoc = org.radixware.schemas.udsdef.UdsDefinitionDocument.Factory.parse(file);
        } catch( </xsc:Java>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:TypeDeclaration TypeId="411" Path="axcVN3PK4FIINBOLIFTWXCBTA6UHI"/>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:Java> e) {
            throw new </xsc:Java>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:IdReference Path="axcTNXCEKEORVFRFDUEZO3MB5REHQ mth5TTUPQZBRBFJPJTYFH3A54IZFY" Invoke="true"/>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:Java>(e.</xsc:Java>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:IdReference Path="axc6XYNZ22YSZEKDKWH2SWRGBTC6I mthAIARN4PFVBD6HJZSJNZIXYNYAY" Invoke="true"/>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:Java>(), e);
        }
        
        if (xDoc.UdsDefinition.UserFunc == null)
            continue;
        
        org.radixware.schemas.udsdef.UserFunctionDefinition xUserFunc = xDoc.UdsDefinition.UserFunc;
        </xsc:Java>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:TypeDeclaration TypeId="451" Path="xsdYZHBNCK7IZEVZPRPZ72UZ37JTE" extStr="ImportRqDocument.ImportRq.UserDef"/>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:Java> xDef = rq.addNewUserDef();
        xDef.Title = xUserFunc.Name;
        xDef.ClassGuid = xUserFunc.Id.</xsc:Java>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:IdReference Path="adcELH54EKVCJAATNTLFHHCSVHPZU mthCX6FRHR4VNG37LJWH7N6THCMMA" Invoke="true"/>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:Java>();
        xDef.DefinitionType = </xsc:Java>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:IdReference Path="acsBZO5RTQOG7NRDJH2ACQMTAIZT4 aciXV7EJTYZVPORDJHCAANE2UAFXA" Invoke="true"/>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:Java>;
        xDef.LastModified = </xsc:Java>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:TypeDeclaration TypeId="411" Path="adcQ46YBRNDL7ORDI2YABIFNQAABA"/>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:Java>.</xsc:Java>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:IdReference Path="adcQ46YBRNDL7ORDI2YABIFNQAABA mthZHWRDW5DL7ORDI2YABIFNQAABA" Invoke="true"/>
                    </xsc:Item>
                    <xsc:Item>
                      <xsc:Java>();
        xDef.SrcFile = file.AbsolutePath;
        xDef.RuntimeFile = runtime.AbsolutePath;
    }
}</xsc:Java>
                    </xsc:Item>
                  </Src>
                </Sources>
              </Method>
            </Methods>
          </Model>
          <ChildExplorerItems>
            <Item>
              <ChildRef Id="xpiJW2S7KJ67FC7XDZ7EBYI2JWJXU" Name="TestCase" TitleId="mlsAIEPCKEYWRHZTIXUQ5T5N2HEVI" InheritanceMask="16432" IsVisibleInTree="true" ClassId="aecHW4OSVMS27NRDISQAAAAAAAAAA" SelectorPresentationId="sprNGT5DE5G27NRDISQAAAAAAAAAA" Restrictions="0" EnabledCommands="" ChildReferenceId="refZ3L7OMMT27NRDISQAAAAAAAAAA">
                <Condition>
                  <ConditionWhere/>
                  <ConditionFrom/>
                </Condition>
              </ChildRef>
            </Item>
            <Item>
              <Entity Id="xpiZKS6VUIN35F4DA5K53DQ4QCU3M" Name="UserDefTest" InheritanceMask="16560" IsVisibleInTree="true" ClassId="aecWAAAXLAWGJCZXBWRNF3DFYCYSQ" SelectorPresentationId="sprVACUKYDRM5HNZIIB7WYRTQLQYM" Restrictions="0" EnabledCommands="">
                <Condition>
                  <ConditionWhere/>
                  <ConditionFrom/>
                </Condition>
              </Entity>
            </Item>
          </ChildExplorerItems>
          <EditorPages>
            <Page Id="epg3JGCJPNVRRE5DOD2RX664CKCVY" Name="General" TitleId="mlsHO5XBX6IABB4FFPASNV5FHM6BE" Type="1">
              <Properties>
                <Property Id="colN3UZ2Z4S27NRDISQAAAAAAAAAA" Row="0" Column="0"/>
                <Property Id="prdZSHM4TXE3XNRDISQAAAAAAAAAA" Row="1" Column="0"/>
                <Property Id="colMWOGO4MS27NRDISQAAAAAAAAAA" Row="2" Column="0"/>
                <Property Id="colGBJZDIUS27NRDISQAAAAAAAAAA" Row="3" Column="0"/>
                <Property Id="colQKCERAMS27NRDISQAAAAAAAAAA" Row="4" Column="0"/>
                <Property Id="colYWL4NXUS27NRDISQAAAAAAAAAA" Row="5" Column="0"/>
                <Property Id="colC46NAASN3PNRDISQAAAAAAAAAA" Row="6" Column="0"/>
                <Property Id="colHWP3QCET27NRDISQAAAAAAAAAA" Row="7" Column="0"/>
                <Property Id="colQP4LKSN3IFHITPAQXU7J72H6FA" Row="8" Column="0"/>
              </Properties>
            </Page>
            <Page Id="epgPNDOQPIBNNBDJEXIXZJXML5R2M" Name="Defs" Type="3" EmbeddedExplorerItemId="xpiZKS6VUIN35F4DA5K53DQ4QCU3M"/>
            <PageOrder>
              <Item PageId="epg3JGCJPNVRRE5DOD2RX664CKCVY" Level="1"/>
              <Item PageId="epgPNDOQPIBNNBDJEXIXZJXML5R2M" Level="1"/>
              <Item PageId="epg7BIMYSOU2JFUHJFWJJGELYTFZA" Level="1"/>
            </PageOrder>
          </EditorPages>
          <ObjectTitleFormat Id="etfQMWWMYY56FCHNMBPZB5WZADMAM"/>
        </EditorPresentation>
      </EditorPresentations>
    </Presentations>
    <Extends TypeId="411" Path="aecHW4OSVMS27NRDISQAAAAAAAAAA"/>
  </AdsClassDefinition>
</AdsDefinition>