<?xml version="1.0" encoding="UTF-8"?>
<AdsDefinition xmlns="http://schemas.radixware.org/adsdef.xsd" xmlns:xsc="http://schemas.radixware.org/xscml.xsd" FormatVersion="0">
  <AdsClassDefinition Id="agcW7BRVVQLHBE2FCNK7ZBRMAUJGM" Name="LibUserFuncGroup" Type="11">
    <AccessRules IsPublished="false"/>
    <Headers>
      <Src Name="HeaderagcZCE5BI5FQNDPDAW7U3LDW5EW44">
        <xsc:Item>
          <xsc:Java>import org.radixware.kernel.common.defs.ads.type.AdsTypeDeclaration;</xsc:Java>
        </xsc:Item>
      </Src>
    </Headers>
    <Bodies>
      <Src Name="BodyagcZCE5BI5FQNDPDAW7U3LDW5EW44"/>
    </Bodies>
    <MethodGroup Id="cmgW4UABMZQKBCMFL7QBP442GLDHE" Name="Root"/>
    <PropertyGroup Id="cpgIE2V45BNWNGEDJK5SWC5DVPBJM" Name="Root"/>
    <Properties>
      <Property Id="pgpVSECH6NEYVDUJENE5QYPQJ5VZY" Name="allowedLibNames" Nature="12" IsConst="false" IsOverride="false" isDescriptionInherited="false">
        <AccessRules IsPublished="false"/>
        <Type TypeId="221"/>
        <Presentation InheritanceMask="4">
          <Editing IsDuplicatesEnabled="true"/>
        </Presentation>
      </Property>
      <Property Id="pgpHITCWSTPHVAQ5BAZANDX5U7K2A" Name="xReturnType" Nature="12" IsConst="false" IsOverride="false" isDescriptionInherited="false">
        <AccessRules IsPublished="false"/>
        <Type TypeId="451" Path="xsdY5AELJNM7FG77FZD4ATT7SFMXA" extStr="TypeDeclarationDocument"/>
        <Presentation InheritanceMask="4">
          <Editing IsDuplicatesEnabled="true"/>
        </Presentation>
      </Property>
      <Property Id="pgpY2I2NSMUOVERXPWPT2D5QVH5MU" Name="libFuncInEditorGuid" Nature="12" IsConst="false" IsOverride="false" isDescriptionInherited="false">
        <AccessRules IsPublished="false"/>
        <Type TypeId="21"/>
        <Presentation InheritanceMask="4">
          <Editing IsDuplicatesEnabled="true"/>
        </Presentation>
      </Property>
    </Properties>
    <Methods>
      <Method Id="mthN2WJ3HALEFAHNLEC33L7YMY5VI" Name="getEntityFilter" Nature="0" IsOverride="true">
        <AccessRules/>
        <ReturnType TypeId="400" extStr="org.radixware.kernel.server.types.EntityGroup.EntityFilter">
          <xsc:GenericArguments>
            <xsc:Argument Alias="?">
              <xsc:Type TypeId="32" Path="aecW7BRVVQLHBE2FCNK7ZBRMAUJGM"/>
            </xsc:Argument>
          </xsc:GenericArguments>
        </ReturnType>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>if (getPresentation().getId() == </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aecW7BRVVQLHBE2FCNK7ZBRMAUJGM spr2Z3PQIOYMBE2FM2DX74KBB7D7A">
                <xsc:Presentation>LibUserFunc:Filtered</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>) {
    final org.radixware.kernel.common.repository.Branch branch;
    try {
        branch = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="pdcArte______________________">
                <xsc:Presentation>Arte::Arte</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="pdcArte______________________ mthJ22YS76JKFBLHMS32FAYSH3QNI" Invoke="true">
                <xsc:Presentation>getDefManager</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>().ReleaseCache.Release.Repository.Branch;
    } catch (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="axcT6PDWQP2FRBGJJE4ZJYCMR2CDM">
                <xsc:Presentation>Exceptions::IOException</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> ex) {
        </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="pdcTrace_____________________">
                <xsc:Presentation>Arte::Trace</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="pdcTrace_____________________ mthD6XIGP2SRPNRDCISABIFNQAABA" Invoke="true">
                <xsc:Presentation>error</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>("Error on access to branch: \n" + </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="pdcTrace_____________________">
                <xsc:Presentation>Arte::Trace</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="pdcTrace_____________________ mthI2EAXRIFRTNRDCISABIFNQAABA" Invoke="true">
                <xsc:Presentation>exceptionStackToString</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(ex), </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="acsTNLJBZADHTNRDIPGABQAQNO6EY aciVHTSMNFUNNBTJFRXGWTPCZA2FI" Invoke="true">
                <xsc:Presentation>Arte::EventSource:UserFunc</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>);
        throw new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axcTNXCEKEORVFRFDUEZO3MB5REHQ mth5TTUPQZBRBFJPJTYFH3A54IZFY" Invoke="true">
                <xsc:Presentation>AppError</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>("Error on open LibUserFunc selector", ex);
    }

    final org.radixware.kernel.common.defs.ads.module.AdsModule context = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="adcEWGZMSHL3BFCFFIJVRGAJSRPEY">
                <xsc:Presentation>AdsUserFuncDef</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.Lookup.createTempModule(branch, null);
    final AdsTypeDeclaration retType = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="agcW7BRVVQLHBE2FCNK7ZBRMAUJGM pgpHITCWSTPHVAQ5BAZANDX5U7K2A" Invoke="true">
                <xsc:Presentation>xReturnType</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> != null ? AdsTypeDeclaration.Factory.loadFrom(</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="agcW7BRVVQLHBE2FCNK7ZBRMAUJGM pgpHITCWSTPHVAQ5BAZANDX5U7K2A" Invoke="true">
                <xsc:Presentation>xReturnType</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.TypeDeclaration) : null;

    </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="aicULOLWORXSJGFPLAMSOD4VEXKYM">
                <xsc:Presentation>Types::EntityFilter</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>&lt;</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="aecW7BRVVQLHBE2FCNK7ZBRMAUJGM">
                <xsc:Presentation>LibUserFunc</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>> filter = new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="aicULOLWORXSJGFPLAMSOD4VEXKYM">
                <xsc:Presentation>Types::EntityFilter</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>&lt;</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="aecW7BRVVQLHBE2FCNK7ZBRMAUJGM">
                <xsc:Presentation>LibUserFunc</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>>() {

        @Override
        public boolean omitEntity(</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="aecW7BRVVQLHBE2FCNK7ZBRMAUJGM">
                <xsc:Presentation>LibUserFunc</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> libFunc) {
            if (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="agcW7BRVVQLHBE2FCNK7ZBRMAUJGM pgpVSECH6NEYVDUJENE5QYPQJ5VZY" Invoke="true">
                <xsc:Presentation>allowedLibNames</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> != null &amp;&amp; !</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="agcW7BRVVQLHBE2FCNK7ZBRMAUJGM pgpVSECH6NEYVDUJENE5QYPQJ5VZY" Invoke="true">
                <xsc:Presentation>allowedLibNames</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.contains(libFunc.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aecW7BRVVQLHBE2FCNK7ZBRMAUJGM colPWEV3UOPXJD5NLVOWUIJNNQ4XA" Invoke="true">
                <xsc:Presentation>libName</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>)) {
                return true;
            }
            if (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="agcW7BRVVQLHBE2FCNK7ZBRMAUJGM pgpY2I2NSMUOVERXPWPT2D5QVH5MU" Invoke="true">
                <xsc:Presentation>libFuncInEditorGuid</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> != null &amp;&amp; libFunc.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aecW7BRVVQLHBE2FCNK7ZBRMAUJGM colANG66BP4NZC55NQTVVF24BXAKI" Invoke="true">
                <xsc:Presentation>guid</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.equals(</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="agcW7BRVVQLHBE2FCNK7ZBRMAUJGM pgpY2I2NSMUOVERXPWPT2D5QVH5MU" Invoke="true">
                <xsc:Presentation>libFuncInEditorGuid</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>)) {
                return true;
            }
            if (retType == AdsTypeDeclaration.UNDEFINED || retType == AdsTypeDeclaration.VOID) {
                return false;
            } else {
                AdsTypeDeclaration type = null;
                if (libFunc.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aecW7BRVVQLHBE2FCNK7ZBRMAUJGM prd7375XZFYGZBGXOQRLJVUM2NJ4Y" Invoke="true">
                <xsc:Presentation>ufResultType</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> != null) {
                    type = AdsTypeDeclaration.Factory.loadFrom(libFunc.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aecW7BRVVQLHBE2FCNK7ZBRMAUJGM prd7375XZFYGZBGXOQRLJVUM2NJ4Y" Invoke="true">
                <xsc:Presentation>ufResultType</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.TypeDeclaration);
                } else {
                    type = null;
                }

                if ((type == null &amp;&amp; retType == null) || AdsTypeDeclaration.isAssignable(retType, type, context)) {
                    return false;
                }
            }
            return true;
        }
    };

    return filter;
}

return super.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="pdcEntityGroup_______________ mthN2WJ3HALEFAHNLEC33L7YMY5VI" Invoke="true">
                <xsc:Presentation>getEntityFilter</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthcmdGZUMJ4GVGRHYRL4QJLMWIWDZMQ" Name="onCommand_Export" Nature="1" IsOverride="false">
        <AccessRules IsPublished="false"/>
        <Parameters>
          <Parameter Name="input" Id="mprXBVV4UQVURFG5FUARY5AWQ7B74">
            <Type TypeId="451" Path="xsd3CHHLDEWMTPBDJHBAAN7YHKUNI" extStr="MapStrStrDocument"/>
          </Parameter>
        </Parameters>
        <ReturnType TypeId="400" extStr="org.radixware.kernel.server.types.FormHandler.NextDialogsRequest"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>if (input != null) {
    </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="afhWA2LH6AHQJFZTK7UTSGZD3N7L4">
                <xsc:Presentation>CfgExportForm.LibUserFuncGroup</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> form = new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="afhWA2LH6AHQJFZTK7UTSGZD3N7L4">
                <xsc:Presentation>CfgExportForm.LibUserFuncGroup</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(null);
    </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="221">
                <xsc:Presentation>ArrStr</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> funcsToExport = new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="221">
                <xsc:Presentation>ArrStr</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();
    for (</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="451" Path="xsd3CHHLDEWMTPBDJHBAAN7YHKUNI" extStr="MapStrStr.Entry">
                <xsc:Presentation>Arte::TypesXsd:MapStrStr.Entry</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> e : input.MapStrStr.EntryList) {
        funcsToExport.add(e.Key);
    }
   
    form.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="afhWA2LH6AHQJFZTK7UTSGZD3N7L4 mthPZDXVH3NVNDS7LPIFTZBBSROUY" Invoke="true">
                <xsc:Presentation>setSelectedFuncs</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(funcsToExport);
    return new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcLK6F6YWZHFHXFBOCHN7F3YTZPA mthWX4RH72LYZFKBHU3I76PFR6XPM" Invoke="true">
                <xsc:Presentation>FormHandlerNextDialogsRequest</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(null, form);
}
return null;</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthcmdEKWLCY4FXFEB5PKMA5IIA34MEU" Name="onCommand_Import" Nature="1" IsOverride="false">
        <AccessRules IsPublished="false"/>
        <Parameters>
          <Parameter Name="input" Id="mprSTWNCOXZ45H2ZBDGAJ4QFR5P7U">
            <Type TypeId="451" Path="xsdLL3UFHA3MBDWJBXUX6GNNLJH7Q" extStr="LibUserFuncGroupDocument"/>
          </Parameter>
        </Parameters>
        <ReturnType TypeId="451" Path="xsd3CHHLDEWMTPBDJHBAAN7YHKUNI" extStr="StrDocument"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="adcX5ZXTGXMBZDBJMCJYK364C6KEE">
                <xsc:Presentation>CfgManagement::CfgImportHelper.Interactive</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> helper = new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcX5ZXTGXMBZDBJMCJYK364C6KEE mthF7CT6CYKI5D5RHA7FRCQBNJ3R4" Invoke="true">
                <xsc:Presentation>CfgImportHelper.Interactive</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(false, true);
</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="aecW7BRVVQLHBE2FCNK7ZBRMAUJGM">
                <xsc:Presentation>LibUserFunc</xsc:Presentation>
              </xsc:TypeDeclaration>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="aecW7BRVVQLHBE2FCNK7ZBRMAUJGM mthPUPVPMEKABHE3PYQOX6F7LJ52Y" Invoke="true">
                <xsc:Presentation>importAll</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(input.LibUserFuncGroup.LibName, input.LibUserFuncGroup, helper);
return helper.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="adcQRT3DVIK6ZGTFCMBS46VE73IT4 mthLK52XSZFHZBCLIGUAS5CPEQ2AE" Invoke="true">
                <xsc:Presentation>getResultsAsHtmlStr</xsc:Presentation>
              </xsc:IdReference>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
    </Methods>
    <Entity EntityId="tblW7BRVVQLHBE2FCNK7ZBRMAUJGM"/>
    <Presentations>
      <Commands>
        <Command Id="cmdHDGPRBXDKNCJ5N2HCDM6AI74P4" Name="MoveLibUserFuncToOtherLib" TitleId="mlsFHHB7OC6PZEBPNCEAHYBSFD2XA" Nature="1" IconId="imgPMN5RK7CHFBHRD5QARYVF7IGFM" IsVisible="true" IsConfirmationRequired="false" Accessibility="3" Scope="2">
          <AccessRules IsPublished="false"/>
          <InType TypeId="411" Path="afhYOZO7B5T6BHBXBZW6NBVFHJEUU"/>
          <OutType TypeId="400" extStr="org.radixware.kernel.server.types.FormHandler.NextDialogsRequest"/>
        </Command>
        <Command Id="cmdGZUMJ4GVGRHYRL4QJLMWIWDZMQ" Name="Export" TitleId="mls7AESVJE73FHSDHH2VV45ED4XTE" Nature="3" IconId="imgYGRKUM6D5NFB7HJSZFG3KGBC6M" IsVisible="true" IsConfirmationRequired="false" ClientEnvironment="explorer" Accessibility="3" Scope="2">
          <AccessRules IsPublished="false"/>
          <InType TypeId="451" Path="xsd3CHHLDEWMTPBDJHBAAN7YHKUNI" extStr="MapStrStrDocument"/>
          <OutType TypeId="400" extStr="org.radixware.kernel.server.types.FormHandler.NextDialogsRequest"/>
        </Command>
        <Command Id="cmdEKWLCY4FXFEB5PKMA5IIA34MEU" Name="Import" TitleId="mlsNKHCDP57ZZDKPJMCERI4XD5I64" Nature="2" IconId="imgEVEBHW62BFDDBLQVX2YPL7ZERM" IsVisible="true" IsConfirmationRequired="false" ClientEnvironment="explorer" Accessibility="0" Scope="2">
          <AccessRules IsPublished="false"/>
          <InType TypeId="451" Path="xsdLL3UFHA3MBDWJBXUX6GNNLJH7Q" extStr="LibUserFuncGroupDocument"/>
          <OutType TypeId="451" Path="xsd3CHHLDEWMTPBDJHBAAN7YHKUNI" extStr="StrDocument"/>
        </Command>
      </Commands>
    </Presentations>
    <Extends TypeId="411" Path="pdcEntityGroup_______________">
      <xsc:GenericArguments>
        <xsc:Argument Alias="?">
          <xsc:Type TypeId="32" Path="aecW7BRVVQLHBE2FCNK7ZBRMAUJGM"/>
        </xsc:Argument>
      </xsc:GenericArguments>
    </Extends>
  </AdsClassDefinition>
</AdsDefinition>