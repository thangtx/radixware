<?xml version="1.0" encoding="UTF-8"?>
<AdsDefinition xmlns="http://schemas.radixware.org/adsdef.xsd" xmlns:xsc="http://schemas.radixware.org/xscml.xsd" FormatVersion="0">
  <AdsClassDefinition Id="pdcSqlStatement______________" Name="SqlStatement" Type="3" Environment="server">
    <AccessRules>
      <Transparence Extendable="false"/>
    </AccessRules>
    <Headers>
      <Src Name="HeaderadcYY6CWP4RPJEZ5MGSXNALL6X2SI">
        <xsc:Item>
          <xsc:Java>import java.sql.PreparedStatement;
import java.sql.SQLException;

</xsc:Java>
        </xsc:Item>
      </Src>
    </Headers>
    <Bodies>
      <Src Name="Bodyadc57SWDCD53REVPJXMQ7RPYT3LJQ">
        <xsc:Item>
          <xsc:Java>private PreparedStatement stmt = null;

protected void finalize() throws Throwable {
    final PreparedStatement statement = stmt;
    if (statement != null) {
        if (statement.getConnection() instanceof org.radixware.kernel.server.jdbc.RadixConnection) {
            ((org.radixware.kernel.server.jdbc.RadixConnection) statement.getConnection()).scheduleStatementToClose(statement);
        } else {
            statement.close();
        }
    }
    super.finalize();
}</xsc:Java>
        </xsc:Item>
      </Src>
    </Bodies>
    <MethodGroup Id="cmgXEEWNYTI25FM7GICJF3IKQD5RU" Name="Root"/>
    <PropertyGroup Id="cpgZD53DNGQNFFHLMNFOLOKBQAQMI" Name="Root"/>
    <Properties/>
    <Methods>
      <Method Id="mth46JBRXHCX7NRDCKAABIFNQAABA" Name="setInt" Nature="0" IsOverride="false">
        <AccessRules/>
        <Parameters>
          <Parameter Name="paramIdx" Id="mprT7FC3ZRSQVHBBCZGA7OH5ZOJ5E">
            <Type TypeId="401" extStr="int"/>
          </Parameter>
          <Parameter Name="x" Id="mpr4SNEMWDCXFAEDMRWXDE6DXC5QA">
            <Type TypeId="2"/>
          </Parameter>
        </Parameters>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>try {
   if( x == null )
      stmt.setNull( paramIdx, java.sql.Types.BIGINT );                    
   else
      stmt.setLong( paramIdx, x.longValue() );
}
catch( SQLException e ) {
   throw new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axcCOTAVB7C3ZBCZFMSPUVC3CZSDI mth2XWD35QT2BASFBJ7LDVLOSC66U" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>( "Unable to set statement int parameter, index is " + String.valueOf( paramIdx )+": "+e.getMessage(), e );
}   


</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mth5ELOHTPBX7NRDCKAABIFNQAABA" Name="setStr" Nature="0" IsOverride="false">
        <AccessRules/>
        <Parameters>
          <Parameter Name="paramIdx" Id="mprYEXTRUWVYZEGJFYFILFIF3HQUE">
            <Type TypeId="401" extStr="int"/>
          </Parameter>
          <Parameter Name="x" Id="mprST4SFDDDSNG6LFYKTARKCNGSZY">
            <Type TypeId="21"/>
          </Parameter>
        </Parameters>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>try {
   stmt.setString( paramIdx, x );
}
catch( SQLException e ) {
   throw new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axcCOTAVB7C3ZBCZFMSPUVC3CZSDI mth2XWD35QT2BASFBJ7LDVLOSC66U" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>( "Unable to set statement str parameter, index is " + String.valueOf( paramIdx )+": "+e.getMessage(), e );
}   


</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mth6BDUTKHZXHORDF72ABIFNQAABA" Name="getPreparedStatement" Nature="0" IsOverride="false">
        <AccessRules/>
        <ReturnType TypeId="400" extStr="java.sql.PreparedStatement"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>return stmt;</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mth6CCVO7AUYDNRDCKAABIFNQAABA" Name="setClob" Nature="0" IsOverride="false">
        <AccessRules/>
        <Parameters>
          <Parameter Name="paramIdx" Id="mprBWCDGJ2Q5RFVRFHRCW3YIDC5AU">
            <Type TypeId="401" extStr="int"/>
          </Parameter>
          <Parameter Name="x" Id="mprOCK5DZJDNVGCPNLU7ZW7I6OW4M">
            <Type TypeId="27"/>
          </Parameter>
        </Parameters>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>try {
   stmt.setClob( paramIdx, x );
}
catch( SQLException e ) {
   throw new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axcCOTAVB7C3ZBCZFMSPUVC3CZSDI mth2XWD35QT2BASFBJ7LDVLOSC66U" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>( "Unable to set statement clob parameter, index is " + String.valueOf( paramIdx )+": "+e.getMessage(), e );
}   


</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mth6QO3SRXDX7NRDCKAABIFNQAABA" Name="setNum" Nature="0" IsOverride="false">
        <AccessRules/>
        <Parameters>
          <Parameter Name="paramIdx" Id="mprJOYSFAC33RGOLFRU2C2ZTTRY64">
            <Type TypeId="401" extStr="int"/>
          </Parameter>
          <Parameter Name="x" Id="mpr34J4AT2MTBEHZCIRDYU46QTXCA">
            <Type TypeId="11"/>
          </Parameter>
        </Parameters>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>try {
   stmt.setBigDecimal( paramIdx, x );
}
catch( SQLException e ) {
   throw new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axcCOTAVB7C3ZBCZFMSPUVC3CZSDI mth2XWD35QT2BASFBJ7LDVLOSC66U" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>( "Unable to set statement num parameter, index is " + String.valueOf( paramIdx )+": "+e.getMessage(), e );
}   


</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthIX5454Y4YDNRDCKAABIFNQAABA" Name="prepare" Nature="0" IsOverride="false">
        <AccessRules IsStatic="true"/>
        <Parameters>
          <Parameter Name="sql" Id="mprYSEXA3P2CZDDHKRE4B7752LJFE">
            <Type TypeId="21"/>
          </Parameter>
          <Parameter Name="resultSetType" Id="mprI634U4WIFVEDJKDKX43PWQNYMM">
            <Type TypeId="401" extStr="int"/>
          </Parameter>
          <Parameter Name="resultSetConcurrency" Id="mprJHF2JALV3VDY5BBKY7CHDORYKU">
            <Type TypeId="401" extStr="int"/>
          </Parameter>
          <Parameter Name="closeOnSeanceEnd" Id="mprVVFQF35OZ5F3DK54KTXFGROKKY">
            <Type TypeId="401" extStr="boolean"/>
          </Parameter>
        </Parameters>
        <ReturnType TypeId="411" Path="pdcSqlStatement______________"/>
        <ProfileInfo timingSectionId="Radix.SqlClass.QryPrepare"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="pdcSqlStatement______________"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> dbpStmt = new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="pdcSqlStatement______________ mthOY2TZDO7X7NRDCKAABIFNQAABA" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();

try {
   dbpStmt.stmt = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="pdcArte______________________"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="pdcArte______________________ mthPDUPVLPYXTNRDISQAAAAAAAAAA" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>().prepareStatement( sql, resultSetType, resultSetConcurrency );
}
catch( SQLException e ) {
   throw new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axcCOTAVB7C3ZBCZFMSPUVC3CZSDI mth2XWD35QT2BASFBJ7LDVLOSC66U" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>( "Unable to create JDBC prepared statement", e );
}   

if( closeOnSeanceEnd ) {
   </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="pdcArte______________________"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="pdcArte______________________ mthX22GMFYBKNC6RGIHJSGRQQ7K2A" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>().getDbConnection().registerTemporaryStatement( dbpStmt.stmt );   
}

return dbpStmt; </xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthJC3P3L7DX7NRDCKAABIFNQAABA" Name="setDateTime" Nature="0" IsOverride="false">
        <AccessRules/>
        <Parameters>
          <Parameter Name="paramIdx" Id="mprJ37GKDBF6JA4PEAUXLMCCE43UM">
            <Type TypeId="401" extStr="int"/>
          </Parameter>
          <Parameter Name="x" Id="mprJEC4HOGQRZHUFGNU62NJA7UTIM">
            <Type TypeId="12"/>
          </Parameter>
        </Parameters>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>try {
   stmt.setTimestamp( paramIdx, x );
}
catch( SQLException e ) {
   throw new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axcCOTAVB7C3ZBCZFMSPUVC3CZSDI mth2XWD35QT2BASFBJ7LDVLOSC66U" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>( "Unable to set statement DateTime parameter, index is " + String.valueOf( paramIdx )+": "+e.getMessage(), e );
}   


</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthK5ULGFQYYDNRDCKAABIFNQAABA" Name="executeQuery" Nature="0" IsOverride="false">
        <AccessRules/>
        <ReturnType TypeId="411" Path="pdcResultSet_________________"/>
        <ProfileInfo timingSectionId="Radix.SqlClass.QryExec"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>try {
    final </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="pdcResultSet_________________"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> result = new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="pdcResultSet_________________"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();
    result.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="pdcCursor____________________ mthZIKY4SGQ7FECZDX4QGLRCYFGPA" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(stmt.executeQuery());
    return result;
} catch( SQLException e ) {
    throw new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axcCOTAVB7C3ZBCZFMSPUVC3CZSDI mth2XWD35QT2BASFBJ7LDVLOSC66U" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>( "Unable to execute query and create cursor", e );
}   </xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthL7EMJQQWYDNRDCKAABIFNQAABA" Name="setBlob" Nature="0" IsOverride="false">
        <AccessRules/>
        <Parameters>
          <Parameter Name="paramIdx" Id="mprKCCXW7I2SBBNFJRU7FGSY6NFVI">
            <Type TypeId="401" extStr="int"/>
          </Parameter>
          <Parameter Name="x" Id="mpr4SAND5M7KNCFLH5KUYRP2T3ERU">
            <Type TypeId="28"/>
          </Parameter>
        </Parameters>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>try {
   stmt.setBlob( paramIdx, x );
}
catch( SQLException e ) {
   throw new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axcCOTAVB7C3ZBCZFMSPUVC3CZSDI mth2XWD35QT2BASFBJ7LDVLOSC66U" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>( "Unable to set statement blob parameter, index is " + String.valueOf( paramIdx )+": "+e.getMessage(), e );
}   


</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthLR27IO7HANC4HONMUYFJU6TPKE" Name="addBatch" Nature="0" IsOverride="false">
        <AccessRules/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>try {
   stmt.addBatch();
}
catch( SQLException e ) {
   throw new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axcCOTAVB7C3ZBCZFMSPUVC3CZSDI mth2XWD35QT2BASFBJ7LDVLOSC66U" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>( "Unable to add batch: "+e.getMessage(), e );
}   
</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthMMCAURHAX7NRDCKAABIFNQAABA" Name="prepare" Nature="0" IsOverride="false">
        <AccessRules IsStatic="true"/>
        <Parameters>
          <Parameter Name="sql" Id="mprWXCJ7VOFXVCLZNXG5UG7EBVFW4">
            <Type TypeId="21"/>
          </Parameter>
        </Parameters>
        <ReturnType TypeId="411" Path="pdcSqlStatement______________"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>return </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="pdcSqlStatement______________ mthUW3PTWPGO7OBDCPUABIFNQAABA" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>(sql, true);</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthOY2TZDO7X7NRDCKAABIFNQAABA" Name="SqlStatement" Nature="0" IsConstructor="true" IsOverride="false">
        <AccessRules Access="2" IsPublished="false"/>
        <Sources>
          <Src/>
        </Sources>
      </Method>
      <Method Id="mthPGXBWJCU4JEDNLJKWTDHI246TU" Name="executeBatch" Nature="0" IsOverride="false">
        <AccessRules/>
        <ReturnType TypeId="401" extStr="int" Dimension="1"/>
        <ProfileInfo timingSectionId="Radix.SqlClass.BatchExec"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>
try {
   return stmt.executeBatch();
}
catch( SQLException e ) {
   throw new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axcCOTAVB7C3ZBCZFMSPUVC3CZSDI mth2XWD35QT2BASFBJ7LDVLOSC66U" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>( "Unable to execute batch: "+e.getMessage(), e );
}</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthRN5BV6IWYDNRDCKAABIFNQAABA" Name="executeUpdate" Nature="0" IsOverride="false">
        <AccessRules/>
        <ReturnType TypeId="401" extStr="int"/>
        <ProfileInfo timingSectionId="Radix.SqlClass.QryExec"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>try {
   return stmt.executeUpdate();
}
catch( SQLException e ) {
   throw new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axcCOTAVB7C3ZBCZFMSPUVC3CZSDI mth2XWD35QT2BASFBJ7LDVLOSC66U" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>( "Unable to execute update: "+e.getMessage(), e );
}   


</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthT75UUGXEX7NRDCKAABIFNQAABA" Name="setChar" Nature="0" IsOverride="false">
        <AccessRules/>
        <Parameters>
          <Parameter Name="paramIdx" Id="mprDMPZMMVYOZAPHL47UK76L2VO5E">
            <Type TypeId="401" extStr="int"/>
          </Parameter>
          <Parameter Name="x" Id="mprZ2K3EPHXFNGZVJZ2LCUTHXPZCU">
            <Type TypeId="3"/>
          </Parameter>
        </Parameters>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>try {
   stmt.setString( paramIdx, x.toString() );
}
catch( SQLException e ) {
   throw new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axcCOTAVB7C3ZBCZFMSPUVC3CZSDI mth2XWD35QT2BASFBJ7LDVLOSC66U" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>( "Unable to set statement char parameter, index is " + String.valueOf( paramIdx )+": "+e.getMessage(), e );
}   


</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthUPVSS6PDX7NRDCKAABIFNQAABA" Name="setBool" Nature="0" IsOverride="false">
        <AccessRules/>
        <Parameters>
          <Parameter Name="paramIdx" Id="mprFIFO6ZR3MRENRERGGFGJUDOMLY">
            <Type TypeId="401" extStr="int"/>
          </Parameter>
          <Parameter Name="x" Id="mprLL56444G3RH2ZMQ7Q6XVK3YLCY">
            <Type TypeId="1"/>
          </Parameter>
        </Parameters>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>try {
   if( x == null )
      stmt.setNull( paramIdx, java.sql.Types.BIT );                    
   else
      stmt.setBoolean( paramIdx, x.booleanValue() );
}
catch( SQLException e ) {
   throw new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axcCOTAVB7C3ZBCZFMSPUVC3CZSDI mth2XWD35QT2BASFBJ7LDVLOSC66U" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>( "Unable to set statement bool parameter, index is " + String.valueOf( paramIdx )+": "+e.getMessage(), e );
}   


</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthUW3PTWPGO7OBDCPUABIFNQAABA" Name="prepare" Nature="0" IsOverride="false">
        <AccessRules IsStatic="true"/>
        <Parameters>
          <Parameter Name="sql" Id="mprW6JVYBT6YZAUDO23BMLVUUWSHA">
            <Type TypeId="21"/>
          </Parameter>
          <Parameter Name="closeOnSeanceEnd" Id="mpr47P4FXBPHZDKHMFS6LIURHEV64">
            <Type TypeId="401" extStr="boolean"/>
          </Parameter>
        </Parameters>
        <ReturnType TypeId="411" Path="pdcSqlStatement______________"/>
        <ProfileInfo timingSectionId="Radix.SqlClass.QryPrepare"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="pdcSqlStatement______________"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java> dbpStmt = new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="pdcSqlStatement______________ mthOY2TZDO7X7NRDCKAABIFNQAABA" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>();

try {
   dbpStmt.stmt = </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="pdcArte______________________"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="pdcArte______________________ mthPDUPVLPYXTNRDISQAAAAAAAAAA" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>().prepareStatement( sql );
}
catch( SQLException e ) {
   throw new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axcCOTAVB7C3ZBCZFMSPUVC3CZSDI mth2XWD35QT2BASFBJ7LDVLOSC66U" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>( "Unable to create JDBC prepared statement", e );
}   

if( closeOnSeanceEnd )
   </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="pdcArte______________________"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="pdcArte______________________ mthX22GMFYBKNC6RGIHJSGRQQ7K2A" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>().getDbConnection().registerTemporaryStatement( dbpStmt.stmt );

return dbpStmt; </xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthWSWMX4ECYXNRDCKEABIFNQAABA" Name="close" Nature="0" IsOverride="false">
        <AccessRules/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>try {
   stmt.close(); 
   </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:TypeDeclaration TypeId="411" Path="pdcArte______________________"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>.</xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="pdcArte______________________ mthX22GMFYBKNC6RGIHJSGRQQ7K2A" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>().getDbConnection().unregisterTemporaryStatement(stmt);
}
catch( SQLException e ) {
   throw new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axcCOTAVB7C3ZBCZFMSPUVC3CZSDI mth2XWD35QT2BASFBJ7LDVLOSC66U" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>( "Unable to close statement", e );
}   


</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthG7LW3EKETVCBDBV2KLMUURVV74" Name="setObject" Nature="0" IsOverride="false">
        <AccessRules/>
        <Parameters>
          <Parameter Name="paramIdx" Id="mpr6MGHFIQO2ZACHI2XFZFR6ZPG3I">
            <Type TypeId="401" extStr="int"/>
          </Parameter>
          <Parameter Name="x" Id="mprKDVRKXAV2BBPRPORM7CQXQYQHE">
            <Type TypeId="400" extStr="java.lang.Object"/>
          </Parameter>
        </Parameters>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>try {
   stmt.setObject( paramIdx, x );
}
catch( SQLException e ) {
   throw new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axcCOTAVB7C3ZBCZFMSPUVC3CZSDI mth2XWD35QT2BASFBJ7LDVLOSC66U" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>( "Unable to set statement object parameter, index is " + String.valueOf( paramIdx )+": "+e.getMessage(), e );
}   


</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mth22G3FRYJ3JCI7O7GTCK6HHKLRI" Name="setSqlXml" Nature="0" IsOverride="false">
        <AccessRules/>
        <Parameters>
          <Parameter Name="paramIdx" Id="mprQXGM2S4MWVCNJCQ62YZBSWF6IA">
            <Type TypeId="401" extStr="int"/>
          </Parameter>
          <Parameter Name="x" Id="mprTHDQ6QP6LBH5BE3W33232WIEEA">
            <Type TypeId="400" extStr="java.sql.SQLXML"/>
          </Parameter>
        </Parameters>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>try {
   stmt.setSQLXML( paramIdx, x );
}
catch( SQLException e ) {
   throw new </xsc:Java>
            </xsc:Item>
            <xsc:Item>
              <xsc:IdReference Path="axcCOTAVB7C3ZBCZFMSPUVC3CZSDI mth2XWD35QT2BASFBJ7LDVLOSC66U" Invoke="true"/>
            </xsc:Item>
            <xsc:Item>
              <xsc:Java>( "Unable to set statement SQLXML parameter, index is " + String.valueOf( paramIdx )+": "+e.getMessage(), e );
}   


</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthQH5FQU2PV5EYPD5MDRJ7WSUR6Q" Name="setReadOnly" Nature="0" IsOverride="false">
        <AccessRules/>
        <Parameters>
          <Parameter Name="readOnly" Id="mpr522F2J4ERJDOPHD4RVMXLUVMAA">
            <Type TypeId="401" extStr="boolean"/>
          </Parameter>
        </Parameters>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>((org.radixware.kernel.server.jdbc.RadixPreparedStatement) stmt).setReadOnly(readOnly);</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
      <Method Id="mthMHRDNF6DX5GQNOGCQKYV3D5U5A" Name="isReadOnly" Nature="0" IsOverride="false">
        <AccessRules/>
        <ReturnType TypeId="401" extStr="boolean"/>
        <Sources>
          <Src>
            <xsc:Item>
              <xsc:Java>return ((org.radixware.kernel.server.jdbc.RadixPreparedStatement) stmt).isReadOnly();</xsc:Java>
            </xsc:Item>
          </Src>
        </Sources>
      </Method>
    </Methods>
  </AdsClassDefinition>
</AdsDefinition>